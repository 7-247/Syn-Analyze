
token:int
symbol stack:
[('#', -1, 1)]
status stack:
[0]
token:main
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0)]
status stack:
[0, 5]
token:(
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1)]
status stack:
[0, 5, 13]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2)]
status stack:
[0, 5, 13, 19]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0)]
status stack:
[0, 5, 13, 19, 36]
token:{
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4)]
status stack:
[0, 5, 13, 19, 36, 72]
token:int
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103]
token:int
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), ('keyword', 'int', 0, 7)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 224]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223]
token:=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), ('1', 'number', 0, 10)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 33]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'primary_expression', 1, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 31]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'third_expression', 2, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 29]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'second_expression', 3, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 28]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'first_expression', 4, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 27]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'single_bool_expression', 5, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 26]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'and_bool_expression', 6, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 25]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'or_bool_expression', 7, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 24]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'constant_expression', 8, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 23]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'expression', 9, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 22]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), ('a', 'identifier', 0, 8), ('operator', '=', 0, 9), (None, 'expression', 9, 0), (None, 'declaration_parameter_suffix', 1, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 12, 16, 22, 39]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), ('b', 'identifier', 0, 13)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 12]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), ('b', 'identifier', 0, 13), (None, 'declaration_parameter_suffix', 1, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 12, 17]
token:,
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15]
token:=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), ('1', 'number', 0, 18)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 33]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'primary_expression', 1, 6)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 31]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'third_expression', 2, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 29]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'second_expression', 3, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 28]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), ('operator', '+', 0, 19)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 52]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), ('2', 'number', 0, 20)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 88]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'primary_expression', 1, 8)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 86]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'third_expression', 2, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 84]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83]
token:(
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), ('operator', '*', 0, 21)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 55]
token:(
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), ('3', 'number', 0, 23)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 69]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'primary_expression', 1, 10)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 67]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'third_expression', 2, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 65]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'second_expression', 3, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 64]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2), ('operator', '+', 0, 24)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63, 52]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2), (None, 'first_operator', 1, 11)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63, 98]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2), (None, 'first_operator', 1, 11), ('4', 'number', 0, 25)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63, 98, 146]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2), (None, 'first_operator', 1, 11), (None, 'primary_expression', 1, 12)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63, 98, 144]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2), (None, 'first_operator', 1, 11), (None, 'third_expression', 2, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63, 98, 142]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 4, 2), (None, 'first_operator', 1, 11), (None, 'second_expression', 3, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63, 98, 141]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'first_expression', 5, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 63]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'single_bool_expression', 6, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 62]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'and_bool_expression', 7, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 61]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'or_bool_expression', 8, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 60]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'constant_expression', 9, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 59]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'expression', 10, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 272]
token:-
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), ('limiter', '(', 0, 22), (None, 'expression', 10, 1), ('limiter', ')', 0, 26)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 180, 272, 365]
token:-
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 3, 2), (None, 'second_operator', 1, 9), (None, 'primary_expression', 11, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 177]
token:-
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 4, 1), (None, 'first_operator', 1, 7), (None, 'second_expression', 12, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83]
token:-
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), ('operator', '-', 0, 27)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 53]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51]
token:/
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), ('6', 'number', 0, 28)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 88]
token:/
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'primary_expression', 1, 14)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 86]
token:/
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'third_expression', 2, 6)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 84]
token:/
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'second_expression', 3, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'second_expression', 3, 5), ('operator', '/', 0, 29)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 56]
token:number
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'second_expression', 3, 5), (None, 'second_operator', 1, 15)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'second_expression', 3, 5), (None, 'second_operator', 1, 15), ('3', 'number', 0, 30)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 179]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'second_expression', 3, 5), (None, 'second_operator', 1, 15), (None, 'primary_expression', 1, 16)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83, 127, 177]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 13, 0), (None, 'first_operator', 1, 13), (None, 'second_expression', 4, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27, 51, 83]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'first_expression', 14, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 27]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'single_bool_expression', 15, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 26]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'and_bool_expression', 16, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 25]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'or_bool_expression', 17, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 24]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'constant_expression', 18, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 23]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'expression', 19, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 22]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), ('c', 'identifier', 0, 16), ('operator', '=', 0, 17), (None, 'expression', 19, 0), (None, 'declaration_parameter_suffix', 1, 17)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 12, 16, 22, 39]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), (None, 'declaration_parameter', 20, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 21]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), ('limiter', ',', 0, 15), (None, 'declaration_parameter', 20, 0), (None, 'declaration_parameter_suffix', 1, 18)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 15, 21, 38]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), ('limiter', ',', 0, 12), (None, 'declaration_parameter', 2, 1), (None, 'declaration_parameter_suffix', 21, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 15, 21, 38]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), (None, 'declaration_parameter_suffix', 22, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 424]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'type_specifier', 1, 2), (None, 'declaration_parameter', 10, 0), (None, 'declaration_parameter_suffix', 22, 0), ('limiter', ';', 0, 33)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 223, 332, 424, 524]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'declaration', 23, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 222]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'statement', 24, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 211]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 1, 1), (None, 'statement', 24, 0), (None, 'M', 1, 19)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 211, 302]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153]
token:%=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), ('operator', '%=', 0, 36)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 312]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), ('b', 'identifier', 0, 37)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 32]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'primary_expression', 1, 21)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 31]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'third_expression', 2, 7)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 29]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'second_expression', 3, 6)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 28]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'first_expression', 4, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 27]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'single_bool_expression', 5, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 26]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'and_bool_expression', 6, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 25]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'or_bool_expression', 7, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 24]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'constant_expression', 8, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 23]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), ('a', 'identifier', 0, 35), (None, 'assignment_operator', 1, 20), (None, 'expression', 9, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 215, 306, 413]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'assignment_expression', 10, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 214]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'assignment_expression', 10, 2), (None, 'assignment_expression_list_suffix', 1, 22)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 214, 304]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'assignment_expression_list', 11, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 213]
token:while
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'assignment_expression_list', 11, 1), ('limiter', ';', 0, 39)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 213, 303]
token:while
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'expression_statement', 12, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 212]
token:while
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'statement', 13, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 211]
token:while
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 25, 0), (None, 'statement', 13, 1), (None, 'M', 1, 23)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 211, 302]
token:while
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153]
token:(
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422]
token:<=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), ('a', 'identifier', 0, 44)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 68]
token:<=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'primary_expression', 1, 25)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 67]
token:<=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'third_expression', 2, 8)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 65]
token:<=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'second_expression', 3, 7)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 64]
token:<=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'first_expression', 4, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 63]
token:<=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62]
token:!
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), ('operator', '<=', 0, 45)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 49]
token:!
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26), ('operator', '!', 0, 46)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97, 136]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26), ('operator', '!', 0, 46), ('c', 'identifier', 0, 47)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97, 136, 138]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26), ('operator', '!', 0, 46), (None, 'primary_expression', 1, 27)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97, 136, 204]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26), (None, 'third_expression', 2, 9)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97, 135]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26), (None, 'second_expression', 3, 8)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97, 134]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 5, 3), (None, 'bool_operator', 1, 26), (None, 'first_expression', 4, 6)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62, 97, 133]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'single_bool_expression', 6, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 62]
token:&&
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), ('operator', '&&', 0, 48)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 43]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132]
token:>
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), ('b', 'identifier', 0, 50)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 199]
token:>
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'primary_expression', 1, 30)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 198]
token:>
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'third_expression', 2, 10)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 196]
token:>
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'second_expression', 3, 9)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 195]
token:>
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'first_expression', 4, 7)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 194]
token:>
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), ('operator', '>', 0, 51)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 46]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), (None, 'bool_operator', 1, 31)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 279]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), (None, 'bool_operator', 1, 31), ('a', 'identifier', 0, 52)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 279, 392]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), (None, 'bool_operator', 1, 31), (None, 'primary_expression', 1, 32)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 279, 391]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), (None, 'bool_operator', 1, 31), (None, 'third_expression', 2, 11)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 279, 389]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), (None, 'bool_operator', 1, 31), (None, 'second_expression', 3, 10)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 279, 388]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 5, 4), (None, 'bool_operator', 1, 31), (None, 'first_expression', 4, 8)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193, 279, 387]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 7, 3), (None, 'and_operator', 1, 28), (None, 'M', 1, 29), (None, 'single_bool_expression', 6, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61, 96, 132, 193]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'and_bool_expression', 8, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 61]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'or_bool_expression', 9, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 60]
token:)
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523]
token:{
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626]
token:{
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331]
token:-=
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), ('operator', '-=', 0, 58)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 309]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), ('a', 'identifier', 0, 59)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 32]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'primary_expression', 1, 36)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 31]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'third_expression', 2, 12)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 29]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'second_expression', 3, 11)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 28]
token:+
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), ('operator', '+', 0, 60)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 52]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), ('b', 'identifier', 0, 61)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 87]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'primary_expression', 1, 38)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 86]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'third_expression', 2, 13)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 84]
token:*
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'second_expression', 3, 12)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 83]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'second_expression', 3, 12), ('operator', '*', 0, 62)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 83, 55]
token:identifier
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'second_expression', 3, 12), (None, 'second_operator', 1, 39)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 83, 127]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'second_expression', 3, 12), (None, 'second_operator', 1, 39), ('c', 'identifier', 0, 63)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 83, 127, 178]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'second_expression', 3, 12), (None, 'second_operator', 1, 39), (None, 'primary_expression', 1, 40)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 83, 127, 177]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 4, 9), (None, 'first_operator', 1, 37), (None, 'second_expression', 4, 10)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27, 51, 83]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'first_expression', 5, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 27]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'single_bool_expression', 6, 5)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 26]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'and_bool_expression', 7, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 25]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'or_bool_expression', 8, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 24]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'constant_expression', 9, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 23]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), ('c', 'identifier', 0, 57), (None, 'assignment_operator', 1, 35), (None, 'expression', 10, 4)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 215, 306, 413]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'assignment_expression', 11, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 214]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'assignment_expression', 11, 2), (None, 'assignment_expression_list_suffix', 1, 41)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 214, 304]
token:;
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'assignment_expression_list', 12, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 213]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'assignment_expression_list', 12, 2), ('limiter', ';', 0, 65)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 213, 303]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'expression_statement', 13, 2)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 212]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'statement', 14, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 211]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 1, 34), (None, 'statement', 14, 1), (None, 'M', 1, 42)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 211, 302]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 15, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), ('limiter', '{', 0, 55), (None, 'statement_list', 15, 1), ('limiter', '}', 0, 67)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 221, 331, 423]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), (None, 'compound_statement', 16, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 220]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), ('keyword', 'while', 0, 41), ('limiter', '(', 0, 42), (None, 'M', 1, 24), (None, 'constant_expression', 10, 3), ('limiter', ')', 0, 53), (None, 'M', 1, 33), (None, 'statement', 17, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 219, 330, 422, 523, 626, 710, 812]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), (None, 'iteration_statement', 18, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 218]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), (None, 'statement', 19, 1)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 211]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 26, 0), (None, 'statement', 19, 1), (None, 'M', 1, 43)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 211, 302]
token:}
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 27, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153]
token:#
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), ('limiter', '{', 0, 5), (None, 'statement_list', 27, 0), ('limiter', '}', 0, 69)]
status stack:
[0, 5, 13, 19, 36, 72, 103, 153, 210]
token:#
symbol stack:
[('#', -1, 1), ('keyword', 'int', 0, 0), ('keyword', 'main', 0, 1), ('limiter', '(', 0, 2), (None, 'function_parameter_list', 1, 0), ('limiter', ')', 0, 4), (None, 'compound_statement', 28, 0)]
status stack:
[0, 5, 13, 19, 36, 72, 102]
token:#
symbol stack:
[('#', -1, 1), (None, 'function_definition', 29, 0)]
status stack:
[0, 9]
token:#
symbol stack:
[('#', -1, 1), (None, 'external_declaration', 30, 0)]
status stack:
[0, 2]
token:#
symbol stack:
[('#', -1, 1), (None, 'external_declaration', 30, 0), (None, 'start', 1, 44)]
status stack:
[0, 2, 10]
token:#
symbol stack:
[('#', -1, 1), (None, 'start', 31, 0)]
status stack:
[0, 1]
Syntax Analyze Successfully!
