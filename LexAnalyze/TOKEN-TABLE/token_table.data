1 keyword int
1 identifier a
1 limiter ;
5 keyword int
5 identifier b
5 limiter ;
9 keyword int
9 identifier program
9 limiter (
9 keyword int
9 identifier a
9 limiter ,
9 keyword int
9 identifier b
9 limiter ,
9 keyword int
9 identifier c
9 limiter )
13 limiter {
17 keyword int
17 identifier i
17 limiter ;
21 keyword int
21 identifier j
21 limiter ;
25 identifier i
25 operator =
25 number 0
25 limiter ;
29 keyword if
29 limiter (
29 identifier a
29 operator >
29 limiter (
29 identifier b
29 operator +
29 identifier c
29 limiter )
29 limiter )
33 limiter {
37 identifier j
37 operator =
37 identifier a
37 operator +
37 limiter (
37 identifier b
37 operator *
37 identifier c
37 operator +
37 number 1
37 limiter )
37 limiter ;
41 limiter }
45 keyword else
49 limiter {
53 identifier j
53 operator =
53 identifier a
53 limiter ;
57 limiter }
61 keyword while
61 limiter (
61 identifier i
61 operator <=
61 number 100
61 limiter )
65 limiter {
69 identifier i
69 operator =
69 identifier j
69 operator *
69 number 2
69 limiter ;
73 limiter }
77 keyword return
77 identifier i
77 limiter ;
81 limiter }
85 keyword int
85 identifier demo
85 limiter (
85 keyword int
85 identifier a
85 limiter )
89 limiter {
93 identifier a
93 operator =
93 identifier a
93 operator +
93 number 2
93 limiter ;
97 keyword return
97 identifier a
97 operator *
97 number 2
97 limiter ;
101 limiter }
105 keyword void
105 identifier main
105 limiter (
105 keyword void
105 limiter )
109 limiter {
113 keyword int
113 identifier a
113 limiter ;
117 keyword int
117 identifier b
117 limiter ;
121 keyword int
121 identifier c
121 limiter ;
125 identifier a
125 operator =
125 number 3
125 limiter ;
129 identifier b
129 operator =
129 number 4
129 limiter ;
133 identifier c
133 operator =
133 number 2
133 limiter ;
137 identifier a
137 operator =
137 identifier program
137 limiter (
137 identifier a
137 limiter ,
137 identifier b
137 limiter ,
137 identifier demo
137 limiter (
137 identifier c
137 limiter )
137 limiter ;
141 keyword return
141 limiter ;
145 limiter }
