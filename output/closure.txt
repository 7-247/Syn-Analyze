单个项目的闭包：
0     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'return'}
   {0, 515, 659, 4248, 4253, 288, 293, 4262, 302, 180, 4280, 4281, 4282, 443, 320, 321, 322, 72, 587, 720, 725, 216, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
1     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'for'}
   {1, 515, 659, 4249, 4253, 289, 293, 4262, 302, 181, 4280, 4281, 4282, 443, 320, 321, 322, 73, 587, 721, 725, 217, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
2     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '!='}
   {2, 515, 659, 4250, 4253, 290, 293, 4262, 302, 182, 4280, 4281, 4282, 443, 320, 321, 322, 74, 587, 722, 725, 218, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
3     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': ','}
   {3, 515, 659, 4251, 4253, 291, 293, 4262, 302, 183, 4280, 4281, 4282, 443, 320, 321, 322, 75, 587, 723, 725, 219, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
4     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '#'}
   {515, 4, 659, 4252, 4253, 292, 293, 4262, 302, 184, 4281, 4280, 443, 4282, 320, 321, 322, 587, 76, 724, 725, 220, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
5     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'int'}
   {515, 5, 659, 4253, 293, 4262, 302, 4280, 4281, 185, 4282, 443, 320, 321, 322, 587, 77, 725, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
6     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'if'}
   {515, 6, 659, 4253, 4254, 293, 294, 4262, 302, 4280, 4281, 186, 443, 4282, 320, 321, 322, 587, 78, 725, 726, 221, 222, 734, 230, 752, 753, 754, 371, 248, 249, 250}
7     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '('}
   {515, 7, 659, 4253, 4255, 293, 4262, 295, 302, 4280, 4281, 4282, 443, 187, 320, 321, 322, 587, 79, 725, 727, 221, 734, 223, 230, 752, 753, 754, 371, 248, 249, 250}
8     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'else'}
   {515, 8, 659, 4253, 4256, 293, 4262, 296, 302, 4280, 4281, 4282, 443, 188, 320, 321, 322, 587, 80, 725, 728, 221, 734, 224, 230, 752, 753, 754, 371, 248, 249, 250}
9     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '*'}
   {515, 9, 659, 4253, 4257, 293, 4262, 297, 302, 4280, 4281, 4282, 443, 189, 320, 321, 322, 587, 81, 725, 729, 221, 734, 225, 230, 752, 753, 754, 371, 248, 249, 250}
10    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '-='}
   {515, 10, 659, 4253, 4258, 293, 4262, 298, 302, 4280, 4281, 4282, 443, 190, 320, 321, 322, 587, 82, 725, 730, 221, 734, 226, 230, 752, 753, 754, 371, 248, 249, 250}
11    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'identifier'}
   {515, 11, 659, 4253, 4259, 293, 4262, 299, 302, 4280, 4281, 4282, 443, 191, 320, 321, 322, 587, 83, 725, 731, 221, 734, 227, 230, 752, 753, 754, 371, 248, 249, 250}
12    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '<='}
   {515, 12, 659, 4253, 4260, 293, 4262, 300, 302, 4280, 4281, 4282, 443, 192, 320, 321, 322, 587, 84, 725, 732, 221, 734, 228, 230, 752, 753, 754, 371, 248, 249, 250}
13    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '>'}
   {515, 13, 659, 4253, 293, 4261, 4262, 301, 302, 4280, 4281, 4282, 443, 320, 193, 321, 322, 587, 85, 725, 221, 733, 734, 229, 230, 752, 753, 754, 371, 248, 249, 250}
14    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'void'}
   {515, 14, 659, 4253, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 194, 322, 587, 725, 86, 221, 734, 230, 752, 753, 754, 371, 248, 249, 250}
15    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '/='}
   {515, 15, 659, 4253, 293, 4262, 4263, 302, 303, 4280, 4281, 4282, 443, 320, 321, 322, 195, 587, 725, 87, 221, 734, 735, 230, 231, 752, 753, 754, 371, 248, 249, 250}
16    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '/'}
   {515, 16, 659, 4253, 293, 4262, 4264, 302, 304, 4280, 4281, 4282, 443, 320, 321, 322, 196, 587, 725, 88, 221, 734, 736, 230, 232, 752, 753, 754, 371, 248, 249, 250}
17    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'while'}
   {515, 17, 659, 4253, 293, 4262, 4265, 302, 305, 4280, 4281, 4282, 443, 320, 321, 322, 197, 587, 725, 89, 221, 734, 737, 230, 233, 752, 753, 754, 371, 248, 249, 250}
18    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '-'}
   {515, 18, 659, 4253, 293, 4262, 4266, 302, 306, 4280, 4281, 4282, 443, 320, 321, 322, 198, 587, 725, 90, 221, 734, 738, 230, 234, 752, 753, 754, 371, 248, 249, 250}
19    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': ';'}
   {515, 19, 659, 4253, 293, 4262, 4267, 302, 307, 4280, 4281, 4282, 443, 320, 321, 322, 199, 587, 725, 91, 221, 734, 739, 230, 235, 752, 753, 754, 371, 248, 249, 250}
20    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '=='}
   {515, 659, 20, 4253, 293, 4262, 4268, 302, 308, 4280, 4281, 4282, 443, 320, 321, 322, 200, 587, 725, 92, 221, 734, 740, 230, 236, 752, 753, 754, 371, 248, 249, 250}
21    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '<'}
   {515, 659, 21, 4253, 293, 4262, 4269, 302, 309, 4280, 4281, 4282, 443, 320, 321, 322, 201, 587, 725, 93, 221, 734, 741, 230, 237, 752, 753, 754, 371, 248, 249, 250}
22    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'break'}
   {515, 659, 22, 4253, 293, 4262, 302, 4270, 310, 4280, 4281, 4282, 443, 320, 321, 322, 202, 587, 725, 221, 94, 734, 230, 742, 238, 752, 753, 754, 371, 248, 249, 250}
23    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '='}
   {515, 659, 23, 4253, 293, 4262, 302, 4271, 311, 4280, 4281, 4282, 443, 320, 321, 322, 587, 203, 725, 221, 734, 95, 230, 743, 239, 752, 753, 754, 371, 248, 249, 250}
24    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '}'}
   {515, 659, 24, 4253, 293, 4262, 302, 4272, 312, 4281, 4280, 443, 4282, 320, 321, 322, 587, 204, 725, 221, 734, 96, 230, 744, 240, 752, 753, 371, 754, 248, 249, 250}
25    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '+='}
   {515, 659, 25, 4253, 293, 4262, 302, 4273, 4280, 4281, 313, 443, 4282, 320, 321, 322, 587, 205, 725, 221, 734, 97, 230, 745, 752, 241, 753, 371, 754, 248, 249, 250}
26    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '+'}
   {515, 659, 26, 4253, 293, 4262, 302, 4274, 4280, 4281, 314, 443, 4282, 320, 321, 322, 587, 206, 725, 221, 734, 98, 230, 746, 752, 753, 242, 371, 754, 248, 249, 250}
27    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '*='}
   {515, 659, 27, 4253, 293, 4262, 302, 4275, 4280, 4281, 4282, 315, 443, 320, 321, 322, 587, 207, 725, 221, 734, 99, 230, 747, 752, 753, 754, 371, 243, 248, 249, 250}
28    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '{'}
   {515, 659, 28, 4253, 293, 4262, 302, 4276, 4280, 4281, 4282, 443, 316, 320, 321, 322, 587, 208, 725, 221, 734, 100, 230, 748, 752, 753, 754, 371, 244, 248, 249, 250}
29    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'continue'}
   {515, 659, 4253, 29, 293, 4262, 302, 4277, 4280, 4281, 4282, 443, 317, 320, 321, 322, 587, 209, 725, 221, 734, 101, 230, 749, 752, 753, 754, 371, 245, 248, 249, 250}
30    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '>='}
   {515, 659, 4253, 30, 293, 4262, 302, 4278, 4280, 4281, 4282, 443, 318, 320, 321, 322, 587, 210, 725, 221, 734, 102, 230, 750, 752, 753, 754, 371, 246, 248, 249, 250}
31    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': ')'}
   {515, 659, 4253, 31, 293, 4262, 302, 4279, 4280, 4281, 4282, 443, 319, 320, 321, 322, 587, 211, 725, 221, 734, 230, 103, 751, 752, 753, 754, 371, 247, 248, 249, 250}
32    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'float'}
   {515, 659, 4253, 32, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 322, 587, 212, 725, 221, 734, 230, 104, 752, 753, 754, 371, 248, 249, 250}
33    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'double'}
   {515, 659, 4253, 33, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 322, 587, 213, 725, 221, 734, 230, 105, 752, 753, 754, 371, 248, 249, 250}
34    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'char'}
   {515, 659, 4253, 34, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 322, 587, 725, 214, 221, 734, 230, 106, 752, 753, 754, 371, 248, 249, 250}
35    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'number'}
   {515, 659, 4253, 35, 293, 4262, 302, 4280, 4281, 4282, 443, 4283, 320, 321, 322, 323, 587, 725, 215, 221, 734, 230, 107, 752, 753, 754, 371, 755, 248, 249, 250, 251}
36    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'return'}
   {36}
37    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'for'}
   {37}
38    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '!='}
   {38}
39    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': ','}
   {39}
40    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '#'}
   {40}
41    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'int'}
   {41}
42    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'if'}
   {42}
43    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '('}
   {43}
44    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'else'}
   {44}
45    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '*'}
   {45}
46    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '-='}
   {46}
47    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'identifier'}
   {47}
48    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '<='}
   {48}
49    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '>'}
   {49}
50    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'void'}
   {50}
51    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '/='}
   {51}
52    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '/'}
   {52}
53    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'while'}
   {53}
54    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '-'}
   {54}
55    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': ';'}
   {55}
56    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '=='}
   {56}
57    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '<'}
   {57}
58    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'break'}
   {58}
59    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '='}
   {59}
60    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '}'}
   {60}
61    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '+='}
   {61}
62    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '+'}
   {62}
63    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '*='}
   {63}
64    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '{'}
   {64}
65    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'continue'}
   {65}
66    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '>='}
   {66}
67    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': ')'}
   {67}
68    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'float'}
   {68}
69    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'double'}
   {69}
70    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'char'}
   {70}
71    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'number'}
   {71}
72    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'return'}
   {320, 321, 322, 515, 72, 587, 720, 659, 725, 4248, 216, 4253, 221, 734, 288, 248, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
73    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'for'}
   {320, 321, 322, 515, 73, 587, 721, 659, 725, 217, 4249, 4253, 221, 734, 248, 289, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
74    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '!='}
   {320, 321, 322, 515, 74, 587, 722, 659, 725, 218, 4250, 4253, 221, 734, 248, 290, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
75    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': ','}
   {320, 321, 322, 515, 587, 75, 659, 723, 725, 4251, 219, 4253, 221, 734, 248, 291, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
76    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '#'}
   {320, 321, 322, 515, 587, 76, 659, 724, 725, 220, 4252, 4253, 221, 734, 248, 292, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
77    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'int'}
   {320, 321, 322, 515, 587, 77, 659, 725, 4253, 221, 734, 248, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
78    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'if'}
   {320, 321, 322, 515, 587, 78, 659, 725, 726, 221, 4253, 4254, 222, 734, 248, 293, 294, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
79    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '('}
   {320, 321, 322, 515, 587, 79, 659, 725, 727, 4253, 221, 4255, 223, 734, 248, 293, 4262, 295, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
80    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'else'}
   {320, 321, 322, 515, 587, 80, 659, 725, 728, 4253, 221, 734, 4256, 224, 248, 293, 4262, 230, 296, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
81    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '*'}
   {320, 321, 322, 515, 587, 81, 659, 725, 729, 4253, 221, 734, 248, 4257, 225, 293, 4262, 230, 249, 297, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
82    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '-='}
   {320, 321, 322, 515, 587, 82, 659, 725, 730, 4253, 221, 734, 248, 4258, 226, 293, 4262, 230, 249, 298, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
83    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'identifier'}
   {320, 321, 322, 515, 587, 659, 83, 725, 731, 4253, 221, 734, 248, 4259, 227, 293, 4262, 230, 249, 250, 299, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
84    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '<='}
   {320, 321, 322, 515, 587, 659, 84, 725, 732, 4253, 221, 734, 248, 4260, 293, 4262, 228, 230, 249, 250, 300, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
85    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '>'}
   {320, 321, 322, 515, 587, 659, 725, 85, 4253, 221, 733, 734, 248, 293, 4261, 4262, 229, 230, 249, 250, 301, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
86    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'void'}
   {320, 321, 322, 515, 587, 659, 725, 86, 4253, 221, 734, 248, 293, 4262, 230, 249, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
87    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '/='}
   {320, 321, 322, 515, 587, 659, 725, 87, 4253, 221, 734, 735, 248, 293, 4262, 4263, 230, 231, 249, 250, 302, 303, 752, 753, 754, 371, 4280, 4281, 4282, 443}
88    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '/'}
   {320, 321, 322, 515, 587, 659, 725, 88, 4253, 221, 734, 736, 248, 293, 4262, 230, 4264, 232, 249, 250, 302, 304, 752, 753, 371, 754, 4280, 4281, 4282, 443}
89    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'while'}
   {320, 321, 322, 515, 587, 659, 725, 89, 4253, 221, 734, 248, 737, 293, 4262, 230, 249, 4265, 233, 250, 302, 752, 305, 753, 371, 754, 4280, 4281, 4282, 443}
90    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '-'}
   {320, 321, 322, 515, 587, 659, 725, 90, 4253, 221, 734, 248, 738, 293, 4262, 230, 249, 4266, 234, 250, 302, 752, 753, 306, 371, 754, 4280, 4281, 4282, 443}
91    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': ';'}
   {320, 321, 322, 515, 587, 659, 725, 91, 4253, 221, 734, 248, 739, 293, 4262, 230, 249, 250, 4267, 235, 302, 752, 753, 754, 371, 307, 4280, 4281, 4282, 443}
92    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '=='}
   {320, 321, 322, 515, 587, 659, 725, 92, 4253, 221, 734, 248, 740, 293, 4262, 230, 249, 250, 4268, 236, 302, 752, 753, 754, 371, 308, 4280, 4281, 4282, 443}
93    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '<'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 93, 293, 4262, 230, 741, 249, 250, 4269, 302, 237, 752, 753, 754, 371, 309, 4280, 4281, 4282, 443}
94    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'break'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 94, 293, 4262, 230, 742, 249, 250, 302, 4270, 238, 752, 753, 371, 754, 310, 4280, 4281, 4282, 443}
95    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '='}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 95, 293, 4262, 230, 743, 249, 250, 302, 4271, 239, 752, 753, 371, 754, 311, 4280, 4281, 4282, 443}
96    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '}'}
   {320, 321, 322, 515, 587, 659, 725, 221, 4253, 4280, 734, 248, 96, 293, 4262, 230, 744, 249, 250, 302, 4272, 240, 752, 371, 753, 754, 312, 4281, 4282, 443}
97    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '+='}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 97, 293, 4262, 313, 230, 745, 249, 250, 302, 752, 4273, 241, 371, 753, 754, 4280, 4281, 4282, 443}
98    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '+'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 98, 293, 4262, 230, 249, 746, 250, 314, 302, 752, 753, 4274, 371, 242, 754, 4280, 4281, 4282, 443}
99    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '*='}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 99, 293, 4262, 230, 249, 250, 747, 302, 752, 753, 754, 371, 4275, 443, 243, 4280, 4281, 4282, 315}
100   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '{'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 100, 293, 4262, 230, 249, 250, 748, 302, 752, 753, 754, 371, 4276, 244, 4280, 4281, 4282, 443, 316}
101   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'continue'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 293, 4262, 230, 249, 101, 250, 749, 302, 752, 753, 754, 371, 4277, 245, 4280, 4281, 4282, 443, 317}
102   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '>='}
   {320, 321, 322, 515, 587, 659, 725, 221, 4253, 734, 248, 293, 4262, 230, 249, 102, 250, 302, 750, 752, 753, 754, 371, 4278, 246, 4280, 4281, 4282, 443, 318}
103   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': ')'}
   {320, 321, 322, 515, 587, 659, 725, 247, 4253, 221, 734, 248, 293, 4262, 230, 249, 103, 250, 302, 751, 752, 753, 754, 371, 4279, 4280, 4281, 4282, 443, 319}
104   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'float'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 293, 4262, 230, 249, 104, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
105   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'double'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 293, 4262, 230, 249, 105, 250, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
106   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'char'}
   {320, 321, 322, 515, 587, 659, 725, 4253, 221, 734, 248, 293, 4262, 230, 249, 250, 106, 302, 752, 753, 754, 371, 4280, 4281, 4282, 443}
107   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'number'}
   {320, 321, 322, 515, 323, 587, 659, 725, 4253, 221, 734, 248, 293, 4262, 230, 249, 250, 107, 302, 251, 752, 753, 754, 371, 755, 443, 4280, 4281, 4282, 4283}
108   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'return'}
   {515, 659, 4248, 4253, 288, 293, 4262, 302, 180, 4280, 4281, 4282, 443, 320, 321, 322, 72, 587, 720, 725, 216, 221, 734, 230, 108, 752, 753, 754, 371, 248, 249, 250}
109   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'for'}
   {515, 659, 4249, 4253, 289, 293, 4262, 302, 181, 4280, 4281, 4282, 443, 320, 321, 322, 73, 587, 721, 725, 217, 221, 734, 230, 109, 752, 753, 754, 371, 248, 249, 250}
110   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '!='}
   {515, 659, 4250, 4253, 290, 293, 4262, 302, 182, 4280, 4281, 4282, 443, 320, 321, 322, 74, 587, 722, 725, 218, 221, 734, 230, 110, 752, 753, 754, 371, 248, 249, 250}
111   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': ','}
   {515, 659, 4251, 4253, 291, 293, 4262, 302, 183, 4280, 4281, 4282, 443, 320, 321, 322, 75, 587, 723, 725, 219, 221, 734, 230, 111, 752, 753, 754, 371, 248, 249, 250}
112   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '#'}
   {515, 659, 4252, 4253, 292, 293, 4262, 302, 184, 4281, 4280, 443, 4282, 320, 321, 322, 587, 76, 724, 725, 220, 221, 734, 230, 112, 752, 753, 371, 754, 248, 249, 250}
113   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'int'}
   {515, 659, 4253, 293, 4262, 302, 4280, 4281, 185, 4282, 443, 320, 321, 322, 587, 77, 725, 221, 734, 230, 752, 113, 753, 371, 754, 248, 249, 250}
114   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'if'}
   {515, 659, 4253, 4254, 293, 294, 4262, 302, 4280, 4281, 186, 443, 4282, 320, 321, 322, 587, 78, 725, 726, 221, 222, 734, 230, 752, 753, 114, 371, 754, 248, 249, 250}
115   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '('}
   {515, 659, 4253, 4255, 293, 4262, 295, 302, 4280, 4281, 4282, 443, 187, 320, 321, 322, 587, 79, 725, 727, 221, 734, 223, 230, 752, 753, 754, 115, 371, 248, 249, 250}
116   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'else'}
   {515, 659, 4253, 4256, 293, 4262, 296, 302, 4280, 4281, 4282, 443, 188, 320, 321, 322, 587, 80, 725, 728, 221, 734, 224, 230, 752, 753, 754, 371, 116, 248, 249, 250}
117   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '*'}
   {515, 659, 4253, 4257, 293, 4262, 297, 302, 4280, 4281, 4282, 443, 189, 320, 321, 322, 587, 81, 725, 729, 221, 734, 225, 230, 752, 753, 754, 371, 117, 248, 249, 250}
118   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '-='}
   {515, 659, 4253, 4258, 293, 4262, 298, 302, 4280, 4281, 4282, 443, 190, 320, 321, 322, 587, 82, 725, 730, 221, 734, 226, 230, 752, 753, 754, 371, 118, 248, 249, 250}
119   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'identifier'}
   {515, 659, 4253, 4259, 293, 4262, 299, 302, 4280, 4281, 4282, 443, 191, 320, 321, 322, 587, 83, 725, 731, 221, 734, 227, 230, 752, 753, 754, 371, 119, 248, 249, 250}
120   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '<='}
   {515, 659, 4253, 4260, 293, 4262, 300, 302, 4280, 4281, 4282, 443, 192, 320, 321, 322, 587, 84, 725, 732, 221, 734, 248, 228, 230, 752, 753, 754, 371, 120, 249, 250}
121   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '>'}
   {515, 659, 4253, 293, 4261, 4262, 301, 302, 4280, 4281, 4282, 443, 320, 193, 321, 322, 587, 85, 725, 221, 733, 734, 229, 230, 249, 752, 753, 754, 371, 248, 121, 250}
122   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'void'}
   {515, 659, 4253, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 194, 322, 587, 725, 86, 221, 734, 230, 250, 752, 753, 754, 371, 248, 249, 122}
123   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '/='}
   {515, 659, 4253, 293, 4262, 4263, 302, 303, 4280, 4281, 4282, 443, 320, 321, 322, 195, 587, 725, 87, 221, 734, 735, 230, 231, 752, 753, 754, 371, 248, 249, 250, 123}
124   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '/'}
   {515, 659, 4253, 293, 4262, 4264, 302, 304, 4280, 4281, 4282, 443, 320, 321, 322, 196, 587, 725, 88, 221, 734, 736, 230, 232, 752, 753, 754, 371, 248, 249, 250, 124}
125   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'while'}
   {515, 659, 4253, 293, 4262, 4265, 302, 305, 4280, 4281, 4282, 443, 320, 321, 322, 197, 587, 725, 89, 221, 734, 737, 230, 233, 752, 753, 754, 371, 248, 249, 250, 125}
126   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '-'}
   {515, 659, 4253, 293, 4262, 4266, 302, 306, 4280, 4281, 4282, 443, 320, 321, 322, 198, 587, 725, 90, 221, 734, 738, 230, 234, 752, 753, 754, 371, 248, 249, 250, 126}
127   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': ';'}
   {515, 659, 4253, 293, 4262, 4267, 302, 307, 4280, 4281, 4282, 443, 320, 321, 322, 199, 587, 725, 91, 221, 734, 739, 230, 235, 752, 753, 754, 371, 248, 249, 250, 127}
128   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '=='}
   {128, 515, 659, 4253, 293, 4262, 4268, 302, 308, 4280, 4281, 4282, 443, 320, 321, 322, 200, 587, 725, 92, 221, 734, 740, 230, 236, 752, 753, 754, 371, 248, 249, 250}
129   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '<'}
   {129, 515, 659, 4253, 293, 4262, 4269, 302, 309, 4280, 4281, 4282, 443, 320, 321, 322, 201, 587, 725, 93, 221, 734, 741, 230, 237, 752, 753, 754, 371, 248, 249, 250}
130   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'break'}
   {130, 515, 659, 4253, 293, 4262, 302, 4270, 310, 4280, 4281, 4282, 443, 320, 321, 322, 202, 587, 725, 221, 94, 734, 230, 742, 238, 752, 753, 754, 371, 248, 249, 250}
131   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '='}
   {515, 131, 659, 4253, 293, 4262, 302, 4271, 311, 4280, 4281, 4282, 443, 320, 321, 322, 587, 203, 725, 221, 734, 95, 230, 743, 239, 752, 753, 754, 371, 248, 249, 250}
132   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '}'}
   {515, 132, 659, 4253, 293, 4262, 302, 4272, 312, 4281, 4280, 443, 4282, 320, 321, 322, 587, 204, 725, 221, 734, 96, 230, 744, 240, 752, 753, 371, 754, 248, 249, 250}
133   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '+='}
   {515, 133, 659, 4253, 293, 4262, 302, 4273, 4280, 4281, 313, 443, 4282, 320, 321, 322, 587, 205, 725, 221, 734, 97, 230, 745, 752, 241, 753, 371, 754, 248, 249, 250}
134   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '+'}
   {515, 134, 659, 4253, 293, 4262, 302, 4274, 4280, 4281, 314, 443, 4282, 320, 321, 322, 587, 206, 725, 221, 734, 98, 230, 746, 752, 753, 242, 371, 754, 248, 249, 250}
135   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '*='}
   {515, 135, 659, 4253, 293, 4262, 302, 4275, 4280, 4281, 4282, 315, 443, 320, 321, 322, 587, 207, 725, 221, 734, 99, 230, 747, 752, 753, 754, 371, 243, 248, 249, 250}
136   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '{'}
   {515, 136, 659, 4253, 293, 4262, 302, 4276, 4280, 4281, 4282, 443, 316, 320, 321, 322, 587, 208, 725, 221, 734, 100, 230, 748, 752, 753, 754, 371, 244, 248, 249, 250}
137   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'continue'}
   {515, 137, 659, 4253, 293, 4262, 302, 4277, 4280, 4281, 4282, 443, 317, 320, 321, 322, 587, 209, 725, 221, 734, 101, 230, 749, 752, 753, 754, 371, 245, 248, 249, 250}
138   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '>='}
   {515, 138, 659, 4253, 293, 4262, 302, 4278, 4280, 4281, 4282, 443, 318, 320, 321, 322, 587, 210, 725, 221, 734, 102, 230, 750, 752, 753, 754, 371, 246, 248, 249, 250}
139   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': ')'}
   {515, 139, 659, 4253, 293, 4262, 302, 4279, 4280, 4281, 4282, 443, 319, 320, 321, 322, 587, 211, 725, 221, 734, 230, 103, 751, 752, 753, 754, 371, 247, 248, 249, 250}
140   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'float'}
   {515, 140, 659, 4253, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 322, 587, 212, 725, 221, 734, 230, 104, 752, 753, 754, 371, 248, 249, 250}
141   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'double'}
   {515, 141, 659, 4253, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 322, 587, 213, 725, 221, 734, 230, 105, 752, 753, 754, 371, 248, 249, 250}
142   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'char'}
   {515, 142, 659, 4253, 293, 4262, 302, 4280, 4281, 4282, 443, 320, 321, 322, 587, 725, 214, 221, 734, 230, 106, 752, 753, 754, 371, 248, 249, 250}
143   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'number'}
   {515, 143, 659, 4253, 293, 4262, 302, 4280, 4281, 4282, 443, 4283, 320, 321, 322, 323, 587, 725, 215, 221, 734, 230, 107, 752, 753, 754, 371, 755, 248, 249, 250, 251}
144   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'return'}
   {144}
145   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'for'}
   {145}
146   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '!='}
   {146}
147   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': ','}
   {147}
148   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '#'}
   {148}
149   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'int'}
   {149}
150   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'if'}
   {150}
151   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '('}
   {151}
152   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'else'}
   {152}
153   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '*'}
   {153}
154   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '-='}
   {154}
155   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'identifier'}
   {155}
156   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '<='}
   {156}
157   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '>'}
   {157}
158   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'void'}
   {158}
159   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '/='}
   {159}
160   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '/'}
   {160}
161   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'while'}
   {161}
162   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '-'}
   {162}
163   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': ';'}
   {163}
164   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '=='}
   {164}
165   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '<'}
   {165}
166   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'break'}
   {166}
167   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '='}
   {167}
168   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '}'}
   {168}
169   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '+='}
   {169}
170   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '+'}
   {170}
171   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '*='}
   {171}
172   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '{'}
   {172}
173   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'continue'}
   {173}
174   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '>='}
   {174}
175   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': ')'}
   {175}
176   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'float'}
   {176}
177   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'double'}
   {177}
178   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'char'}
   {178}
179   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'number'}
   {179}
180   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'return'}
   {180}
181   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'for'}
   {181}
182   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '!='}
   {182}
183   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': ','}
   {183}
184   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '#'}
   {184}
185   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'int'}
   {185}
186   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'if'}
   {186}
187   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '('}
   {187}
188   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'else'}
   {188}
189   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '*'}
   {189}
190   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '-='}
   {190}
191   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'identifier'}
   {191}
192   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '<='}
   {192}
193   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '>'}
   {193}
194   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'void'}
   {194}
195   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '/='}
   {195}
196   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '/'}
   {196}
197   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'while'}
   {197}
198   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '-'}
   {198}
199   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': ';'}
   {199}
200   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '=='}
   {200}
201   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '<'}
   {201}
202   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'break'}
   {202}
203   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '='}
   {203}
204   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '}'}
   {204}
205   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '+='}
   {205}
206   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '+'}
   {206}
207   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '*='}
   {207}
208   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '{'}
   {208}
209   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'continue'}
   {209}
210   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '>='}
   {210}
211   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': ')'}
   {211}
212   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'float'}
   {212}
213   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'double'}
   {213}
214   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'char'}
   {214}
215   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'number'}
   {215}
216   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'return'}
   {720, 216}
217   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'for'}
   {721, 217}
218   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '!='}
   {218, 722}
219   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': ','}
   {723, 219}
220   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '#'}
   {220, 724}
221   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'int'}
   {221, 725}
222   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'if'}
   {222, 726}
223   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '('}
   {223, 727}
224   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'else'}
   {728, 224}
225   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '*'}
   {729, 225}
226   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '-='}
   {730, 226}
227   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'identifier'}
   {731, 227}
228   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '<='}
   {732, 228}
229   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '>'}
   {229, 733}
230   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'void'}
   {734, 230}
231   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '/='}
   {231, 735}
232   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '/'}
   {736, 232}
233   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'while'}
   {737, 233}
234   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '-'}
   {738, 234}
235   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': ';'}
   {739, 235}
236   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '=='}
   {740, 236}
237   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '<'}
   {237, 741}
238   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'break'}
   {742, 238}
239   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '='}
   {239, 743}
240   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '}'}
   {744, 240}
241   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '+='}
   {745, 241}
242   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '+'}
   {746, 242}
243   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '*='}
   {747, 243}
244   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '{'}
   {748, 244}
245   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'continue'}
   {245, 749}
246   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '>='}
   {750, 246}
247   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': ')'}
   {247, 751}
248   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'float'}
   {752, 248}
249   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'double'}
   {753, 249}
250   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'char'}
   {754, 250}
251   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'number'}
   {755, 251}
252   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'return'}
   {252}
253   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'for'}
   {253}
254   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '!='}
   {254}
255   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': ','}
   {255}
256   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '#'}
   {256}
257   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'int'}
   {257}
258   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'if'}
   {258}
259   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '('}
   {259}
260   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'else'}
   {260}
261   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '*'}
   {261}
262   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '-='}
   {262}
263   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'identifier'}
   {263}
264   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '<='}
   {264}
265   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '>'}
   {265}
266   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'void'}
   {266}
267   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '/='}
   {267}
268   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '/'}
   {268}
269   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'while'}
   {269}
270   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '-'}
   {270}
271   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': ';'}
   {271}
272   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '=='}
   {272}
273   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '<'}
   {273}
274   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'break'}
   {274}
275   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '='}
   {275}
276   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '}'}
   {276}
277   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '+='}
   {277}
278   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '+'}
   {278}
279   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '*='}
   {279}
280   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '{'}
   {280}
281   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'continue'}
   {281}
282   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '>='}
   {282}
283   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': ')'}
   {283}
284   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'float'}
   {284}
285   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'double'}
   {285}
286   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'char'}
   {286}
287   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'number'}
   {287}
288   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'return'}
   {288, 515, 587, 371, 659, 4248, 443}
289   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'for'}
   {289, 515, 587, 371, 659, 4249, 443}
290   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '!='}
   {290, 515, 587, 371, 659, 4250, 443}
291   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': ','}
   {515, 291, 587, 4251, 371, 659, 443}
292   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '#'}
   {515, 292, 587, 371, 659, 443, 4252}
293   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'int'}
   {515, 293, 587, 371, 659, 443, 4253}
294   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'if'}
   {294, 4254}
295   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '('}
   {295, 4255}
296   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'else'}
   {4256, 296}
297   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '*'}
   {4257, 297}
298   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '-='}
   {4258, 298}
299   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'identifier'}
   {299, 4259}
300   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '<='}
   {4260, 300}
301   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '>'}
   {301, 4261}
302   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'void'}
   {302, 4262}
303   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '/='}
   {303, 4263}
304   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '/'}
   {4264, 304}
305   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'while'}
   {4265, 305}
306   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '-'}
   {4266, 306}
307   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': ';'}
   {307, 4267}
308   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '=='}
   {4268, 308}
309   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '<'}
   {309, 4269}
310   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'break'}
   {310, 4270}
311   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '='}
   {311, 4271}
312   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '}'}
   {4272, 312}
313   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '+='}
   {4273, 313}
314   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '+'}
   {4274, 314}
315   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '*='}
   {315, 4275}
316   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '{'}
   {4276, 316}
317   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'continue'}
   {317, 4277}
318   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '>='}
   {318, 4278}
319   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': ')'}
   {319, 4279}
320   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'float'}
   {4280, 320}
321   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'double'}
   {321, 4281}
322   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'char'}
   {4282, 322}
323   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'number'}
   {323, 4283}
324   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'return'}
   {324}
325   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'for'}
   {325}
326   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '!='}
   {326}
327   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': ','}
   {327}
328   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '#'}
   {328}
329   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'int'}
   {329}
330   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'if'}
   {330}
331   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '('}
   {331}
332   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'else'}
   {332}
333   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '*'}
   {333}
334   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '-='}
   {334}
335   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'identifier'}
   {335}
336   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '<='}
   {336}
337   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '>'}
   {337}
338   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'void'}
   {338}
339   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '/='}
   {339}
340   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '/'}
   {340}
341   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'while'}
   {341}
342   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '-'}
   {342}
343   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': ';'}
   {343}
344   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '=='}
   {344}
345   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '<'}
   {345}
346   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'break'}
   {346}
347   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '='}
   {347}
348   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '}'}
   {348}
349   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '+='}
   {349}
350   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '+'}
   {350}
351   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '*='}
   {351}
352   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '{'}
   {352}
353   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'continue'}
   {353}
354   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '>='}
   {354}
355   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': ')'}
   {355}
356   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'float'}
   {356}
357   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'double'}
   {357}
358   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'char'}
   {358}
359   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'number'}
   {359}
360   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'return'}
   {360}
361   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'for'}
   {361}
362   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '!='}
   {362}
363   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': ','}
   {363}
364   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '#'}
   {364}
365   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'int'}
   {365}
366   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'if'}
   {366}
367   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '('}
   {367}
368   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'else'}
   {368}
369   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '*'}
   {369}
370   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '-='}
   {370}
371   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'identifier'}
   {371}
372   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '<='}
   {372}
373   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '>'}
   {373}
374   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'void'}
   {374}
375   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '/='}
   {375}
376   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '/'}
   {376}
377   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'while'}
   {377}
378   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '-'}
   {378}
379   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': ';'}
   {379}
380   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '=='}
   {380}
381   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '<'}
   {381}
382   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'break'}
   {382}
383   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '='}
   {383}
384   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '}'}
   {384}
385   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '+='}
   {385}
386   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '+'}
   {386}
387   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '*='}
   {387}
388   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '{'}
   {388}
389   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'continue'}
   {389}
390   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '>='}
   {390}
391   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': ')'}
   {391}
392   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'float'}
   {392}
393   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'double'}
   {393}
394   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'char'}
   {394}
395   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'number'}
   {395}
396   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'return'}
   {396}
397   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'for'}
   {397}
398   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '!='}
   {398}
399   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': ','}
   {399}
400   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '#'}
   {400}
401   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'int'}
   {401}
402   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'if'}
   {402}
403   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '('}
   {403}
404   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'else'}
   {404}
405   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '*'}
   {405}
406   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '-='}
   {406}
407   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'identifier'}
   {407}
408   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '<='}
   {408}
409   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '>'}
   {409}
410   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'void'}
   {410}
411   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '/='}
   {411}
412   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '/'}
   {412}
413   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'while'}
   {413}
414   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '-'}
   {414}
415   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': ';'}
   {415}
416   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '=='}
   {416}
417   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '<'}
   {417}
418   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'break'}
   {418}
419   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '='}
   {419}
420   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '}'}
   {420}
421   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '+='}
   {421}
422   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '+'}
   {422}
423   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '*='}
   {423}
424   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '{'}
   {424}
425   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'continue'}
   {425}
426   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '>='}
   {426}
427   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': ')'}
   {427}
428   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'float'}
   {428}
429   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'double'}
   {429}
430   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'char'}
   {430}
431   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'number'}
   {431}
432   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'return'}
   {432}
433   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'for'}
   {433}
434   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '!='}
   {434}
435   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': ','}
   {435}
436   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '#'}
   {436}
437   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'int'}
   {437}
438   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'if'}
   {438}
439   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '('}
   {439}
440   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'else'}
   {440}
441   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '*'}
   {441}
442   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '-='}
   {442}
443   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'identifier'}
   {443}
444   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '<='}
   {444}
445   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '>'}
   {445}
446   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'void'}
   {446}
447   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '/='}
   {447}
448   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '/'}
   {448}
449   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'while'}
   {449}
450   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '-'}
   {450}
451   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': ';'}
   {451}
452   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '=='}
   {452}
453   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '<'}
   {453}
454   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'break'}
   {454}
455   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '='}
   {455}
456   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '}'}
   {456}
457   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '+='}
   {457}
458   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '+'}
   {458}
459   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '*='}
   {459}
460   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '{'}
   {460}
461   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'continue'}
   {461}
462   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '>='}
   {462}
463   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': ')'}
   {463}
464   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'float'}
   {464}
465   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'double'}
   {465}
466   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'char'}
   {466}
467   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'number'}
   {467}
468   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'return'}
   {468}
469   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'for'}
   {469}
470   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '!='}
   {470}
471   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': ','}
   {471}
472   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '#'}
   {472}
473   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'int'}
   {473}
474   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'if'}
   {474}
475   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '('}
   {475}
476   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'else'}
   {476}
477   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '*'}
   {477}
478   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '-='}
   {478}
479   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'identifier'}
   {479}
480   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '<='}
   {480}
481   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '>'}
   {481}
482   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'void'}
   {482}
483   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '/='}
   {483}
484   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '/'}
   {484}
485   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'while'}
   {485}
486   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '-'}
   {486}
487   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': ';'}
   {487}
488   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '=='}
   {488}
489   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '<'}
   {489}
490   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'break'}
   {490}
491   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '='}
   {491}
492   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '}'}
   {492}
493   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '+='}
   {493}
494   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '+'}
   {494}
495   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '*='}
   {495}
496   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '{'}
   {496}
497   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'continue'}
   {497}
498   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '>='}
   {498}
499   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': ')'}
   {499}
500   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'float'}
   {500}
501   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'double'}
   {501}
502   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'char'}
   {502}
503   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'number'}
   {503}
504   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'return'}
   {504}
505   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'for'}
   {505}
506   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '!='}
   {506}
507   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': ','}
   {507}
508   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '#'}
   {508}
509   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'int'}
   {509}
510   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'if'}
   {510}
511   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '('}
   {511}
512   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'else'}
   {512}
513   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '*'}
   {513}
514   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '-='}
   {514}
515   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'identifier'}
   {515}
516   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '<='}
   {516}
517   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '>'}
   {517}
518   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'void'}
   {518}
519   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '/='}
   {519}
520   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '/'}
   {520}
521   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'while'}
   {521}
522   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '-'}
   {522}
523   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': ';'}
   {523}
524   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '=='}
   {524}
525   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '<'}
   {525}
526   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'break'}
   {526}
527   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '='}
   {527}
528   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '}'}
   {528}
529   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '+='}
   {529}
530   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '+'}
   {530}
531   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '*='}
   {531}
532   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '{'}
   {532}
533   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'continue'}
   {533}
534   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '>='}
   {534}
535   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': ')'}
   {535}
536   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'float'}
   {536}
537   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'double'}
   {537}
538   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'char'}
   {538}
539   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'number'}
   {539}
540   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'return'}
   {540}
541   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'for'}
   {541}
542   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '!='}
   {542}
543   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': ','}
   {543}
544   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '#'}
   {544}
545   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'int'}
   {545}
546   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'if'}
   {546}
547   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '('}
   {547}
548   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'else'}
   {548}
549   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '*'}
   {549}
550   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '-='}
   {550}
551   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'identifier'}
   {551}
552   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '<='}
   {552}
553   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '>'}
   {553}
554   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'void'}
   {554}
555   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '/='}
   {555}
556   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '/'}
   {556}
557   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'while'}
   {557}
558   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '-'}
   {558}
559   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': ';'}
   {559}
560   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '=='}
   {560}
561   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '<'}
   {561}
562   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'break'}
   {562}
563   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '='}
   {563}
564   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '}'}
   {564}
565   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '+='}
   {565}
566   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '+'}
   {566}
567   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '*='}
   {567}
568   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '{'}
   {568}
569   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'continue'}
   {569}
570   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '>='}
   {570}
571   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': ')'}
   {571}
572   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'float'}
   {572}
573   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'double'}
   {573}
574   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'char'}
   {574}
575   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'number'}
   {575}
576   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'return'}
   {576}
577   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'for'}
   {577}
578   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '!='}
   {578}
579   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': ','}
   {579}
580   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '#'}
   {580}
581   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'int'}
   {581}
582   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'if'}
   {582}
583   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '('}
   {583}
584   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'else'}
   {584}
585   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '*'}
   {585}
586   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '-='}
   {586}
587   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'identifier'}
   {587}
588   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '<='}
   {588}
589   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '>'}
   {589}
590   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'void'}
   {590}
591   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '/='}
   {591}
592   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '/'}
   {592}
593   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'while'}
   {593}
594   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '-'}
   {594}
595   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': ';'}
   {595}
596   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '=='}
   {596}
597   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '<'}
   {597}
598   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'break'}
   {598}
599   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '='}
   {599}
600   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '}'}
   {600}
601   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '+='}
   {601}
602   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '+'}
   {602}
603   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '*='}
   {603}
604   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '{'}
   {604}
605   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'continue'}
   {605}
606   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '>='}
   {606}
607   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': ')'}
   {607}
608   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'float'}
   {608}
609   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'double'}
   {609}
610   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'char'}
   {610}
611   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'number'}
   {611}
612   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'return'}
   {612}
613   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'for'}
   {613}
614   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '!='}
   {614}
615   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': ','}
   {615}
616   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '#'}
   {616}
617   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'int'}
   {617}
618   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'if'}
   {618}
619   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '('}
   {619}
620   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'else'}
   {620}
621   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '*'}
   {621}
622   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '-='}
   {622}
623   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'identifier'}
   {623}
624   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '<='}
   {624}
625   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '>'}
   {625}
626   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'void'}
   {626}
627   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '/='}
   {627}
628   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '/'}
   {628}
629   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'while'}
   {629}
630   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '-'}
   {630}
631   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': ';'}
   {631}
632   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '=='}
   {632}
633   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '<'}
   {633}
634   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'break'}
   {634}
635   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '='}
   {635}
636   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '}'}
   {636}
637   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '+='}
   {637}
638   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '+'}
   {638}
639   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '*='}
   {639}
640   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '{'}
   {640}
641   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'continue'}
   {641}
642   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '>='}
   {642}
643   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': ')'}
   {643}
644   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'float'}
   {644}
645   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'double'}
   {645}
646   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'char'}
   {646}
647   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'number'}
   {647}
648   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'return'}
   {648}
649   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'for'}
   {649}
650   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '!='}
   {650}
651   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': ','}
   {651}
652   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '#'}
   {652}
653   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'int'}
   {653}
654   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'if'}
   {654}
655   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '('}
   {655}
656   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'else'}
   {656}
657   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '*'}
   {657}
658   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '-='}
   {658}
659   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'identifier'}
   {659}
660   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '<='}
   {660}
661   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '>'}
   {661}
662   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'void'}
   {662}
663   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '/='}
   {663}
664   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '/'}
   {664}
665   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'while'}
   {665}
666   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '-'}
   {666}
667   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': ';'}
   {667}
668   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '=='}
   {668}
669   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '<'}
   {669}
670   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'break'}
   {670}
671   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '='}
   {671}
672   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '}'}
   {672}
673   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '+='}
   {673}
674   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '+'}
   {674}
675   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '*='}
   {675}
676   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '{'}
   {676}
677   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'continue'}
   {677}
678   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '>='}
   {678}
679   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': ')'}
   {679}
680   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'float'}
   {680}
681   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'double'}
   {681}
682   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'char'}
   {682}
683   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'number'}
   {683}
684   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'return'}
   {684}
685   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'for'}
   {685}
686   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '!='}
   {686}
687   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': ','}
   {687}
688   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '#'}
   {688}
689   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'int'}
   {689}
690   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'if'}
   {690}
691   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '('}
   {691}
692   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'else'}
   {692}
693   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '*'}
   {693}
694   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '-='}
   {694}
695   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'identifier'}
   {695}
696   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '<='}
   {696}
697   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '>'}
   {697}
698   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'void'}
   {698}
699   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '/='}
   {699}
700   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '/'}
   {700}
701   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'while'}
   {701}
702   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '-'}
   {702}
703   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': ';'}
   {703}
704   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '=='}
   {704}
705   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '<'}
   {705}
706   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'break'}
   {706}
707   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '='}
   {707}
708   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '}'}
   {708}
709   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '+='}
   {709}
710   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '+'}
   {710}
711   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '*='}
   {711}
712   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '{'}
   {712}
713   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'continue'}
   {713}
714   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '>='}
   {714}
715   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': ')'}
   {715}
716   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'float'}
   {716}
717   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'double'}
   {717}
718   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'char'}
   {718}
719   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'number'}
   {719}
720   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {720, 515, 659, 371, 443, 587}
721   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {721, 515, 659, 371, 443, 587}
722   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '!='}
   {722, 515, 659, 371, 443, 587}
723   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': ','}
   {515, 723, 659, 371, 443, 587}
724   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '#'}
   {515, 724, 659, 371, 443, 587}
725   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {515, 659, 725, 371, 443, 587}
726   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {515, 659, 371, 726, 443, 587}
727   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '('}
   {515, 659, 371, 443, 727, 587}
728   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {515, 659, 371, 443, 728, 587}
729   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '*'}
   {515, 659, 371, 443, 729, 587}
730   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '-='}
   {515, 659, 371, 443, 730, 587}
731   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {515, 659, 371, 443, 587, 731}
732   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '<='}
   {515, 659, 371, 443, 587, 732}
733   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '>'}
   {515, 659, 371, 443, 587, 733}
734   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {515, 659, 371, 443, 587, 734}
735   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '/='}
   {515, 659, 371, 443, 587, 735}
736   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '/'}
   {736, 515, 659, 371, 443, 587}
737   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {737, 515, 659, 371, 443, 587}
738   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '-'}
   {738, 515, 659, 371, 443, 587}
739   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': ';'}
   {515, 739, 659, 371, 443, 587}
740   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '=='}
   {515, 740, 659, 371, 443, 587}
741   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '<'}
   {515, 659, 741, 371, 443, 587}
742   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {515, 659, 371, 742, 443, 587}
743   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '='}
   {515, 659, 371, 443, 743, 587}
744   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '}'}
   {515, 659, 371, 443, 744, 587}
745   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '+='}
   {515, 659, 371, 443, 745, 587}
746   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '+'}
   {515, 659, 371, 443, 746, 587}
747   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '*='}
   {515, 659, 371, 443, 587, 747}
748   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '{'}
   {515, 659, 371, 443, 587, 748}
749   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {515, 659, 371, 443, 587, 749}
750   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '>='}
   {515, 659, 371, 443, 587, 750}
751   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': ')'}
   {515, 659, 371, 443, 587, 751}
752   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {752, 515, 659, 371, 443, 587}
753   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {753, 515, 659, 371, 443, 587}
754   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {754, 515, 659, 371, 443, 587}
755   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {515, 755, 659, 371, 443, 587}
756   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {919, 756, 903}
757   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {919, 757, 903}
758   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '!='}
   {919, 758, 903}
759   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': ','}
   {903, 919, 759}
760   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '#'}
   {760, 919, 903}
761   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {919, 761, 903}
762   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {919, 762, 903}
763   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '('}
   {919, 763, 903}
764   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {919, 764, 903}
765   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '*'}
   {919, 765, 903}
766   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '-='}
   {919, 766, 903}
767   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {903, 919, 767}
768   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '<='}
   {768, 919, 903}
769   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '>'}
   {919, 769, 903}
770   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {919, 770, 903}
771   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '/='}
   {919, 771, 903}
772   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '/'}
   {919, 772, 903}
773   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {919, 773, 903}
774   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '-'}
   {919, 774, 903}
775   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': ';'}
   {903, 919, 775}
776   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '=='}
   {776, 919, 903}
777   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '<'}
   {919, 777, 903}
778   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {919, 778, 903}
779   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '='}
   {919, 779, 903}
780   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '}'}
   {919, 780, 903}
781   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '+='}
   {919, 781, 903}
782   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '+'}
   {919, 782, 903}
783   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '*='}
   {903, 919, 783}
784   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '{'}
   {784, 919, 903}
785   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {919, 785, 903}
786   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '>='}
   {919, 786, 903}
787   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': ')'}
   {919, 787, 903}
788   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {919, 788, 903}
789   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {919, 789, 903}
790   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {919, 790, 903}
791   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {903, 919, 791}
792   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {792, 1315, 1171}
793   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {793, 1171, 1315}
794   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '!='}
   {1315, 794, 1171}
795   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': ','}
   {1315, 795, 1171}
796   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '#'}
   {1315, 1171, 796}
797   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {1315, 1171, 797}
798   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {1315, 1171, 798}
799   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '('}
   {1315, 1171, 799}
800   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {800, 1315, 1171}
801   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '*'}
   {801, 1171, 1315}
802   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '-='}
   {1315, 802, 1171}
803   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {1315, 803, 1171}
804   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '<='}
   {1315, 1171, 804}
805   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '>'}
   {1315, 1171, 805}
806   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {1315, 1171, 806}
807   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '/='}
   {1315, 1171, 807}
808   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '/'}
   {808, 1315, 1171}
809   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {809, 1171, 1315}
810   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '-'}
   {1315, 810, 1171}
811   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': ';'}
   {1315, 811, 1171}
812   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '=='}
   {1315, 1171, 812}
813   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '<'}
   {1315, 1171, 813}
814   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {1315, 1171, 814}
815   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '='}
   {1315, 1171, 815}
816   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '}'}
   {816, 1315, 1171}
817   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '+='}
   {817, 1171, 1315}
818   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '+'}
   {1315, 818, 1171}
819   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '*='}
   {1315, 819, 1171}
820   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '{'}
   {1315, 1171, 820}
821   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {1315, 1171, 821}
822   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '>='}
   {1315, 1171, 822}
823   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': ')'}
   {1315, 1171, 823}
824   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {824, 1315, 1171}
825   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {825, 1171, 1315}
826   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {1315, 826, 1171}
827   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {1315, 827, 1171}
828   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {828}
829   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {829}
830   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '!='}
   {830}
831   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': ','}
   {831}
832   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '#'}
   {832}
833   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {833}
834   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {834}
835   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '('}
   {835}
836   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {836}
837   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '*'}
   {837}
838   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '-='}
   {838}
839   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {839}
840   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '<='}
   {840}
841   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '>'}
   {841}
842   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {842}
843   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '/='}
   {843}
844   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '/'}
   {844}
845   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {845}
846   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '-'}
   {846}
847   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': ';'}
   {847}
848   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '=='}
   {848}
849   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '<'}
   {849}
850   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {850}
851   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '='}
   {851}
852   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '}'}
   {852}
853   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '+='}
   {853}
854   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '+'}
   {854}
855   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '*='}
   {855}
856   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '{'}
   {856}
857   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {857}
858   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '>='}
   {858}
859   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': ')'}
   {859}
860   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {860}
861   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {861}
862   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {862}
863   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {863}
864   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'return'}
   {864}
865   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'for'}
   {865}
866   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '!='}
   {866}
867   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': ','}
   {867}
868   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '#'}
   {868}
869   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'int'}
   {869}
870   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'if'}
   {870}
871   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '('}
   {871}
872   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'else'}
   {872}
873   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '*'}
   {873}
874   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '-='}
   {874}
875   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'identifier'}
   {875}
876   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '<='}
   {876}
877   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '>'}
   {877}
878   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'void'}
   {878}
879   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '/='}
   {879}
880   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '/'}
   {880}
881   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'while'}
   {881}
882   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '-'}
   {882}
883   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': ';'}
   {883}
884   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '=='}
   {884}
885   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '<'}
   {885}
886   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'break'}
   {886}
887   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '='}
   {887}
888   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '}'}
   {888}
889   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '+='}
   {889}
890   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '+'}
   {890}
891   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '*='}
   {891}
892   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '{'}
   {892}
893   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'continue'}
   {893}
894   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '>='}
   {894}
895   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': ')'}
   {895}
896   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'float'}
   {896}
897   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'double'}
   {897}
898   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'char'}
   {898}
899   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'number'}
   {899}
900   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'return'}
   {900}
901   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'for'}
   {901}
902   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '!='}
   {902}
903   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': ','}
   {903}
904   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '#'}
   {904}
905   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'int'}
   {905}
906   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'if'}
   {906}
907   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '('}
   {907}
908   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'else'}
   {908}
909   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '*'}
   {909}
910   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '-='}
   {910}
911   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'identifier'}
   {911}
912   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '<='}
   {912}
913   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '>'}
   {913}
914   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'void'}
   {914}
915   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '/='}
   {915}
916   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '/'}
   {916}
917   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'while'}
   {917}
918   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '-'}
   {918}
919   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': ';'}
   {919}
920   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '=='}
   {920}
921   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '<'}
   {921}
922   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'break'}
   {922}
923   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '='}
   {923}
924   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '}'}
   {924}
925   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '+='}
   {925}
926   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '+'}
   {926}
927   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '*='}
   {927}
928   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '{'}
   {928}
929   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'continue'}
   {929}
930   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '>='}
   {930}
931   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': ')'}
   {931}
932   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'float'}
   {932}
933   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'double'}
   {933}
934   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'char'}
   {934}
935   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'number'}
   {935}
936   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'return'}
   {936, 1008, 1116}
937   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'for'}
   {937, 1009, 1117}
938   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '!='}
   {938, 1010, 1118}
939   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': ','}
   {939, 1011, 1119}
940   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '#'}
   {1120, 940, 1012}
941   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'int'}
   {1121, 941, 1013}
942   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'if'}
   {1122, 942, 1014}
943   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '('}
   {1015, 1123, 943}
944   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'else'}
   {944, 1016, 1124}
945   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '*'}
   {945, 1017, 1125}
946   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '-='}
   {946, 1018, 1126}
947   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'identifier'}
   {947, 1019, 1127}
948   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '<='}
   {1128, 948, 1020}
949   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '>'}
   {1129, 949, 1021}
950   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'void'}
   {1130, 950, 1022}
951   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '/='}
   {1023, 1131, 951}
952   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '/'}
   {952, 1024, 1132}
953   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'while'}
   {953, 1133, 1025}
954   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '-'}
   {954, 1026, 1134}
955   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': ';'}
   {1027, 955, 1135}
956   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '=='}
   {1136, 956, 1028}
957   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '<'}
   {1137, 1029, 957}
958   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'break'}
   {1138, 958, 1030}
959   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '='}
   {1139, 1031, 959}
960   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '}'}
   {960, 1032, 1140}
961   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '+='}
   {961, 1141, 1033}
962   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '+'}
   {962, 1034, 1142}
963   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '*='}
   {1035, 963, 1143}
964   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '{'}
   {1144, 964, 1036}
965   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'continue'}
   {1145, 1037, 965}
966   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '>='}
   {1146, 966, 1038}
967   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': ')'}
   {1147, 1039, 967}
968   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'float'}
   {968, 1040, 1148}
969   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'double'}
   {969, 1149, 1041}
970   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'char'}
   {970, 1042, 1150}
971   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'number'}
   {1043, 971, 1151}
972   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'return'}
   {972}
973   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'for'}
   {973}
974   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '!='}
   {974}
975   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': ','}
   {975}
976   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '#'}
   {976}
977   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'int'}
   {977}
978   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'if'}
   {978}
979   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '('}
   {979}
980   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'else'}
   {980}
981   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '*'}
   {981}
982   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '-='}
   {982}
983   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'identifier'}
   {983}
984   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '<='}
   {984}
985   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '>'}
   {985}
986   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'void'}
   {986}
987   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '/='}
   {987}
988   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '/'}
   {988}
989   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'while'}
   {989}
990   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '-'}
   {990}
991   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': ';'}
   {991}
992   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '=='}
   {992}
993   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '<'}
   {993}
994   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'break'}
   {994}
995   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '='}
   {995}
996   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '}'}
   {996}
997   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '+='}
   {997}
998   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '+'}
   {998}
999   {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '*='}
   {999}
1000  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '{'}
   {1000}
1001  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'continue'}
   {1001}
1002  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '>='}
   {1002}
1003  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': ')'}
   {1003}
1004  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'float'}
   {1004}
1005  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'double'}
   {1005}
1006  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'char'}
   {1006}
1007  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'number'}
   {1007}
1008  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'return'}
   {1008}
1009  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'for'}
   {1009}
1010  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '!='}
   {1010}
1011  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': ','}
   {1011}
1012  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '#'}
   {1012}
1013  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'int'}
   {1013}
1014  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'if'}
   {1014}
1015  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '('}
   {1015}
1016  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'else'}
   {1016}
1017  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '*'}
   {1017}
1018  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '-='}
   {1018}
1019  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'identifier'}
   {1019}
1020  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '<='}
   {1020}
1021  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '>'}
   {1021}
1022  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'void'}
   {1022}
1023  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '/='}
   {1023}
1024  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '/'}
   {1024}
1025  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'while'}
   {1025}
1026  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '-'}
   {1026}
1027  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': ';'}
   {1027}
1028  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '=='}
   {1028}
1029  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '<'}
   {1029}
1030  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'break'}
   {1030}
1031  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '='}
   {1031}
1032  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '}'}
   {1032}
1033  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '+='}
   {1033}
1034  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '+'}
   {1034}
1035  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '*='}
   {1035}
1036  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '{'}
   {1036}
1037  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'continue'}
   {1037}
1038  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '>='}
   {1038}
1039  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': ')'}
   {1039}
1040  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'float'}
   {1040}
1041  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'double'}
   {1041}
1042  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'char'}
   {1042}
1043  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'number'}
   {1043}
1044  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'return'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1044, 1430, 1434, 3744, 3240, 1332, 1334, 1341, 1344, 1345, 1348, 1476, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 3168, 1506, 3312, 1404, 1406}
1045  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'for'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1045, 1430, 1434, 3745, 3241, 1333, 1334, 1341, 1344, 1345, 1348, 1477, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 3169, 1506, 3313, 1405, 1406}
1046  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '!='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1046, 1430, 1434, 3746, 3242, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 3170, 1506, 3314, 1406}
1047  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': ','}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1047, 1434, 3747, 3243, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1479, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3171, 3315, 1406, 1407}
1048  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '#'}
   {1408, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1048, 1434, 3748, 3244, 1334, 1336, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1480, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3172, 3316, 1406}
1049  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'int'}
   {1409, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1049, 1434, 3749, 3245, 1334, 1337, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1481, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3173, 3317, 1406}
1050  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'if'}
   {1410, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1050, 1434, 3750, 3246, 1334, 1338, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1482, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3174, 3318, 1406}
1051  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '('}
   {1411, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1051, 3751, 3247, 1334, 1339, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1483, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3175, 3319, 1406}
1052  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'else'}
   {1412, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1052, 3752, 3248, 1334, 1340, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1484, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3176, 3320, 1406}
1053  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '*'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1053, 3753, 3249, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3177, 3321, 1406}
1054  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '-='}
   {1413, 1414, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1054, 3754, 3250, 1334, 1341, 1342, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1486, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3178, 3322, 1406}
1055  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'identifier'}
   {1413, 1415, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1055, 3755, 3251, 1334, 1341, 1343, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1487, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3179, 3323, 1406}
1056  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '<='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1056, 3756, 3252, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3180, 3324, 1406}
1057  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '>'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1057, 3757, 3253, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3181, 3325, 1406}
1058  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'void'}
   {1413, 1416, 1417, 1418, 1420, 1422, 1424, 1425, 1430, 1434, 1058, 3758, 3254, 1334, 1341, 1344, 1345, 1346, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1490, 1492, 1494, 1496, 1497, 3326, 1502, 1506, 3182, 1406}
1059  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '/='}
   {1413, 1416, 1417, 1419, 1420, 1422, 1424, 1425, 1430, 1434, 1059, 3759, 1334, 3255, 1341, 1344, 1345, 1347, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1491, 1492, 1494, 1496, 1497, 1502, 1506, 3183, 1406, 3327}
1060  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '/'}
   {3328, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1060, 3760, 1334, 3256, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3184, 1406}
1061  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'while'}
   {3329, 1413, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 1061, 3761, 1334, 3257, 1341, 1344, 1345, 1348, 1349, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 3185, 1406}
1062  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '-'}
   {3330, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1062, 3762, 1334, 3258, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3186, 1406}
1063  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': ';'}
   {3331, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 1063, 3763, 1334, 3259, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1495, 1496, 1497, 1502, 1506, 3187, 1406}
1064  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '=='}
   {3332, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1064, 3764, 1334, 3260, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3188, 1406}
1065  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '<'}
   {3333, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1065, 3765, 1334, 1341, 3261, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3189, 1406}
1066  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'break'}
   {1413, 3334, 1416, 1417, 1420, 1422, 1424, 1425, 1426, 1430, 1434, 1066, 3766, 1334, 1341, 3262, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1354, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1498, 1502, 1506, 3190, 1406}
1067  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '='}
   {1413, 3335, 1416, 1417, 1420, 1422, 1424, 1425, 1427, 1430, 1434, 1067, 1334, 3767, 1341, 3263, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1355, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1499, 1502, 1506, 3191, 1406}
1068  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '}'}
   {1413, 3336, 1416, 1417, 1420, 1422, 1424, 1425, 1428, 1430, 1434, 1068, 1334, 3768, 1341, 3264, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1356, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1500, 1502, 1506, 3192, 1406}
1069  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '+='}
   {1413, 1416, 3337, 1417, 1420, 1422, 1424, 1425, 1429, 1430, 1434, 1069, 1334, 3769, 1341, 1344, 3265, 1345, 1348, 1350, 1478, 1352, 1353, 1357, 1358, 1485, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1501, 1502, 1506, 3193, 1406}
1070  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '+'}
   {1413, 1416, 1417, 3338, 1420, 1422, 1424, 1425, 1430, 1434, 1070, 1334, 3770, 1341, 1344, 1345, 3266, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3194, 1406}
1071  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '*='}
   {1413, 1416, 1417, 3339, 1420, 1422, 1424, 1425, 1430, 1431, 1434, 1071, 1334, 3771, 1341, 1344, 1345, 3267, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1359, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1503, 1506, 3195, 1406}
1072  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '{'}
   {1413, 1416, 1417, 3340, 1420, 1422, 1424, 1425, 1430, 1432, 1434, 1072, 1334, 3772, 1341, 1344, 1345, 3268, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1360, 1488, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1504, 1506, 3196, 1406}
1073  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'continue'}
   {1413, 1416, 1417, 1420, 3341, 1422, 1424, 1425, 1430, 1433, 1434, 1073, 1334, 3773, 1341, 1344, 1345, 1348, 3269, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1361, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1505, 1506, 3197, 1406}
1074  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '>='}
   {1413, 1416, 1417, 1420, 3342, 1422, 1424, 1425, 1430, 1434, 1074, 1334, 1341, 3774, 1344, 1345, 1348, 3270, 1350, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 3198, 1502, 1506, 1406}
1075  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': ')'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1075, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1076  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'float'}
   {3200, 1413, 1416, 1417, 1420, 1422, 3344, 1424, 1425, 1430, 1434, 1436, 1076, 1334, 1341, 1344, 1345, 3776, 1348, 1350, 1478, 1352, 1353, 3272, 1485, 1358, 1488, 1489, 1362, 1364, 1492, 1494, 1496, 1497, 1502, 1506, 1508, 1406}
1077  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'double'}
   {3201, 1413, 1416, 1417, 1420, 1422, 1424, 3345, 1425, 1430, 1434, 1437, 1077, 1334, 1341, 1344, 1345, 3777, 1348, 1350, 1478, 1352, 1353, 3273, 1485, 1358, 1488, 1489, 1362, 1492, 1365, 1494, 1496, 1497, 1502, 1506, 1509, 1406}
1078  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'char'}
   {3202, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3346, 1430, 1434, 1438, 1334, 1078, 1341, 1344, 1345, 3778, 1348, 1350, 1478, 1352, 1353, 3274, 1485, 1358, 1488, 1489, 1362, 1492, 1366, 1494, 1496, 1497, 1502, 1506, 1510, 1406}
1079  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'number'}
   {3203, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3347, 1430, 1434, 1439, 1334, 1079, 1341, 1344, 1345, 3779, 1348, 1350, 1478, 1352, 1353, 3275, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1367, 1496, 1497, 1502, 1506, 1511, 1406}
1080  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'return'}
   {1080}
1081  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'for'}
   {1081}
1082  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '!='}
   {1082}
1083  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': ','}
   {1083}
1084  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '#'}
   {1084}
1085  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'int'}
   {1085}
1086  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'if'}
   {1086}
1087  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '('}
   {1087}
1088  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'else'}
   {1088}
1089  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '*'}
   {1089}
1090  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '-='}
   {1090}
1091  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'identifier'}
   {1091}
1092  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '<='}
   {1092}
1093  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '>'}
   {1093}
1094  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'void'}
   {1094}
1095  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '/='}
   {1095}
1096  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '/'}
   {1096}
1097  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'while'}
   {1097}
1098  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '-'}
   {1098}
1099  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': ';'}
   {1099}
1100  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '=='}
   {1100}
1101  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '<'}
   {1101}
1102  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'break'}
   {1102}
1103  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '='}
   {1103}
1104  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '}'}
   {1104}
1105  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '+='}
   {1105}
1106  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '+'}
   {1106}
1107  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '*='}
   {1107}
1108  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '{'}
   {1108}
1109  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'continue'}
   {1109}
1110  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '>='}
   {1110}
1111  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': ')'}
   {1111}
1112  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'float'}
   {1112}
1113  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'double'}
   {1113}
1114  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'char'}
   {1114}
1115  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'number'}
   {1115}
1116  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'return'}
   {1116}
1117  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'for'}
   {1117}
1118  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '!='}
   {1118}
1119  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': ','}
   {1119}
1120  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '#'}
   {1120}
1121  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'int'}
   {1121}
1122  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'if'}
   {1122}
1123  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '('}
   {1123}
1124  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'else'}
   {1124}
1125  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '*'}
   {1125}
1126  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '-='}
   {1126}
1127  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'identifier'}
   {1127}
1128  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '<='}
   {1128}
1129  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '>'}
   {1129}
1130  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'void'}
   {1130}
1131  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '/='}
   {1131}
1132  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '/'}
   {1132}
1133  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'while'}
   {1133}
1134  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '-'}
   {1134}
1135  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': ';'}
   {1135}
1136  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '=='}
   {1136}
1137  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '<'}
   {1137}
1138  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'break'}
   {1138}
1139  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '='}
   {1139}
1140  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '}'}
   {1140}
1141  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '+='}
   {1141}
1142  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '+'}
   {1142}
1143  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '*='}
   {1143}
1144  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '{'}
   {1144}
1145  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'continue'}
   {1145}
1146  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '>='}
   {1146}
1147  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': ')'}
   {1147}
1148  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'float'}
   {1148}
1149  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'double'}
   {1149}
1150  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'char'}
   {1150}
1151  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'number'}
   {1151}
1152  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'return'}
   {1152}
1153  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'for'}
   {1153}
1154  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '!='}
   {1154}
1155  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': ','}
   {1155}
1156  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '#'}
   {1156}
1157  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'int'}
   {1157}
1158  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'if'}
   {1158}
1159  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '('}
   {1159}
1160  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'else'}
   {1160}
1161  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '*'}
   {1161}
1162  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '-='}
   {1162}
1163  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'identifier'}
   {1163}
1164  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '<='}
   {1164}
1165  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '>'}
   {1165}
1166  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'void'}
   {1166}
1167  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '/='}
   {1167}
1168  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '/'}
   {1168}
1169  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'while'}
   {1169}
1170  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '-'}
   {1170}
1171  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': ';'}
   {1171}
1172  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '=='}
   {1172}
1173  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '<'}
   {1173}
1174  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'break'}
   {1174}
1175  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '='}
   {1175}
1176  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '}'}
   {1176}
1177  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '+='}
   {1177}
1178  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '+'}
   {1178}
1179  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '*='}
   {1179}
1180  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '{'}
   {1180}
1181  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'continue'}
   {1181}
1182  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '>='}
   {1182}
1183  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': ')'}
   {1183}
1184  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'float'}
   {1184}
1185  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'double'}
   {1185}
1186  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'char'}
   {1186}
1187  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'number'}
   {1187}
1188  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'return'}
   {900, 1188, 903}
1189  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'for'}
   {1189, 901, 903}
1190  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '!='}
   {902, 1190, 903}
1191  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': ','}
   {903, 1191}
1192  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '#'}
   {1192, 904, 903}
1193  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'int'}
   {1193, 905, 903}
1194  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'if'}
   {1194, 906, 903}
1195  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '('}
   {1195, 907, 903}
1196  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'else'}
   {908, 1196, 903}
1197  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '*'}
   {1197, 909, 903}
1198  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '-='}
   {910, 1198, 903}
1199  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'identifier'}
   {903, 911, 1199}
1200  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '<='}
   {1200, 912, 903}
1201  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '>'}
   {1201, 913, 903}
1202  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'void'}
   {1202, 914, 903}
1203  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '/='}
   {1203, 915, 903}
1204  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '/'}
   {916, 1204, 903}
1205  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'while'}
   {1205, 917, 903}
1206  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '-'}
   {918, 1206, 903}
1207  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': ';'}
   {903, 919, 1207}
1208  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '=='}
   {1208, 920, 903}
1209  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '<'}
   {1209, 921, 903}
1210  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'break'}
   {1210, 922, 903}
1211  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '='}
   {1211, 923, 903}
1212  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '}'}
   {924, 1212, 903}
1213  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '+='}
   {1213, 925, 903}
1214  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '+'}
   {926, 1214, 903}
1215  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '*='}
   {903, 927, 1215}
1216  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '{'}
   {1216, 928, 903}
1217  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'continue'}
   {1217, 929, 903}
1218  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '>='}
   {930, 1218, 903}
1219  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': ')'}
   {1219, 931, 903}
1220  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'float'}
   {932, 1220, 903}
1221  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'double'}
   {933, 1221, 903}
1222  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'char'}
   {934, 1222, 903}
1223  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'number'}
   {903, 935, 1223}
1224  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'return'}
   {1224, 1296, 1152}
1225  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'for'}
   {1225, 1153, 1297}
1226  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '!='}
   {1226, 1298, 1154}
1227  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': ','}
   {1299, 1227, 1155}
1228  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '#'}
   {1156, 1228, 1300}
1229  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'int'}
   {1301, 1229, 1157}
1230  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'if'}
   {1158, 1230, 1302}
1231  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '('}
   {1159, 1303, 1231}
1232  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'else'}
   {1232, 1304, 1160}
1233  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '*'}
   {1233, 1161, 1305}
1234  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '-='}
   {1234, 1306, 1162}
1235  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'identifier'}
   {1307, 1235, 1163}
1236  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '<='}
   {1164, 1236, 1308}
1237  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '>'}
   {1309, 1237, 1165}
1238  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'void'}
   {1166, 1238, 1310}
1239  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '/='}
   {1167, 1311, 1239}
1240  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '/'}
   {1240, 1312, 1168}
1241  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'while'}
   {1241, 1169, 1313}
1242  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '-'}
   {1242, 1314, 1170}
1243  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': ';'}
   {1315, 1243, 1171}
1244  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '=='}
   {1172, 1244, 1316}
1245  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '<'}
   {1317, 1245, 1173}
1246  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'break'}
   {1318, 1174, 1246}
1247  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '='}
   {1175, 1319, 1247}
1248  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '}'}
   {1248, 1320, 1176}
1249  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '+='}
   {1249, 1177, 1321}
1250  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '+'}
   {1250, 1322, 1178}
1251  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '*='}
   {1323, 1251, 1179}
1252  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '{'}
   {1180, 1252, 1324}
1253  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'continue'}
   {1325, 1253, 1181}
1254  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '>='}
   {1326, 1182, 1254}
1255  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': ')'}
   {1183, 1327, 1255}
1256  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'float'}
   {1256, 1328, 1184}
1257  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'double'}
   {1257, 1185, 1329}
1258  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'char'}
   {1186, 1258, 1330}
1259  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'number'}
   {1331, 1259, 1187}
1260  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'return'}
   {1260}
1261  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'for'}
   {1261}
1262  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '!='}
   {1262}
1263  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': ','}
   {1263}
1264  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '#'}
   {1264}
1265  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'int'}
   {1265}
1266  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'if'}
   {1266}
1267  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '('}
   {1267}
1268  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'else'}
   {1268}
1269  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '*'}
   {1269}
1270  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '-='}
   {1270}
1271  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'identifier'}
   {1271}
1272  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '<='}
   {1272}
1273  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '>'}
   {1273}
1274  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'void'}
   {1274}
1275  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '/='}
   {1275}
1276  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '/'}
   {1276}
1277  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'while'}
   {1277}
1278  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '-'}
   {1278}
1279  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': ';'}
   {1279}
1280  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '=='}
   {1280}
1281  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '<'}
   {1281}
1282  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'break'}
   {1282}
1283  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '='}
   {1283}
1284  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '}'}
   {1284}
1285  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '+='}
   {1285}
1286  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '+'}
   {1286}
1287  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '*='}
   {1287}
1288  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '{'}
   {1288}
1289  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'continue'}
   {1289}
1290  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '>='}
   {1290}
1291  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': ')'}
   {1291}
1292  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'float'}
   {1292}
1293  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'double'}
   {1293}
1294  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'char'}
   {1294}
1295  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'number'}
   {1295}
1296  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'return'}
   {1296}
1297  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'for'}
   {1297}
1298  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '!='}
   {1298}
1299  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': ','}
   {1299}
1300  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '#'}
   {1300}
1301  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'int'}
   {1301}
1302  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'if'}
   {1302}
1303  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '('}
   {1303}
1304  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'else'}
   {1304}
1305  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '*'}
   {1305}
1306  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '-='}
   {1306}
1307  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'identifier'}
   {1307}
1308  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '<='}
   {1308}
1309  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '>'}
   {1309}
1310  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'void'}
   {1310}
1311  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '/='}
   {1311}
1312  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '/'}
   {1312}
1313  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'while'}
   {1313}
1314  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '-'}
   {1314}
1315  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': ';'}
   {1315}
1316  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '=='}
   {1316}
1317  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '<'}
   {1317}
1318  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'break'}
   {1318}
1319  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '='}
   {1319}
1320  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '}'}
   {1320}
1321  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '+='}
   {1321}
1322  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '+'}
   {1322}
1323  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '*='}
   {1323}
1324  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '{'}
   {1324}
1325  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'continue'}
   {1325}
1326  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '>='}
   {1326}
1327  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': ')'}
   {1327}
1328  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'float'}
   {1328}
1329  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'double'}
   {1329}
1330  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'char'}
   {1330}
1331  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'number'}
   {1331}
1332  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'return'}
   {1332}
1333  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'for'}
   {1333}
1334  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '!='}
   {1334}
1335  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': ','}
   {1335}
1336  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '#'}
   {1336}
1337  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'int'}
   {1337}
1338  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'if'}
   {1338}
1339  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '('}
   {1339}
1340  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'else'}
   {1340}
1341  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '*'}
   {1341}
1342  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '-='}
   {1342}
1343  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'identifier'}
   {1343}
1344  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '<='}
   {1344}
1345  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '>'}
   {1345}
1346  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'void'}
   {1346}
1347  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '/='}
   {1347}
1348  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '/'}
   {1348}
1349  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'while'}
   {1349}
1350  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '-'}
   {1350}
1351  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': ';'}
   {1351}
1352  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '=='}
   {1352}
1353  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '<'}
   {1353}
1354  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'break'}
   {1354}
1355  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '='}
   {1355}
1356  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '}'}
   {1356}
1357  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '+='}
   {1357}
1358  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '+'}
   {1358}
1359  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '*='}
   {1359}
1360  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '{'}
   {1360}
1361  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'continue'}
   {1361}
1362  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '>='}
   {1362}
1363  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': ')'}
   {1363}
1364  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'float'}
   {1364}
1365  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'double'}
   {1365}
1366  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'char'}
   {1366}
1367  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'number'}
   {1367}
1368  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'return'}
   {1368}
1369  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'for'}
   {1369}
1370  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '!='}
   {1370}
1371  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': ','}
   {1371}
1372  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '#'}
   {1372}
1373  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'int'}
   {1373}
1374  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'if'}
   {1374}
1375  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '('}
   {1375}
1376  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'else'}
   {1376}
1377  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '*'}
   {1377}
1378  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '-='}
   {1378}
1379  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'identifier'}
   {1379}
1380  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '<='}
   {1380}
1381  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '>'}
   {1381}
1382  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'void'}
   {1382}
1383  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '/='}
   {1383}
1384  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '/'}
   {1384}
1385  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'while'}
   {1385}
1386  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '-'}
   {1386}
1387  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': ';'}
   {1387}
1388  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '=='}
   {1388}
1389  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '<'}
   {1389}
1390  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'break'}
   {1390}
1391  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '='}
   {1391}
1392  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '}'}
   {1392}
1393  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '+='}
   {1393}
1394  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '+'}
   {1394}
1395  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '*='}
   {1395}
1396  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '{'}
   {1396}
1397  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'continue'}
   {1397}
1398  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '>='}
   {1398}
1399  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': ')'}
   {1399}
1400  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'float'}
   {1400}
1401  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'double'}
   {1401}
1402  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'char'}
   {1402}
1403  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'number'}
   {1403}
1404  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'return'}
   {1404}
1405  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'for'}
   {1405}
1406  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '!='}
   {1406}
1407  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': ','}
   {1407}
1408  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '#'}
   {1408}
1409  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'int'}
   {1409}
1410  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'if'}
   {1410}
1411  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '('}
   {1411}
1412  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'else'}
   {1412}
1413  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '*'}
   {1413}
1414  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '-='}
   {1414}
1415  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'identifier'}
   {1415}
1416  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '<='}
   {1416}
1417  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '>'}
   {1417}
1418  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'void'}
   {1418}
1419  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '/='}
   {1419}
1420  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '/'}
   {1420}
1421  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'while'}
   {1421}
1422  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '-'}
   {1422}
1423  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': ';'}
   {1423}
1424  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '=='}
   {1424}
1425  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '<'}
   {1425}
1426  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'break'}
   {1426}
1427  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '='}
   {1427}
1428  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '}'}
   {1428}
1429  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '+='}
   {1429}
1430  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '+'}
   {1430}
1431  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '*='}
   {1431}
1432  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '{'}
   {1432}
1433  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'continue'}
   {1433}
1434  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '>='}
   {1434}
1435  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': ')'}
   {1435}
1436  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'float'}
   {1436}
1437  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'double'}
   {1437}
1438  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'char'}
   {1438}
1439  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'number'}
   {1439}
1440  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'return'}
   {1440}
1441  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'for'}
   {1441}
1442  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '!='}
   {1442}
1443  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': ','}
   {1443}
1444  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '#'}
   {1444}
1445  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'int'}
   {1445}
1446  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'if'}
   {1446}
1447  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '('}
   {1447}
1448  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'else'}
   {1448}
1449  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '*'}
   {1449}
1450  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '-='}
   {1450}
1451  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'identifier'}
   {1451}
1452  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '<='}
   {1452}
1453  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '>'}
   {1453}
1454  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'void'}
   {1454}
1455  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '/='}
   {1455}
1456  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '/'}
   {1456}
1457  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'while'}
   {1457}
1458  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '-'}
   {1458}
1459  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': ';'}
   {1459}
1460  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '=='}
   {1460}
1461  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '<'}
   {1461}
1462  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'break'}
   {1462}
1463  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '='}
   {1463}
1464  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '}'}
   {1464}
1465  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '+='}
   {1465}
1466  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '+'}
   {1466}
1467  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '*='}
   {1467}
1468  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '{'}
   {1468}
1469  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'continue'}
   {1469}
1470  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '>='}
   {1470}
1471  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': ')'}
   {1471}
1472  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'float'}
   {1472}
1473  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'double'}
   {1473}
1474  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'char'}
   {1474}
1475  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'number'}
   {1475}
1476  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'return'}
   {1476}
1477  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'for'}
   {1477}
1478  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '!='}
   {1478}
1479  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': ','}
   {1479}
1480  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '#'}
   {1480}
1481  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'int'}
   {1481}
1482  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'if'}
   {1482}
1483  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '('}
   {1483}
1484  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'else'}
   {1484}
1485  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '*'}
   {1485}
1486  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '-='}
   {1486}
1487  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'identifier'}
   {1487}
1488  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '<='}
   {1488}
1489  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '>'}
   {1489}
1490  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'void'}
   {1490}
1491  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '/='}
   {1491}
1492  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '/'}
   {1492}
1493  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'while'}
   {1493}
1494  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '-'}
   {1494}
1495  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': ';'}
   {1495}
1496  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '=='}
   {1496}
1497  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '<'}
   {1497}
1498  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'break'}
   {1498}
1499  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '='}
   {1499}
1500  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '}'}
   {1500}
1501  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '+='}
   {1501}
1502  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '+'}
   {1502}
1503  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '*='}
   {1503}
1504  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '{'}
   {1504}
1505  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'continue'}
   {1505}
1506  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '>='}
   {1506}
1507  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': ')'}
   {1507}
1508  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'float'}
   {1508}
1509  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'double'}
   {1509}
1510  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'char'}
   {1510}
1511  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'number'}
   {1511}
1512  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'return'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1512, 1406, 3199}
1513  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'for'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1513, 1406, 3199}
1514  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '!='}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1514, 1406, 3199}
1515  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': ','}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1515, 1406, 3199}
1516  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '#'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1516, 1406, 3199}
1517  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'int'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1517, 1406, 3199}
1518  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'if'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1518, 1406, 3199}
1519  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '('}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1519, 1406, 3199}
1520  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'else'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1520, 1406, 3199}
1521  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '*'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1521, 1406, 3199}
1522  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '-='}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1522, 1406, 3199}
1523  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'identifier'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1523, 1406, 3199}
1524  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '<='}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1524, 1406, 3199}
1525  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '>'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1525, 1406, 3199}
1526  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'void'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1526, 1406, 3199}
1527  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '/='}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1527, 1406, 3199}
1528  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '/'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1528, 1406, 3199}
1529  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'while'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1529, 1406, 3199}
1530  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '-'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1530, 1406, 3199}
1531  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': ';'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1531, 1406, 3199}
1532  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '=='}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1532, 1406, 3199}
1533  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '<'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1533, 1406, 3199}
1534  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'break'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1534, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1535  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '='}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 3199, 1506, 1507, 1406, 1535}
1536  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '}'}
   {1536, 1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1537  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '+='}
   {1537, 1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1538  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '+'}
   {1538, 1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1539  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '*='}
   {1539, 1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1540  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '{'}
   {1540, 1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1541  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'continue'}
   {1541, 1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1542  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '>='}
   {1413, 1542, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1543  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': ')'}
   {1413, 1543, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1544  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'float'}
   {1413, 1544, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1545  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'double'}
   {1413, 1416, 1545, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1546  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'char'}
   {1413, 1416, 1417, 1546, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1547  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'number'}
   {1413, 1416, 1417, 1547, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
1548  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'return'}
   {1548}
1549  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'for'}
   {1549}
1550  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '!='}
   {1550}
1551  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': ','}
   {1551}
1552  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '#'}
   {1552}
1553  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'int'}
   {1553}
1554  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'if'}
   {1554}
1555  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '('}
   {1555}
1556  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'else'}
   {1556}
1557  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '*'}
   {1557}
1558  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '-='}
   {1558}
1559  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'identifier'}
   {1559}
1560  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '<='}
   {1560}
1561  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '>'}
   {1561}
1562  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'void'}
   {1562}
1563  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '/='}
   {1563}
1564  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '/'}
   {1564}
1565  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'while'}
   {1565}
1566  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '-'}
   {1566}
1567  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': ';'}
   {1567}
1568  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '=='}
   {1568}
1569  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '<'}
   {1569}
1570  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'break'}
   {1570}
1571  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '='}
   {1571}
1572  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '}'}
   {1572}
1573  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '+='}
   {1573}
1574  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '+'}
   {1574}
1575  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '*='}
   {1575}
1576  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '{'}
   {1576}
1577  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'continue'}
   {1577}
1578  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '>='}
   {1578}
1579  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': ')'}
   {1579}
1580  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'float'}
   {1580}
1581  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'double'}
   {1581}
1582  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'char'}
   {1582}
1583  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'number'}
   {1583}
1584  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'return'}
   {1584}
1585  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'for'}
   {1585}
1586  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '!='}
   {1586}
1587  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': ','}
   {1587}
1588  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '#'}
   {1588}
1589  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'int'}
   {1589}
1590  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'if'}
   {1590}
1591  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '('}
   {1591}
1592  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'else'}
   {1592}
1593  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '*'}
   {1593}
1594  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '-='}
   {1594}
1595  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'identifier'}
   {1595}
1596  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '<='}
   {1596}
1597  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '>'}
   {1597}
1598  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'void'}
   {1598}
1599  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '/='}
   {1599}
1600  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '/'}
   {1600}
1601  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'while'}
   {1601}
1602  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '-'}
   {1602}
1603  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': ';'}
   {1603}
1604  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '=='}
   {1604}
1605  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '<'}
   {1605}
1606  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'break'}
   {1606}
1607  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '='}
   {1607}
1608  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '}'}
   {1608}
1609  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '+='}
   {1609}
1610  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '+'}
   {1610}
1611  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '*='}
   {1611}
1612  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '{'}
   {1612}
1613  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'continue'}
   {1613}
1614  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '>='}
   {1614}
1615  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': ')'}
   {1615}
1616  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'float'}
   {1616}
1617  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'double'}
   {1617}
1618  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'char'}
   {1618}
1619  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'number'}
   {1619}
1620  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'return'}
   {1620}
1621  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'for'}
   {1621}
1622  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '!='}
   {1622}
1623  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': ','}
   {1623}
1624  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '#'}
   {1624}
1625  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'int'}
   {1625}
1626  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'if'}
   {1626}
1627  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '('}
   {1627}
1628  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'else'}
   {1628}
1629  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '*'}
   {1629}
1630  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '-='}
   {1630}
1631  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'identifier'}
   {1631}
1632  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '<='}
   {1632}
1633  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '>'}
   {1633}
1634  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'void'}
   {1634}
1635  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '/='}
   {1635}
1636  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '/'}
   {1636}
1637  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'while'}
   {1637}
1638  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '-'}
   {1638}
1639  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': ';'}
   {1639}
1640  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '=='}
   {1640}
1641  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '<'}
   {1641}
1642  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'break'}
   {1642}
1643  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '='}
   {1643}
1644  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '}'}
   {1644}
1645  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '+='}
   {1645}
1646  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '+'}
   {1646}
1647  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '*='}
   {1647}
1648  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '{'}
   {1648}
1649  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'continue'}
   {1649}
1650  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '>='}
   {1650}
1651  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': ')'}
   {1651}
1652  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'float'}
   {1652}
1653  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'double'}
   {1653}
1654  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'char'}
   {1654}
1655  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'number'}
   {1655}
1656  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'return'}
   {1656}
1657  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'for'}
   {1657}
1658  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '!='}
   {1658}
1659  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': ','}
   {1659}
1660  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '#'}
   {1660}
1661  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'int'}
   {1661}
1662  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'if'}
   {1662}
1663  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '('}
   {1663}
1664  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'else'}
   {1664}
1665  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '*'}
   {1665}
1666  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '-='}
   {1666}
1667  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'identifier'}
   {1667}
1668  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '<='}
   {1668}
1669  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '>'}
   {1669}
1670  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'void'}
   {1670}
1671  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '/='}
   {1671}
1672  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '/'}
   {1672}
1673  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'while'}
   {1673}
1674  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '-'}
   {1674}
1675  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': ';'}
   {1675}
1676  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '=='}
   {1676}
1677  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '<'}
   {1677}
1678  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'break'}
   {1678}
1679  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '='}
   {1679}
1680  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '}'}
   {1680}
1681  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '+='}
   {1681}
1682  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '+'}
   {1682}
1683  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '*='}
   {1683}
1684  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '{'}
   {1684}
1685  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'continue'}
   {1685}
1686  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '>='}
   {1686}
1687  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': ')'}
   {1687}
1688  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'float'}
   {1688}
1689  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'double'}
   {1689}
1690  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'char'}
   {1690}
1691  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'number'}
   {1691}
1692  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'return'}
   {1692}
1693  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'for'}
   {1693}
1694  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '!='}
   {1694}
1695  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': ','}
   {1695}
1696  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '#'}
   {1696}
1697  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'int'}
   {1697}
1698  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'if'}
   {1698}
1699  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '('}
   {1699}
1700  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'else'}
   {1700}
1701  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '*'}
   {1701}
1702  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '-='}
   {1702}
1703  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'identifier'}
   {1703}
1704  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '<='}
   {1704}
1705  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '>'}
   {1705}
1706  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'void'}
   {1706}
1707  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '/='}
   {1707}
1708  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '/'}
   {1708}
1709  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'while'}
   {1709}
1710  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '-'}
   {1710}
1711  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': ';'}
   {1711}
1712  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '=='}
   {1712}
1713  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '<'}
   {1713}
1714  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'break'}
   {1714}
1715  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '='}
   {1715}
1716  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '}'}
   {1716}
1717  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '+='}
   {1717}
1718  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '+'}
   {1718}
1719  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '*='}
   {1719}
1720  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '{'}
   {1720}
1721  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'continue'}
   {1721}
1722  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '>='}
   {1722}
1723  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': ')'}
   {1723}
1724  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'float'}
   {1724}
1725  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'double'}
   {1725}
1726  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'char'}
   {1726}
1727  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'number'}
   {1727}
1728  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'return'}
   {1728}
1729  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'for'}
   {1729}
1730  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '!='}
   {1730}
1731  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': ','}
   {1731}
1732  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '#'}
   {1732}
1733  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'int'}
   {1733}
1734  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'if'}
   {1734}
1735  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '('}
   {1735}
1736  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'else'}
   {1736}
1737  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '*'}
   {1737}
1738  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '-='}
   {1738}
1739  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'identifier'}
   {1739}
1740  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '<='}
   {1740}
1741  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '>'}
   {1741}
1742  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'void'}
   {1742}
1743  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '/='}
   {1743}
1744  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '/'}
   {1744}
1745  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'while'}
   {1745}
1746  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '-'}
   {1746}
1747  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': ';'}
   {1747}
1748  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '=='}
   {1748}
1749  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '<'}
   {1749}
1750  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'break'}
   {1750}
1751  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '='}
   {1751}
1752  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '}'}
   {1752}
1753  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '+='}
   {1753}
1754  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '+'}
   {1754}
1755  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '*='}
   {1755}
1756  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '{'}
   {1756}
1757  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'continue'}
   {1757}
1758  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '>='}
   {1758}
1759  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': ')'}
   {1759}
1760  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'float'}
   {1760}
1761  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'double'}
   {1761}
1762  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'char'}
   {1762}
1763  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'number'}
   {1763}
1764  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'return'}
   {1764}
1765  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'for'}
   {1765}
1766  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '!='}
   {1766}
1767  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': ','}
   {1767}
1768  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '#'}
   {1768}
1769  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'int'}
   {1769}
1770  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'if'}
   {1770}
1771  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '('}
   {1771}
1772  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'else'}
   {1772}
1773  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '*'}
   {1773}
1774  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '-='}
   {1774}
1775  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'identifier'}
   {1775}
1776  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '<='}
   {1776}
1777  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '>'}
   {1777}
1778  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'void'}
   {1778}
1779  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '/='}
   {1779}
1780  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '/'}
   {1780}
1781  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'while'}
   {1781}
1782  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '-'}
   {1782}
1783  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': ';'}
   {1783}
1784  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '=='}
   {1784}
1785  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '<'}
   {1785}
1786  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'break'}
   {1786}
1787  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '='}
   {1787}
1788  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '}'}
   {1788}
1789  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '+='}
   {1789}
1790  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '+'}
   {1790}
1791  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '*='}
   {1791}
1792  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '{'}
   {1792}
1793  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'continue'}
   {1793}
1794  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '>='}
   {1794}
1795  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': ')'}
   {1795}
1796  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'float'}
   {1796}
1797  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'double'}
   {1797}
1798  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'char'}
   {1798}
1799  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'number'}
   {1799}
1800  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'return'}
   {1800}
1801  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'for'}
   {1801}
1802  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '!='}
   {1802}
1803  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': ','}
   {1803}
1804  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '#'}
   {1804}
1805  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'int'}
   {1805}
1806  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'if'}
   {1806}
1807  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '('}
   {1807}
1808  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'else'}
   {1808}
1809  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '*'}
   {1809}
1810  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '-='}
   {1810}
1811  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'identifier'}
   {1811}
1812  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '<='}
   {1812}
1813  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '>'}
   {1813}
1814  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'void'}
   {1814}
1815  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '/='}
   {1815}
1816  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '/'}
   {1816}
1817  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'while'}
   {1817}
1818  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '-'}
   {1818}
1819  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': ';'}
   {1819}
1820  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '=='}
   {1820}
1821  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '<'}
   {1821}
1822  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'break'}
   {1822}
1823  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '='}
   {1823}
1824  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '}'}
   {1824}
1825  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '+='}
   {1825}
1826  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '+'}
   {1826}
1827  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '*='}
   {1827}
1828  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '{'}
   {1828}
1829  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'continue'}
   {1829}
1830  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '>='}
   {1830}
1831  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': ')'}
   {1831}
1832  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'float'}
   {1832}
1833  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'double'}
   {1833}
1834  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'char'}
   {1834}
1835  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'number'}
   {1835}
1836  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'return'}
   {1836}
1837  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'for'}
   {1837}
1838  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '!='}
   {1838}
1839  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': ','}
   {1839}
1840  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '#'}
   {1840}
1841  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'int'}
   {1841}
1842  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'if'}
   {1842}
1843  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '('}
   {1843}
1844  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'else'}
   {1844}
1845  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '*'}
   {1845}
1846  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '-='}
   {1846}
1847  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'identifier'}
   {1847}
1848  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '<='}
   {1848}
1849  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '>'}
   {1849}
1850  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'void'}
   {1850}
1851  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '/='}
   {1851}
1852  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '/'}
   {1852}
1853  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'while'}
   {1853}
1854  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '-'}
   {1854}
1855  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': ';'}
   {1855}
1856  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '=='}
   {1856}
1857  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '<'}
   {1857}
1858  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'break'}
   {1858}
1859  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '='}
   {1859}
1860  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '}'}
   {1860}
1861  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '+='}
   {1861}
1862  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '+'}
   {1862}
1863  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '*='}
   {1863}
1864  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '{'}
   {1864}
1865  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'continue'}
   {1865}
1866  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '>='}
   {1866}
1867  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': ')'}
   {1867}
1868  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'float'}
   {1868}
1869  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'double'}
   {1869}
1870  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'char'}
   {1870}
1871  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'number'}
   {1871}
1872  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'return'}
   {1872}
1873  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'for'}
   {1873}
1874  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '!='}
   {1874}
1875  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': ','}
   {1875}
1876  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '#'}
   {1876}
1877  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'int'}
   {1877}
1878  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'if'}
   {1878}
1879  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '('}
   {1879}
1880  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'else'}
   {1880}
1881  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '*'}
   {1881}
1882  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '-='}
   {1882}
1883  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'identifier'}
   {1883}
1884  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '<='}
   {1884}
1885  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '>'}
   {1885}
1886  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'void'}
   {1886}
1887  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '/='}
   {1887}
1888  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '/'}
   {1888}
1889  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'while'}
   {1889}
1890  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '-'}
   {1890}
1891  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': ';'}
   {1891}
1892  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '=='}
   {1892}
1893  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '<'}
   {1893}
1894  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'break'}
   {1894}
1895  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '='}
   {1895}
1896  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '}'}
   {1896}
1897  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '+='}
   {1897}
1898  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '+'}
   {1898}
1899  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '*='}
   {1899}
1900  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '{'}
   {1900}
1901  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'continue'}
   {1901}
1902  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '>='}
   {1902}
1903  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': ')'}
   {1903}
1904  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'float'}
   {1904}
1905  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'double'}
   {1905}
1906  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'char'}
   {1906}
1907  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'number'}
   {1907}
1908  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'return'}
   {1908}
1909  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'for'}
   {1909}
1910  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '!='}
   {1910}
1911  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': ','}
   {1911}
1912  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '#'}
   {1912}
1913  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'int'}
   {1913}
1914  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'if'}
   {1914}
1915  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '('}
   {1915}
1916  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'else'}
   {1916}
1917  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '*'}
   {1917}
1918  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '-='}
   {1918}
1919  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'identifier'}
   {1919}
1920  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '<='}
   {1920}
1921  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '>'}
   {1921}
1922  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'void'}
   {1922}
1923  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '/='}
   {1923}
1924  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '/'}
   {1924}
1925  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'while'}
   {1925}
1926  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '-'}
   {1926}
1927  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': ';'}
   {1927}
1928  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '=='}
   {1928}
1929  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '<'}
   {1929}
1930  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'break'}
   {1930}
1931  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '='}
   {1931}
1932  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '}'}
   {1932}
1933  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '+='}
   {1933}
1934  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '+'}
   {1934}
1935  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '*='}
   {1935}
1936  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '{'}
   {1936}
1937  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'continue'}
   {1937}
1938  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '>='}
   {1938}
1939  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': ')'}
   {1939}
1940  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'float'}
   {1940}
1941  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'double'}
   {1941}
1942  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'char'}
   {1942}
1943  {'left': 'relop', 'right': ['<'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'number'}
   {1943}
1944  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'return'}
   {1944}
1945  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'for'}
   {1945}
1946  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '!='}
   {1946}
1947  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': ','}
   {1947}
1948  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '#'}
   {1948}
1949  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'int'}
   {1949}
1950  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'if'}
   {1950}
1951  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '('}
   {1951}
1952  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'else'}
   {1952}
1953  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '*'}
   {1953}
1954  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '-='}
   {1954}
1955  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'identifier'}
   {1955}
1956  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '<='}
   {1956}
1957  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '>'}
   {1957}
1958  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'void'}
   {1958}
1959  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '/='}
   {1959}
1960  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '/'}
   {1960}
1961  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'while'}
   {1961}
1962  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '-'}
   {1962}
1963  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': ';'}
   {1963}
1964  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '=='}
   {1964}
1965  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '<'}
   {1965}
1966  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'break'}
   {1966}
1967  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '='}
   {1967}
1968  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '}'}
   {1968}
1969  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '+='}
   {1969}
1970  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '+'}
   {1970}
1971  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '*='}
   {1971}
1972  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '{'}
   {1972}
1973  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'continue'}
   {1973}
1974  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '>='}
   {1974}
1975  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': ')'}
   {1975}
1976  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'float'}
   {1976}
1977  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'double'}
   {1977}
1978  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'char'}
   {1978}
1979  {'left': 'relop', 'right': ['<'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'number'}
   {1979}
1980  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'return'}
   {1980}
1981  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'for'}
   {1981}
1982  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '!='}
   {1982}
1983  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': ','}
   {1983}
1984  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '#'}
   {1984}
1985  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'int'}
   {1985}
1986  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'if'}
   {1986}
1987  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '('}
   {1987}
1988  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'else'}
   {1988}
1989  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '*'}
   {1989}
1990  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '-='}
   {1990}
1991  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'identifier'}
   {1991}
1992  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '<='}
   {1992}
1993  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '>'}
   {1993}
1994  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'void'}
   {1994}
1995  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '/='}
   {1995}
1996  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '/'}
   {1996}
1997  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'while'}
   {1997}
1998  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '-'}
   {1998}
1999  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': ';'}
   {1999}
2000  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '=='}
   {2000}
2001  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '<'}
   {2001}
2002  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'break'}
   {2002}
2003  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '='}
   {2003}
2004  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '}'}
   {2004}
2005  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '+='}
   {2005}
2006  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '+'}
   {2006}
2007  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '*='}
   {2007}
2008  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '{'}
   {2008}
2009  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'continue'}
   {2009}
2010  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '>='}
   {2010}
2011  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': ')'}
   {2011}
2012  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'float'}
   {2012}
2013  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'double'}
   {2013}
2014  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'char'}
   {2014}
2015  {'left': 'relop', 'right': ['>'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'number'}
   {2015}
2016  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'return'}
   {2016}
2017  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'for'}
   {2017}
2018  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '!='}
   {2018}
2019  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': ','}
   {2019}
2020  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '#'}
   {2020}
2021  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'int'}
   {2021}
2022  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'if'}
   {2022}
2023  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '('}
   {2023}
2024  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'else'}
   {2024}
2025  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '*'}
   {2025}
2026  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '-='}
   {2026}
2027  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'identifier'}
   {2027}
2028  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '<='}
   {2028}
2029  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '>'}
   {2029}
2030  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'void'}
   {2030}
2031  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '/='}
   {2031}
2032  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '/'}
   {2032}
2033  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'while'}
   {2033}
2034  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '-'}
   {2034}
2035  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': ';'}
   {2035}
2036  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '=='}
   {2036}
2037  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '<'}
   {2037}
2038  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'break'}
   {2038}
2039  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '='}
   {2039}
2040  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '}'}
   {2040}
2041  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '+='}
   {2041}
2042  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '+'}
   {2042}
2043  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '*='}
   {2043}
2044  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '{'}
   {2044}
2045  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'continue'}
   {2045}
2046  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '>='}
   {2046}
2047  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': ')'}
   {2047}
2048  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'float'}
   {2048}
2049  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'double'}
   {2049}
2050  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'char'}
   {2050}
2051  {'left': 'relop', 'right': ['>'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'number'}
   {2051}
2052  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'return'}
   {2052}
2053  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'for'}
   {2053}
2054  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '!='}
   {2054}
2055  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': ','}
   {2055}
2056  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '#'}
   {2056}
2057  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'int'}
   {2057}
2058  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'if'}
   {2058}
2059  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '('}
   {2059}
2060  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'else'}
   {2060}
2061  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '*'}
   {2061}
2062  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '-='}
   {2062}
2063  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'identifier'}
   {2063}
2064  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '<='}
   {2064}
2065  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '>'}
   {2065}
2066  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'void'}
   {2066}
2067  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '/='}
   {2067}
2068  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '/'}
   {2068}
2069  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'while'}
   {2069}
2070  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '-'}
   {2070}
2071  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': ';'}
   {2071}
2072  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '=='}
   {2072}
2073  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '<'}
   {2073}
2074  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'break'}
   {2074}
2075  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '='}
   {2075}
2076  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '}'}
   {2076}
2077  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '+='}
   {2077}
2078  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '+'}
   {2078}
2079  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '*='}
   {2079}
2080  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '{'}
   {2080}
2081  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'continue'}
   {2081}
2082  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '>='}
   {2082}
2083  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': ')'}
   {2083}
2084  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'float'}
   {2084}
2085  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'double'}
   {2085}
2086  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'char'}
   {2086}
2087  {'left': 'relop', 'right': ['!='], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'number'}
   {2087}
2088  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'return'}
   {2088}
2089  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'for'}
   {2089}
2090  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '!='}
   {2090}
2091  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': ','}
   {2091}
2092  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '#'}
   {2092}
2093  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'int'}
   {2093}
2094  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'if'}
   {2094}
2095  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '('}
   {2095}
2096  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'else'}
   {2096}
2097  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '*'}
   {2097}
2098  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '-='}
   {2098}
2099  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'identifier'}
   {2099}
2100  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '<='}
   {2100}
2101  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '>'}
   {2101}
2102  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'void'}
   {2102}
2103  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '/='}
   {2103}
2104  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '/'}
   {2104}
2105  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'while'}
   {2105}
2106  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '-'}
   {2106}
2107  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': ';'}
   {2107}
2108  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '=='}
   {2108}
2109  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '<'}
   {2109}
2110  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'break'}
   {2110}
2111  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '='}
   {2111}
2112  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '}'}
   {2112}
2113  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '+='}
   {2113}
2114  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '+'}
   {2114}
2115  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '*='}
   {2115}
2116  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '{'}
   {2116}
2117  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'continue'}
   {2117}
2118  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '>='}
   {2118}
2119  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': ')'}
   {2119}
2120  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'float'}
   {2120}
2121  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'double'}
   {2121}
2122  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'char'}
   {2122}
2123  {'left': 'relop', 'right': ['!='], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'number'}
   {2123}
2124  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'return'}
   {2124}
2125  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'for'}
   {2125}
2126  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '!='}
   {2126}
2127  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': ','}
   {2127}
2128  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '#'}
   {2128}
2129  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'int'}
   {2129}
2130  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'if'}
   {2130}
2131  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '('}
   {2131}
2132  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'else'}
   {2132}
2133  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '*'}
   {2133}
2134  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '-='}
   {2134}
2135  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'identifier'}
   {2135}
2136  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '<='}
   {2136}
2137  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '>'}
   {2137}
2138  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'void'}
   {2138}
2139  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '/='}
   {2139}
2140  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '/'}
   {2140}
2141  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'while'}
   {2141}
2142  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '-'}
   {2142}
2143  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': ';'}
   {2143}
2144  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '=='}
   {2144}
2145  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '<'}
   {2145}
2146  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'break'}
   {2146}
2147  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '='}
   {2147}
2148  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '}'}
   {2148}
2149  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '+='}
   {2149}
2150  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '+'}
   {2150}
2151  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '*='}
   {2151}
2152  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '{'}
   {2152}
2153  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'continue'}
   {2153}
2154  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '>='}
   {2154}
2155  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': ')'}
   {2155}
2156  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'float'}
   {2156}
2157  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'double'}
   {2157}
2158  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'char'}
   {2158}
2159  {'left': 'relop', 'right': ['=='], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'number'}
   {2159}
2160  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'return'}
   {2160}
2161  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'for'}
   {2161}
2162  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '!='}
   {2162}
2163  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': ','}
   {2163}
2164  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '#'}
   {2164}
2165  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'int'}
   {2165}
2166  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'if'}
   {2166}
2167  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '('}
   {2167}
2168  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'else'}
   {2168}
2169  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '*'}
   {2169}
2170  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '-='}
   {2170}
2171  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'identifier'}
   {2171}
2172  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '<='}
   {2172}
2173  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '>'}
   {2173}
2174  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'void'}
   {2174}
2175  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '/='}
   {2175}
2176  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '/'}
   {2176}
2177  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'while'}
   {2177}
2178  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '-'}
   {2178}
2179  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': ';'}
   {2179}
2180  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '=='}
   {2180}
2181  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '<'}
   {2181}
2182  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'break'}
   {2182}
2183  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '='}
   {2183}
2184  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '}'}
   {2184}
2185  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '+='}
   {2185}
2186  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '+'}
   {2186}
2187  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '*='}
   {2187}
2188  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '{'}
   {2188}
2189  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'continue'}
   {2189}
2190  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '>='}
   {2190}
2191  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': ')'}
   {2191}
2192  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'float'}
   {2192}
2193  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'double'}
   {2193}
2194  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'char'}
   {2194}
2195  {'left': 'relop', 'right': ['=='], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'number'}
   {2195}
2196  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'return'}
   {2196}
2197  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'for'}
   {2197}
2198  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '!='}
   {2198}
2199  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': ','}
   {2199}
2200  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '#'}
   {2200}
2201  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'int'}
   {2201}
2202  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'if'}
   {2202}
2203  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '('}
   {2203}
2204  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'else'}
   {2204}
2205  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '*'}
   {2205}
2206  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '-='}
   {2206}
2207  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'identifier'}
   {2207}
2208  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '<='}
   {2208}
2209  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '>'}
   {2209}
2210  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'void'}
   {2210}
2211  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '/='}
   {2211}
2212  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '/'}
   {2212}
2213  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'while'}
   {2213}
2214  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '-'}
   {2214}
2215  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': ';'}
   {2215}
2216  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '=='}
   {2216}
2217  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '<'}
   {2217}
2218  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'break'}
   {2218}
2219  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '='}
   {2219}
2220  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '}'}
   {2220}
2221  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '+='}
   {2221}
2222  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '+'}
   {2222}
2223  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '*='}
   {2223}
2224  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '{'}
   {2224}
2225  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'continue'}
   {2225}
2226  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '>='}
   {2226}
2227  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': ')'}
   {2227}
2228  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'float'}
   {2228}
2229  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'double'}
   {2229}
2230  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'char'}
   {2230}
2231  {'left': 'relop', 'right': ['<='], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'number'}
   {2231}
2232  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'return'}
   {2232}
2233  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'for'}
   {2233}
2234  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '!='}
   {2234}
2235  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': ','}
   {2235}
2236  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '#'}
   {2236}
2237  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'int'}
   {2237}
2238  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'if'}
   {2238}
2239  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '('}
   {2239}
2240  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'else'}
   {2240}
2241  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '*'}
   {2241}
2242  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '-='}
   {2242}
2243  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'identifier'}
   {2243}
2244  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '<='}
   {2244}
2245  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '>'}
   {2245}
2246  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'void'}
   {2246}
2247  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '/='}
   {2247}
2248  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '/'}
   {2248}
2249  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'while'}
   {2249}
2250  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '-'}
   {2250}
2251  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': ';'}
   {2251}
2252  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '=='}
   {2252}
2253  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '<'}
   {2253}
2254  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'break'}
   {2254}
2255  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '='}
   {2255}
2256  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '}'}
   {2256}
2257  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '+='}
   {2257}
2258  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '+'}
   {2258}
2259  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '*='}
   {2259}
2260  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '{'}
   {2260}
2261  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'continue'}
   {2261}
2262  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '>='}
   {2262}
2263  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': ')'}
   {2263}
2264  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'float'}
   {2264}
2265  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'double'}
   {2265}
2266  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'char'}
   {2266}
2267  {'left': 'relop', 'right': ['<='], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'number'}
   {2267}
2268  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'return'}
   {2268}
2269  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'for'}
   {2269}
2270  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '!='}
   {2270}
2271  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': ','}
   {2271}
2272  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '#'}
   {2272}
2273  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'int'}
   {2273}
2274  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'if'}
   {2274}
2275  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '('}
   {2275}
2276  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'else'}
   {2276}
2277  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '*'}
   {2277}
2278  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '-='}
   {2278}
2279  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'identifier'}
   {2279}
2280  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '<='}
   {2280}
2281  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '>'}
   {2281}
2282  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'void'}
   {2282}
2283  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '/='}
   {2283}
2284  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '/'}
   {2284}
2285  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'while'}
   {2285}
2286  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '-'}
   {2286}
2287  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': ';'}
   {2287}
2288  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '=='}
   {2288}
2289  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '<'}
   {2289}
2290  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'break'}
   {2290}
2291  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '='}
   {2291}
2292  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '}'}
   {2292}
2293  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '+='}
   {2293}
2294  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '+'}
   {2294}
2295  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '*='}
   {2295}
2296  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '{'}
   {2296}
2297  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'continue'}
   {2297}
2298  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '>='}
   {2298}
2299  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': ')'}
   {2299}
2300  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'float'}
   {2300}
2301  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'double'}
   {2301}
2302  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'char'}
   {2302}
2303  {'left': 'relop', 'right': ['>='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'number'}
   {2303}
2304  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'return'}
   {2304}
2305  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'for'}
   {2305}
2306  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '!='}
   {2306}
2307  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': ','}
   {2307}
2308  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '#'}
   {2308}
2309  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'int'}
   {2309}
2310  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'if'}
   {2310}
2311  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '('}
   {2311}
2312  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'else'}
   {2312}
2313  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '*'}
   {2313}
2314  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '-='}
   {2314}
2315  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'identifier'}
   {2315}
2316  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '<='}
   {2316}
2317  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '>'}
   {2317}
2318  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'void'}
   {2318}
2319  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '/='}
   {2319}
2320  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '/'}
   {2320}
2321  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'while'}
   {2321}
2322  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '-'}
   {2322}
2323  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': ';'}
   {2323}
2324  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '=='}
   {2324}
2325  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '<'}
   {2325}
2326  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'break'}
   {2326}
2327  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '='}
   {2327}
2328  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '}'}
   {2328}
2329  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '+='}
   {2329}
2330  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '+'}
   {2330}
2331  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '*='}
   {2331}
2332  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '{'}
   {2332}
2333  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'continue'}
   {2333}
2334  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '>='}
   {2334}
2335  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': ')'}
   {2335}
2336  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'float'}
   {2336}
2337  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'double'}
   {2337}
2338  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'char'}
   {2338}
2339  {'left': 'relop', 'right': ['>='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'number'}
   {2339}
2340  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'return'}
   {2340}
2341  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'for'}
   {2341}
2342  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '!='}
   {2342}
2343  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': ','}
   {2343}
2344  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '#'}
   {2344}
2345  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'int'}
   {2345}
2346  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'if'}
   {2346}
2347  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '('}
   {2347}
2348  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'else'}
   {2348}
2349  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '*'}
   {2349}
2350  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '-='}
   {2350}
2351  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'identifier'}
   {2351}
2352  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '<='}
   {2352}
2353  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '>'}
   {2353}
2354  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'void'}
   {2354}
2355  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '/='}
   {2355}
2356  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '/'}
   {2356}
2357  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'while'}
   {2357}
2358  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '-'}
   {2358}
2359  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': ';'}
   {2359}
2360  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '=='}
   {2360}
2361  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '<'}
   {2361}
2362  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'break'}
   {2362}
2363  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '='}
   {2363}
2364  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '}'}
   {2364}
2365  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '+='}
   {2365}
2366  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '+'}
   {2366}
2367  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '*='}
   {2367}
2368  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '{'}
   {2368}
2369  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'continue'}
   {2369}
2370  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '>='}
   {2370}
2371  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': ')'}
   {2371}
2372  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'float'}
   {2372}
2373  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'double'}
   {2373}
2374  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'char'}
   {2374}
2375  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'number'}
   {2375}
2376  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'return'}
   {2376}
2377  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'for'}
   {2377}
2378  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '!='}
   {2378}
2379  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': ','}
   {2379}
2380  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '#'}
   {2380}
2381  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'int'}
   {2381}
2382  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'if'}
   {2382}
2383  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '('}
   {2383}
2384  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'else'}
   {2384}
2385  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '*'}
   {2385}
2386  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '-='}
   {2386}
2387  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'identifier'}
   {2387}
2388  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '<='}
   {2388}
2389  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '>'}
   {2389}
2390  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'void'}
   {2390}
2391  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '/='}
   {2391}
2392  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '/'}
   {2392}
2393  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'while'}
   {2393}
2394  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '-'}
   {2394}
2395  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': ';'}
   {2395}
2396  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '=='}
   {2396}
2397  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '<'}
   {2397}
2398  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'break'}
   {2398}
2399  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '='}
   {2399}
2400  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '}'}
   {2400}
2401  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '+='}
   {2401}
2402  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '+'}
   {2402}
2403  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '*='}
   {2403}
2404  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '{'}
   {2404}
2405  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'continue'}
   {2405}
2406  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '>='}
   {2406}
2407  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': ')'}
   {2407}
2408  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'float'}
   {2408}
2409  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'double'}
   {2409}
2410  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'char'}
   {2410}
2411  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'number'}
   {2411}
2412  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'return'}
   {2412}
2413  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'for'}
   {2413}
2414  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '!='}
   {2414}
2415  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': ','}
   {2415}
2416  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '#'}
   {2416}
2417  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'int'}
   {2417}
2418  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'if'}
   {2418}
2419  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '('}
   {2419}
2420  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'else'}
   {2420}
2421  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '*'}
   {2421}
2422  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '-='}
   {2422}
2423  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'identifier'}
   {2423}
2424  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '<='}
   {2424}
2425  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '>'}
   {2425}
2426  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'void'}
   {2426}
2427  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '/='}
   {2427}
2428  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '/'}
   {2428}
2429  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'while'}
   {2429}
2430  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '-'}
   {2430}
2431  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': ';'}
   {2431}
2432  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '=='}
   {2432}
2433  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '<'}
   {2433}
2434  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'break'}
   {2434}
2435  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '='}
   {2435}
2436  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '}'}
   {2436}
2437  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '+='}
   {2437}
2438  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '+'}
   {2438}
2439  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '*='}
   {2439}
2440  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '{'}
   {2440}
2441  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'continue'}
   {2441}
2442  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '>='}
   {2442}
2443  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': ')'}
   {2443}
2444  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'float'}
   {2444}
2445  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'double'}
   {2445}
2446  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'char'}
   {2446}
2447  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'number'}
   {2447}
2448  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'return'}
   {2448}
2449  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'for'}
   {2449}
2450  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '!='}
   {2450}
2451  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': ','}
   {2451}
2452  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '#'}
   {2452}
2453  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'int'}
   {2453}
2454  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'if'}
   {2454}
2455  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '('}
   {2455}
2456  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'else'}
   {2456}
2457  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '*'}
   {2457}
2458  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '-='}
   {2458}
2459  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'identifier'}
   {2459}
2460  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '<='}
   {2460}
2461  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '>'}
   {2461}
2462  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'void'}
   {2462}
2463  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '/='}
   {2463}
2464  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '/'}
   {2464}
2465  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'while'}
   {2465}
2466  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '-'}
   {2466}
2467  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': ';'}
   {2467}
2468  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '=='}
   {2468}
2469  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '<'}
   {2469}
2470  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'break'}
   {2470}
2471  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '='}
   {2471}
2472  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '}'}
   {2472}
2473  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '+='}
   {2473}
2474  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '+'}
   {2474}
2475  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '*='}
   {2475}
2476  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '{'}
   {2476}
2477  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'continue'}
   {2477}
2478  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '>='}
   {2478}
2479  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': ')'}
   {2479}
2480  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'float'}
   {2480}
2481  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'double'}
   {2481}
2482  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'char'}
   {2482}
2483  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'number'}
   {2483}
2484  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'return'}
   {2484}
2485  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'for'}
   {2485}
2486  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '!='}
   {2486}
2487  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': ','}
   {2487}
2488  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '#'}
   {2488}
2489  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'int'}
   {2489}
2490  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'if'}
   {2490}
2491  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '('}
   {2491}
2492  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'else'}
   {2492}
2493  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '*'}
   {2493}
2494  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '-='}
   {2494}
2495  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'identifier'}
   {2495}
2496  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '<='}
   {2496}
2497  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '>'}
   {2497}
2498  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'void'}
   {2498}
2499  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '/='}
   {2499}
2500  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '/'}
   {2500}
2501  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'while'}
   {2501}
2502  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '-'}
   {2502}
2503  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': ';'}
   {2503}
2504  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '=='}
   {2504}
2505  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '<'}
   {2505}
2506  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'break'}
   {2506}
2507  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '='}
   {2507}
2508  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '}'}
   {2508}
2509  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '+='}
   {2509}
2510  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '+'}
   {2510}
2511  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '*='}
   {2511}
2512  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '{'}
   {2512}
2513  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'continue'}
   {2513}
2514  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '>='}
   {2514}
2515  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': ')'}
   {2515}
2516  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'float'}
   {2516}
2517  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'double'}
   {2517}
2518  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'char'}
   {2518}
2519  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'number'}
   {2519}
2520  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'return'}
   {2520}
2521  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'for'}
   {2521}
2522  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '!='}
   {2522}
2523  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': ','}
   {2523}
2524  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '#'}
   {2524}
2525  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'int'}
   {2525}
2526  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'if'}
   {2526}
2527  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '('}
   {2527}
2528  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'else'}
   {2528}
2529  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '*'}
   {2529}
2530  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '-='}
   {2530}
2531  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'identifier'}
   {2531}
2532  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '<='}
   {2532}
2533  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '>'}
   {2533}
2534  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'void'}
   {2534}
2535  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '/='}
   {2535}
2536  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '/'}
   {2536}
2537  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'while'}
   {2537}
2538  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '-'}
   {2538}
2539  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': ';'}
   {2539}
2540  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '=='}
   {2540}
2541  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '<'}
   {2541}
2542  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'break'}
   {2542}
2543  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '='}
   {2543}
2544  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '}'}
   {2544}
2545  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '+='}
   {2545}
2546  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '+'}
   {2546}
2547  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '*='}
   {2547}
2548  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '{'}
   {2548}
2549  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'continue'}
   {2549}
2550  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '>='}
   {2550}
2551  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': ')'}
   {2551}
2552  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'float'}
   {2552}
2553  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'double'}
   {2553}
2554  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'char'}
   {2554}
2555  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'number'}
   {2555}
2556  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'return'}
   {2556}
2557  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'for'}
   {2557}
2558  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '!='}
   {2558}
2559  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': ','}
   {2559}
2560  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '#'}
   {2560}
2561  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'int'}
   {2561}
2562  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'if'}
   {2562}
2563  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '('}
   {2563}
2564  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'else'}
   {2564}
2565  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '*'}
   {2565}
2566  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '-='}
   {2566}
2567  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'identifier'}
   {2567}
2568  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '<='}
   {2568}
2569  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '>'}
   {2569}
2570  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'void'}
   {2570}
2571  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '/='}
   {2571}
2572  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '/'}
   {2572}
2573  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'while'}
   {2573}
2574  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '-'}
   {2574}
2575  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': ';'}
   {2575}
2576  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '=='}
   {2576}
2577  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '<'}
   {2577}
2578  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'break'}
   {2578}
2579  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '='}
   {2579}
2580  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '}'}
   {2580}
2581  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '+='}
   {2581}
2582  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '+'}
   {2582}
2583  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '*='}
   {2583}
2584  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '{'}
   {2584}
2585  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'continue'}
   {2585}
2586  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '>='}
   {2586}
2587  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': ')'}
   {2587}
2588  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'float'}
   {2588}
2589  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'double'}
   {2589}
2590  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'char'}
   {2590}
2591  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'number'}
   {2591}
2592  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'return'}
   {2592}
2593  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'for'}
   {2593}
2594  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '!='}
   {2594}
2595  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': ','}
   {2595}
2596  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '#'}
   {2596}
2597  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'int'}
   {2597}
2598  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'if'}
   {2598}
2599  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '('}
   {2599}
2600  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'else'}
   {2600}
2601  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '*'}
   {2601}
2602  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '-='}
   {2602}
2603  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'identifier'}
   {2603}
2604  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '<='}
   {2604}
2605  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '>'}
   {2605}
2606  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'void'}
   {2606}
2607  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '/='}
   {2607}
2608  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '/'}
   {2608}
2609  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'while'}
   {2609}
2610  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '-'}
   {2610}
2611  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': ';'}
   {2611}
2612  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '=='}
   {2612}
2613  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '<'}
   {2613}
2614  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'break'}
   {2614}
2615  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '='}
   {2615}
2616  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '}'}
   {2616}
2617  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '+='}
   {2617}
2618  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '+'}
   {2618}
2619  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '*='}
   {2619}
2620  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '{'}
   {2620}
2621  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'continue'}
   {2621}
2622  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '>='}
   {2622}
2623  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': ')'}
   {2623}
2624  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'float'}
   {2624}
2625  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'double'}
   {2625}
2626  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'char'}
   {2626}
2627  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'number'}
   {2627}
2628  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'return'}
   {2628}
2629  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'for'}
   {2629}
2630  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '!='}
   {2630}
2631  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': ','}
   {2631}
2632  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '#'}
   {2632}
2633  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'int'}
   {2633}
2634  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'if'}
   {2634}
2635  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '('}
   {2635}
2636  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'else'}
   {2636}
2637  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '*'}
   {2637}
2638  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '-='}
   {2638}
2639  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'identifier'}
   {2639}
2640  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '<='}
   {2640}
2641  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '>'}
   {2641}
2642  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'void'}
   {2642}
2643  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '/='}
   {2643}
2644  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '/'}
   {2644}
2645  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'while'}
   {2645}
2646  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '-'}
   {2646}
2647  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': ';'}
   {2647}
2648  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '=='}
   {2648}
2649  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '<'}
   {2649}
2650  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'break'}
   {2650}
2651  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '='}
   {2651}
2652  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '}'}
   {2652}
2653  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '+='}
   {2653}
2654  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '+'}
   {2654}
2655  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '*='}
   {2655}
2656  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '{'}
   {2656}
2657  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'continue'}
   {2657}
2658  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '>='}
   {2658}
2659  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': ')'}
   {2659}
2660  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'float'}
   {2660}
2661  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'double'}
   {2661}
2662  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'char'}
   {2662}
2663  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'number'}
   {2663}
2664  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'return'}
   {2664}
2665  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'for'}
   {2665}
2666  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '!='}
   {2666}
2667  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': ','}
   {2667}
2668  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '#'}
   {2668}
2669  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'int'}
   {2669}
2670  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'if'}
   {2670}
2671  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '('}
   {2671}
2672  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'else'}
   {2672}
2673  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '*'}
   {2673}
2674  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '-='}
   {2674}
2675  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'identifier'}
   {2675}
2676  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '<='}
   {2676}
2677  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '>'}
   {2677}
2678  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'void'}
   {2678}
2679  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '/='}
   {2679}
2680  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '/'}
   {2680}
2681  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'while'}
   {2681}
2682  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '-'}
   {2682}
2683  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': ';'}
   {2683}
2684  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '=='}
   {2684}
2685  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '<'}
   {2685}
2686  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'break'}
   {2686}
2687  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '='}
   {2687}
2688  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '}'}
   {2688}
2689  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '+='}
   {2689}
2690  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '+'}
   {2690}
2691  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '*='}
   {2691}
2692  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '{'}
   {2692}
2693  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'continue'}
   {2693}
2694  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '>='}
   {2694}
2695  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': ')'}
   {2695}
2696  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'float'}
   {2696}
2697  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'double'}
   {2697}
2698  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'char'}
   {2698}
2699  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'number'}
   {2699}
2700  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'return'}
   {2700}
2701  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'for'}
   {2701}
2702  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '!='}
   {2702}
2703  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': ','}
   {2703}
2704  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '#'}
   {2704}
2705  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'int'}
   {2705}
2706  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'if'}
   {2706}
2707  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '('}
   {2707}
2708  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'else'}
   {2708}
2709  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '*'}
   {2709}
2710  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '-='}
   {2710}
2711  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'identifier'}
   {2711}
2712  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '<='}
   {2712}
2713  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '>'}
   {2713}
2714  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'void'}
   {2714}
2715  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '/='}
   {2715}
2716  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '/'}
   {2716}
2717  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'while'}
   {2717}
2718  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '-'}
   {2718}
2719  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': ';'}
   {2719}
2720  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '=='}
   {2720}
2721  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '<'}
   {2721}
2722  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'break'}
   {2722}
2723  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '='}
   {2723}
2724  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '}'}
   {2724}
2725  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '+='}
   {2725}
2726  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '+'}
   {2726}
2727  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '*='}
   {2727}
2728  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '{'}
   {2728}
2729  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'continue'}
   {2729}
2730  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '>='}
   {2730}
2731  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': ')'}
   {2731}
2732  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'float'}
   {2732}
2733  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'double'}
   {2733}
2734  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'char'}
   {2734}
2735  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'number'}
   {2735}
2736  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'return'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2736, 2351, 2447, 2419, 2423, 2491, 2591}
2737  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'for'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2737, 2447, 2419, 2423, 2491, 2591}
2738  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '!='}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2738, 2419, 2423, 2491, 2591}
2739  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': ','}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2739, 2419, 2423, 2491, 2591}
2740  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '#'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2740, 2423, 2491, 2591}
2741  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'int'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2741, 2423, 2491, 2591}
2742  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'if'}
   {2519, 2563, 2567, 2663, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2742, 2423, 2491, 2591}
2743  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '('}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2743, 2491, 2423, 2591}
2744  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'else'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2744, 2491, 2591}
2745  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '*'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2745, 2491, 2591}
2746  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '-='}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2746, 2491, 2591}
2747  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'identifier'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2491, 2423, 2747, 2591}
2748  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '<='}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2748, 2591}
2749  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '>'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2749, 2591}
2750  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'void'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2750, 2591}
2751  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '/='}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2591, 2639, 2351, 2447, 2419, 2423, 2491, 2751}
2752  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '/'}
   {2752, 2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2753  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'while'}
   {2753, 2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2754  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '-'}
   {2754, 2563, 2519, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2755  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': ';'}
   {2519, 2563, 2755, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2756  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '=='}
   {2519, 2563, 2756, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2757  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '<'}
   {2519, 2563, 2757, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2758  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'break'}
   {2519, 2563, 2758, 2567, 2663, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2759  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '='}
   {2519, 2563, 2663, 2567, 2759, 2375, 2347, 2635, 2495, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2760  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '}'}
   {2519, 2563, 2663, 2567, 2760, 2375, 2347, 2635, 2495, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2761  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '+='}
   {2519, 2563, 2663, 2567, 2761, 2375, 2347, 2635, 2495, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2762  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '+'}
   {2519, 2563, 2663, 2567, 2375, 2762, 2347, 2635, 2495, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2763  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '*='}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2763, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2764  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '{'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2764, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2765  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'continue'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2765, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2766  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': '>='}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2766, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2767  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': ')'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2767, 2639, 2351, 2447, 2419, 2423, 2491, 2591}
2768  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'float'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2768, 2351, 2447, 2419, 2423, 2491, 2591}
2769  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'double'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2769, 2447, 2419, 2423, 2491, 2591}
2770  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'char'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2770, 2419, 2423, 2491, 2591}
2771  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 34, 'isTer': False, 'accept': 'number'}
   {2519, 2563, 2663, 2567, 2375, 2495, 2347, 2635, 2639, 2351, 2447, 2771, 2419, 2423, 2491, 2591}
2772  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'return'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3744, 3240, 1332, 1334, 1341, 1344, 1345, 1348, 1476, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 2772, 1492, 1494, 1496, 1497, 1502, 3168, 1506, 3312, 1404, 1406}
2773  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'for'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3745, 3241, 1333, 1334, 1341, 1344, 1345, 1348, 1477, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 2773, 1494, 1496, 1497, 1502, 3169, 1506, 3313, 1405, 1406}
2774  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '!='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3746, 3242, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 2774, 1494, 1496, 1497, 1502, 3170, 1506, 3314, 1406}
2775  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': ','}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1479, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 2775, 1496, 1497, 1502, 1506, 3171, 3315, 1406, 1407}
2776  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '#'}
   {1408, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3748, 3244, 1334, 1336, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1480, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 2776, 1496, 1497, 1502, 1506, 3172, 3316, 1406}
2777  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'int'}
   {1409, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3749, 3245, 1334, 1337, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1481, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 2777, 1497, 1502, 1506, 3173, 3317, 1406}
2778  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'if'}
   {1410, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3750, 3246, 1334, 1338, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1482, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 2778, 1502, 1506, 3174, 3318, 1406}
2779  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '('}
   {1411, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3751, 3247, 1334, 1339, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1483, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 2779, 1502, 1506, 3175, 3319, 1406}
2780  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'else'}
   {1412, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3752, 3248, 1334, 1340, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1484, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 2780, 1502, 1506, 3176, 3320, 1406}
2781  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '*'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3753, 3249, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 2781, 1502, 1506, 3177, 3321, 1406}
2782  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '-='}
   {1413, 1414, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3754, 3250, 1334, 1341, 1342, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1486, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 2782, 1502, 1506, 3178, 3322, 1406}
2783  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'identifier'}
   {1413, 1415, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3755, 3251, 1334, 1341, 1343, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1487, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 2783, 1506, 3179, 3323, 1406}
2784  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '<='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3756, 3252, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 2784, 1506, 3180, 3324, 1406}
2785  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '>'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3757, 3253, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 2785, 1506, 3181, 3325, 1406}
2786  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'void'}
   {1413, 1416, 1417, 1418, 1420, 1422, 1424, 1425, 1430, 1434, 3758, 3254, 1334, 1341, 1344, 1345, 1346, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1490, 1492, 1494, 1496, 1497, 3326, 1502, 2786, 1506, 3182, 1406}
2787  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '/='}
   {1413, 1416, 1417, 1419, 1420, 1422, 1424, 1425, 1430, 1434, 3759, 1334, 3255, 1341, 1344, 1345, 1347, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1491, 1492, 1494, 1496, 1497, 1502, 1506, 2787, 3183, 1406, 3327}
2788  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '/'}
   {3328, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3760, 1334, 3256, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 2788, 3184, 1406}
2789  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'while'}
   {3329, 1413, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 3761, 1334, 3257, 1341, 1344, 1345, 1348, 1349, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 2789, 3185, 1406}
2790  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '-'}
   {3330, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3762, 1334, 3258, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 2790, 3186, 1406}
2791  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': ';'}
   {3331, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 1334, 3259, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1495, 1496, 1497, 1502, 1506, 2791, 3187, 1406}
2792  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '=='}
   {3332, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3764, 1334, 3260, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 2792, 3188, 1406}
2793  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '<'}
   {3333, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3765, 1334, 1341, 3261, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 2793, 3189, 1406}
2794  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'break'}
   {1413, 3334, 1416, 1417, 1420, 1422, 1424, 1425, 1426, 1430, 1434, 3766, 1334, 1341, 3262, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1354, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1498, 1502, 1506, 2794, 3190, 1406}
2795  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '='}
   {1413, 3335, 1416, 1417, 1420, 1422, 1424, 1425, 1427, 1430, 1434, 1334, 3767, 1341, 3263, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1355, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1499, 1502, 1506, 2795, 3191, 1406}
2796  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '}'}
   {1413, 3336, 1416, 1417, 1420, 1422, 1424, 1425, 1428, 1430, 1434, 1334, 3768, 1341, 3264, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1356, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1500, 1502, 1506, 2796, 3192, 1406}
2797  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '+='}
   {1413, 1416, 3337, 1417, 1420, 1422, 1424, 1425, 1429, 1430, 1434, 1334, 3769, 1341, 1344, 3265, 1345, 1348, 1350, 1478, 1352, 1353, 1357, 1358, 1485, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1501, 1502, 1506, 2797, 3193, 1406}
2798  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '+'}
   {1413, 1416, 1417, 3338, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 3770, 1341, 1344, 1345, 3266, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 2798, 3194, 1406}
2799  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '*='}
   {1413, 1416, 1417, 3339, 1420, 1422, 1424, 1425, 1430, 1431, 1434, 1334, 3771, 1341, 1344, 1345, 3267, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1359, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1503, 1506, 2799, 3195, 1406}
2800  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '{'}
   {1413, 1416, 1417, 3340, 1420, 1422, 1424, 1425, 1430, 1432, 1434, 1334, 3772, 1341, 1344, 1345, 3268, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1360, 1488, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1504, 1506, 2800, 3196, 1406}
2801  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'continue'}
   {1413, 1416, 1417, 1420, 3341, 1422, 1424, 1425, 1430, 1433, 1434, 1334, 3773, 1341, 1344, 1345, 1348, 3269, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1361, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1505, 1506, 2801, 3197, 1406}
2802  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': '>='}
   {1413, 1416, 1417, 1420, 3342, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 3774, 1344, 1345, 1348, 3270, 1350, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 3198, 1502, 1506, 2802, 1406}
2803  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': ')'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 3775, 1344, 1345, 1348, 1350, 3271, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 2803, 1406, 3199}
2804  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'float'}
   {3200, 1413, 1416, 1417, 1420, 1422, 3344, 1424, 1425, 1430, 1434, 1436, 1334, 1341, 1344, 1345, 3776, 1348, 1350, 1478, 1352, 1353, 3272, 1485, 1358, 1488, 1489, 1362, 1364, 1492, 1494, 1496, 1497, 1502, 1506, 1508, 2804, 1406}
2805  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'double'}
   {3201, 1413, 1416, 1417, 1420, 1422, 1424, 3345, 1425, 1430, 1434, 1437, 1334, 1341, 1344, 1345, 3777, 1348, 1350, 1478, 1352, 1353, 3273, 1485, 1358, 1488, 1489, 1362, 1492, 1365, 1494, 1496, 1497, 1502, 1506, 1509, 2805, 1406}
2806  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'char'}
   {3202, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3346, 1430, 1434, 1438, 1334, 1341, 1344, 1345, 3778, 1348, 1350, 1478, 1352, 1353, 3274, 1485, 1358, 1488, 1489, 1362, 1492, 1366, 1494, 1496, 1497, 1502, 1506, 1510, 2806, 1406}
2807  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 34, 'isTer': False, 'accept': 'number'}
   {3203, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3347, 1430, 1434, 1439, 1334, 1341, 1344, 1345, 3779, 1348, 1350, 1478, 1352, 1353, 3275, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1367, 1496, 1497, 1502, 1506, 1511, 2807, 1406}
2808  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'return'}
   {2808}
2809  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'for'}
   {2809}
2810  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '!='}
   {2810}
2811  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': ','}
   {2811}
2812  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '#'}
   {2812}
2813  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'int'}
   {2813}
2814  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'if'}
   {2814}
2815  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '('}
   {2815}
2816  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'else'}
   {2816}
2817  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '*'}
   {2817}
2818  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '-='}
   {2818}
2819  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'identifier'}
   {2819}
2820  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '<='}
   {2820}
2821  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '>'}
   {2821}
2822  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'void'}
   {2822}
2823  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '/='}
   {2823}
2824  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '/'}
   {2824}
2825  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'while'}
   {2825}
2826  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '-'}
   {2826}
2827  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': ';'}
   {2827}
2828  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '=='}
   {2828}
2829  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '<'}
   {2829}
2830  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'break'}
   {2830}
2831  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '='}
   {2831}
2832  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '}'}
   {2832}
2833  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '+='}
   {2833}
2834  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '+'}
   {2834}
2835  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '*='}
   {2835}
2836  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '{'}
   {2836}
2837  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'continue'}
   {2837}
2838  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': '>='}
   {2838}
2839  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': ')'}
   {2839}
2840  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'float'}
   {2840}
2841  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'double'}
   {2841}
2842  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'char'}
   {2842}
2843  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 34, 'isTer': True, 'accept': 'number'}
   {2843}
2844  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'return'}
   {2844}
2845  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'for'}
   {2845}
2846  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '!='}
   {2846}
2847  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': ','}
   {2847}
2848  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '#'}
   {2848}
2849  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'int'}
   {2849}
2850  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'if'}
   {2850}
2851  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '('}
   {2851}
2852  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'else'}
   {2852}
2853  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '*'}
   {2853}
2854  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '-='}
   {2854}
2855  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'identifier'}
   {2855}
2856  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '<='}
   {2856}
2857  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '>'}
   {2857}
2858  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'void'}
   {2858}
2859  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '/='}
   {2859}
2860  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '/'}
   {2860}
2861  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'while'}
   {2861}
2862  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '-'}
   {2862}
2863  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': ';'}
   {2863}
2864  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '=='}
   {2864}
2865  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '<'}
   {2865}
2866  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'break'}
   {2866}
2867  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '='}
   {2867}
2868  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '}'}
   {2868}
2869  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '+='}
   {2869}
2870  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '+'}
   {2870}
2871  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '*='}
   {2871}
2872  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '{'}
   {2872}
2873  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'continue'}
   {2873}
2874  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '>='}
   {2874}
2875  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': ')'}
   {2875}
2876  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'float'}
   {2876}
2877  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'double'}
   {2877}
2878  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'char'}
   {2878}
2879  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'number'}
   {2879}
2880  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'return'}
   {2880, 2700, 2703}
2881  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'for'}
   {2881, 2701, 2703}
2882  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '!='}
   {2882, 2702, 2703}
2883  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': ','}
   {2883, 2703}
2884  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '#'}
   {2704, 2884, 2703}
2885  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'int'}
   {2705, 2885, 2703}
2886  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'if'}
   {2706, 2886, 2703}
2887  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '('}
   {2703, 2707, 2887}
2888  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'else'}
   {2888, 2708, 2703}
2889  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '*'}
   {2889, 2709, 2703}
2890  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '-='}
   {2890, 2710, 2703}
2891  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'identifier'}
   {2711, 2891, 2703}
2892  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '<='}
   {2712, 2892, 2703}
2893  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '>'}
   {2713, 2893, 2703}
2894  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'void'}
   {2714, 2894, 2703}
2895  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '/='}
   {2703, 2715, 2895}
2896  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '/'}
   {2896, 2716, 2703}
2897  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'while'}
   {2897, 2717, 2703}
2898  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '-'}
   {2898, 2718, 2703}
2899  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': ';'}
   {2719, 2899, 2703}
2900  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '=='}
   {2720, 2900, 2703}
2901  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '<'}
   {2721, 2901, 2703}
2902  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'break'}
   {2722, 2902, 2703}
2903  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '='}
   {2703, 2723, 2903}
2904  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '}'}
   {2904, 2724, 2703}
2905  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '+='}
   {2905, 2725, 2703}
2906  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '+'}
   {2906, 2726, 2703}
2907  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '*='}
   {2727, 2907, 2703}
2908  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '{'}
   {2728, 2908, 2703}
2909  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'continue'}
   {2729, 2909, 2703}
2910  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': '>='}
   {2730, 2910, 2703}
2911  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': ')'}
   {2703, 2731, 2911}
2912  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'float'}
   {2912, 2732, 2703}
2913  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'double'}
   {2913, 2733, 2703}
2914  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'char'}
   {2914, 2734, 2703}
2915  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 35, 'isTer': False, 'accept': 'number'}
   {2735, 2915, 2703}
2916  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'return'}
   {2988, 2916, 2844}
2917  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'for'}
   {2845, 2917, 2989}
2918  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '!='}
   {2990, 2918, 2846}
2919  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': ','}
   {2991, 2847, 2919}
2920  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '#'}
   {2920, 2848, 2992}
2921  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'int'}
   {2921, 2993, 2849}
2922  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'if'}
   {2994, 2922, 2850}
2923  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '('}
   {2851, 2923, 2995}
2924  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'else'}
   {2996, 2924, 2852}
2925  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '*'}
   {2853, 2925, 2997}
2926  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '-='}
   {2854, 2998, 2926}
2927  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'identifier'}
   {2999, 2855, 2927}
2928  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '<='}
   {2928, 2856, 3000}
2929  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '>'}
   {2929, 3001, 2857}
2930  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'void'}
   {3002, 2930, 2858}
2931  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '/='}
   {2859, 2931, 3003}
2932  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '/'}
   {3004, 2932, 2860}
2933  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'while'}
   {2861, 2933, 3005}
2934  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '-'}
   {2862, 3006, 2934}
2935  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': ';'}
   {3007, 2863, 2935}
2936  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '=='}
   {2936, 2864, 3008}
2937  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '<'}
   {2937, 3009, 2865}
2938  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'break'}
   {3010, 2938, 2866}
2939  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '='}
   {2867, 2939, 3011}
2940  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '}'}
   {3012, 2940, 2868}
2941  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '+='}
   {3013, 2869, 2941}
2942  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '+'}
   {2870, 3014, 2942}
2943  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '*='}
   {3015, 2871, 2943}
2944  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '{'}
   {2944, 2872, 3016}
2945  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'continue'}
   {2945, 3017, 2873}
2946  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': '>='}
   {3018, 2946, 2874}
2947  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': ')'}
   {2875, 2947, 3019}
2948  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'float'}
   {3020, 2948, 2876}
2949  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'double'}
   {3021, 2877, 2949}
2950  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'char'}
   {2878, 3022, 2950}
2951  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 35, 'isTer': False, 'accept': 'number'}
   {3023, 2879, 2951}
2952  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'return'}
   {2952}
2953  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'for'}
   {2953}
2954  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '!='}
   {2954}
2955  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': ','}
   {2955}
2956  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '#'}
   {2956}
2957  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'int'}
   {2957}
2958  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'if'}
   {2958}
2959  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '('}
   {2959}
2960  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'else'}
   {2960}
2961  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '*'}
   {2961}
2962  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '-='}
   {2962}
2963  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'identifier'}
   {2963}
2964  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '<='}
   {2964}
2965  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '>'}
   {2965}
2966  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'void'}
   {2966}
2967  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '/='}
   {2967}
2968  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '/'}
   {2968}
2969  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'while'}
   {2969}
2970  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '-'}
   {2970}
2971  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': ';'}
   {2971}
2972  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '=='}
   {2972}
2973  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '<'}
   {2973}
2974  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'break'}
   {2974}
2975  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '='}
   {2975}
2976  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '}'}
   {2976}
2977  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '+='}
   {2977}
2978  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '+'}
   {2978}
2979  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '*='}
   {2979}
2980  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '{'}
   {2980}
2981  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'continue'}
   {2981}
2982  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': '>='}
   {2982}
2983  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': ')'}
   {2983}
2984  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'float'}
   {2984}
2985  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'double'}
   {2985}
2986  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'char'}
   {2986}
2987  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 35, 'isTer': True, 'accept': 'number'}
   {2987}
2988  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'return'}
   {2988}
2989  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'for'}
   {2989}
2990  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '!='}
   {2990}
2991  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': ','}
   {2991}
2992  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '#'}
   {2992}
2993  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'int'}
   {2993}
2994  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'if'}
   {2994}
2995  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '('}
   {2995}
2996  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'else'}
   {2996}
2997  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '*'}
   {2997}
2998  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '-='}
   {2998}
2999  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'identifier'}
   {2999}
3000  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '<='}
   {3000}
3001  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '>'}
   {3001}
3002  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'void'}
   {3002}
3003  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '/='}
   {3003}
3004  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '/'}
   {3004}
3005  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'while'}
   {3005}
3006  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '-'}
   {3006}
3007  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': ';'}
   {3007}
3008  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '=='}
   {3008}
3009  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '<'}
   {3009}
3010  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'break'}
   {3010}
3011  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '='}
   {3011}
3012  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '}'}
   {3012}
3013  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '+='}
   {3013}
3014  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '+'}
   {3014}
3015  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '*='}
   {3015}
3016  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '{'}
   {3016}
3017  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'continue'}
   {3017}
3018  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': '>='}
   {3018}
3019  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': ')'}
   {3019}
3020  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'float'}
   {3020}
3021  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'double'}
   {3021}
3022  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'char'}
   {3022}
3023  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 36, 'isTer': True, 'accept': 'number'}
   {3023}
3024  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'return'}
   {3024, 2700, 2703}
3025  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'for'}
   {3025, 2701, 2703}
3026  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '!='}
   {3026, 2702, 2703}
3027  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': ','}
   {3027, 2703}
3028  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '#'}
   {2704, 3028, 2703}
3029  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'int'}
   {2705, 3029, 2703}
3030  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'if'}
   {2706, 3030, 2703}
3031  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '('}
   {2703, 2707, 3031}
3032  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'else'}
   {3032, 2708, 2703}
3033  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '*'}
   {3033, 2709, 2703}
3034  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '-='}
   {3034, 2710, 2703}
3035  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'identifier'}
   {2711, 3035, 2703}
3036  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '<='}
   {2712, 3036, 2703}
3037  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '>'}
   {2713, 3037, 2703}
3038  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'void'}
   {2714, 3038, 2703}
3039  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '/='}
   {2703, 2715, 3039}
3040  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '/'}
   {3040, 2716, 2703}
3041  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'while'}
   {3041, 2717, 2703}
3042  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '-'}
   {3042, 2718, 2703}
3043  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': ';'}
   {2719, 3043, 2703}
3044  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '=='}
   {2720, 3044, 2703}
3045  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '<'}
   {2721, 3045, 2703}
3046  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'break'}
   {2722, 3046, 2703}
3047  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '='}
   {2703, 2723, 3047}
3048  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '}'}
   {3048, 2724, 2703}
3049  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '+='}
   {3049, 2725, 2703}
3050  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '+'}
   {3050, 2726, 2703}
3051  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '*='}
   {2727, 3051, 2703}
3052  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '{'}
   {2728, 3052, 2703}
3053  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'continue'}
   {2729, 3053, 2703}
3054  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '>='}
   {2730, 3054, 2703}
3055  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': ')'}
   {2703, 2731, 3055}
3056  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'float'}
   {3056, 2732, 2703}
3057  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'double'}
   {3057, 2733, 2703}
3058  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'char'}
   {3058, 2734, 2703}
3059  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'number'}
   {2735, 3059, 2703}
3060  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'return'}
   {2988, 3060, 2844}
3061  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'for'}
   {2845, 3061, 2989}
3062  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '!='}
   {2990, 3062, 2846}
3063  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': ','}
   {2991, 2847, 3063}
3064  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '#'}
   {3064, 2848, 2992}
3065  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'int'}
   {3065, 2993, 2849}
3066  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'if'}
   {2994, 3066, 2850}
3067  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '('}
   {2851, 3067, 2995}
3068  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'else'}
   {2996, 3068, 2852}
3069  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '*'}
   {2853, 3069, 2997}
3070  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '-='}
   {2854, 2998, 3070}
3071  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'identifier'}
   {2999, 2855, 3071}
3072  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '<='}
   {3072, 2856, 3000}
3073  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '>'}
   {3073, 3001, 2857}
3074  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'void'}
   {3002, 3074, 2858}
3075  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '/='}
   {2859, 3075, 3003}
3076  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '/'}
   {3004, 3076, 2860}
3077  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'while'}
   {2861, 3077, 3005}
3078  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '-'}
   {2862, 3006, 3078}
3079  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': ';'}
   {3007, 2863, 3079}
3080  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '=='}
   {3080, 2864, 3008}
3081  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '<'}
   {3081, 3009, 2865}
3082  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'break'}
   {3010, 3082, 2866}
3083  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '='}
   {2867, 3083, 3011}
3084  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '}'}
   {3012, 3084, 2868}
3085  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '+='}
   {3013, 2869, 3085}
3086  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '+'}
   {2870, 3014, 3086}
3087  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '*='}
   {3015, 2871, 3087}
3088  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '{'}
   {3088, 2872, 3016}
3089  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'continue'}
   {3089, 3017, 2873}
3090  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': '>='}
   {3018, 3090, 2874}
3091  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': ')'}
   {2875, 3091, 3019}
3092  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'float'}
   {3020, 3092, 2876}
3093  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'double'}
   {3021, 2877, 3093}
3094  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'char'}
   {2878, 3022, 3094}
3095  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 37, 'isTer': False, 'accept': 'number'}
   {3023, 2879, 3095}
3096  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'return'}
   {3096}
3097  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'for'}
   {3097}
3098  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '!='}
   {3098}
3099  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': ','}
   {3099}
3100  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '#'}
   {3100}
3101  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'int'}
   {3101}
3102  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'if'}
   {3102}
3103  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '('}
   {3103}
3104  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'else'}
   {3104}
3105  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '*'}
   {3105}
3106  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '-='}
   {3106}
3107  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'identifier'}
   {3107}
3108  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '<='}
   {3108}
3109  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '>'}
   {3109}
3110  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'void'}
   {3110}
3111  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '/='}
   {3111}
3112  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '/'}
   {3112}
3113  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'while'}
   {3113}
3114  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '-'}
   {3114}
3115  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': ';'}
   {3115}
3116  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '=='}
   {3116}
3117  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '<'}
   {3117}
3118  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'break'}
   {3118}
3119  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '='}
   {3119}
3120  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '}'}
   {3120}
3121  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '+='}
   {3121}
3122  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '+'}
   {3122}
3123  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '*='}
   {3123}
3124  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '{'}
   {3124}
3125  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'continue'}
   {3125}
3126  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': '>='}
   {3126}
3127  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': ')'}
   {3127}
3128  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'float'}
   {3128}
3129  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'double'}
   {3129}
3130  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'char'}
   {3130}
3131  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 37, 'isTer': True, 'accept': 'number'}
   {3131}
3132  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'return'}
   {3132}
3133  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'for'}
   {3133}
3134  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '!='}
   {3134}
3135  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': ','}
   {3135}
3136  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '#'}
   {3136}
3137  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'int'}
   {3137}
3138  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'if'}
   {3138}
3139  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '('}
   {3139}
3140  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'else'}
   {3140}
3141  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '*'}
   {3141}
3142  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '-='}
   {3142}
3143  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'identifier'}
   {3143}
3144  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '<='}
   {3144}
3145  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '>'}
   {3145}
3146  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'void'}
   {3146}
3147  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '/='}
   {3147}
3148  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '/'}
   {3148}
3149  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'while'}
   {3149}
3150  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '-'}
   {3150}
3151  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': ';'}
   {3151}
3152  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '=='}
   {3152}
3153  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '<'}
   {3153}
3154  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'break'}
   {3154}
3155  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '='}
   {3155}
3156  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '}'}
   {3156}
3157  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '+='}
   {3157}
3158  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '+'}
   {3158}
3159  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '*='}
   {3159}
3160  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '{'}
   {3160}
3161  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'continue'}
   {3161}
3162  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': '>='}
   {3162}
3163  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': ')'}
   {3163}
3164  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'float'}
   {3164}
3165  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'double'}
   {3165}
3166  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'char'}
   {3166}
3167  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 38, 'isTer': True, 'accept': 'number'}
   {3167}
3168  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'return'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1332, 1334, 1341, 1344, 1345, 1348, 1476, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 3168, 1506, 3312, 1404, 1406}
3169  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'for'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1333, 1334, 1341, 1344, 1345, 1348, 1477, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 3169, 1506, 3313, 1405, 1406}
3170  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '!='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3170, 3314, 1406}
3171  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': ','}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1479, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3171, 3315, 1406, 1407}
3172  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '#'}
   {1408, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1336, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1480, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3172, 3316, 1406}
3173  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'int'}
   {1409, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1337, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1481, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3173, 3317, 1406}
3174  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'if'}
   {1410, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1338, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1482, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3174, 3318, 1406}
3175  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '('}
   {1411, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1339, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1483, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3175, 3319, 1406}
3176  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'else'}
   {1412, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1340, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1484, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3176, 3320, 1406}
3177  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '*'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3177, 3321, 1406}
3178  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '-='}
   {1413, 1414, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1342, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1486, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3178, 3322, 1406}
3179  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'identifier'}
   {1413, 1415, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1343, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1487, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3179, 3323, 1406}
3180  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '<='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3180, 3324, 1406}
3181  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '>'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3181, 3325, 1406}
3182  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'void'}
   {1413, 1416, 1417, 1418, 1420, 1422, 1424, 1425, 1430, 1434, 1406, 1334, 1341, 1344, 1345, 1346, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1490, 1492, 1494, 1496, 1497, 1502, 1506, 3182, 3326}
3183  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '/='}
   {1413, 1416, 1417, 1419, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1347, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1491, 1492, 1494, 1496, 1497, 1502, 1506, 3183, 1406, 3327}
3184  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '/'}
   {3328, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3184, 1406}
3185  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'while'}
   {3329, 1413, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1349, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 3185, 1406}
3186  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '-'}
   {3330, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3186, 1406}
3187  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': ';'}
   {3331, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1495, 1496, 1497, 1502, 1506, 3187, 1406}
3188  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '=='}
   {3332, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3188, 1406}
3189  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '<'}
   {3333, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3189, 1406}
3190  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'break'}
   {1413, 3334, 1416, 1417, 1420, 1422, 1424, 1425, 1426, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1354, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1498, 1502, 1506, 3190, 1406}
3191  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '='}
   {1413, 3335, 1416, 1417, 1420, 1422, 1424, 1425, 1427, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1355, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1499, 1502, 1506, 3191, 1406}
3192  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '}'}
   {1413, 3336, 1416, 1417, 1420, 1422, 1424, 1425, 1428, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1356, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1500, 1502, 1506, 3192, 1406}
3193  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '+='}
   {1413, 1416, 3337, 1417, 1420, 1422, 1424, 1425, 1429, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1357, 1358, 1485, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1501, 1502, 1506, 3193, 1406}
3194  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '+'}
   {1413, 1416, 1417, 3338, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3194, 1406}
3195  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '*='}
   {1413, 1416, 1417, 3339, 1420, 1422, 1424, 1425, 1430, 1431, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1359, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1503, 1506, 3195, 1406}
3196  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '{'}
   {1413, 1416, 1417, 3340, 1420, 1422, 1424, 1425, 1430, 1432, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1360, 1488, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1504, 1506, 3196, 1406}
3197  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'continue'}
   {1413, 1416, 1417, 1420, 3341, 1422, 1424, 1425, 1430, 1433, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1361, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1505, 1506, 3197, 1406}
3198  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '>='}
   {1413, 1416, 1417, 1420, 3342, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 3198, 1502, 1506, 1406}
3199  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': ')'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406, 3199}
3200  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'float'}
   {3200, 1413, 1416, 1417, 1420, 1422, 3344, 1424, 1425, 1430, 1434, 1436, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1364, 1492, 1494, 1496, 1497, 1502, 1506, 1508, 1406}
3201  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'double'}
   {3201, 1413, 1416, 1417, 1420, 1422, 1424, 3345, 1425, 1430, 1434, 1437, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1365, 1494, 1496, 1497, 1502, 1506, 1509, 1406}
3202  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'char'}
   {3202, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3346, 1430, 1434, 1438, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1366, 1494, 1496, 1497, 1502, 1506, 1510, 1406}
3203  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'number'}
   {3203, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3347, 1430, 1434, 1439, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1367, 1496, 1497, 1502, 1506, 1511, 1406}
3204  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'return'}
   {3204}
3205  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'for'}
   {3205}
3206  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '!='}
   {3206}
3207  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': ','}
   {3207}
3208  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '#'}
   {3208}
3209  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'int'}
   {3209}
3210  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'if'}
   {3210}
3211  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '('}
   {3211}
3212  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'else'}
   {3212}
3213  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '*'}
   {3213}
3214  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '-='}
   {3214}
3215  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'identifier'}
   {3215}
3216  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '<='}
   {3216}
3217  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '>'}
   {3217}
3218  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'void'}
   {3218}
3219  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '/='}
   {3219}
3220  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '/'}
   {3220}
3221  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'while'}
   {3221}
3222  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '-'}
   {3222}
3223  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': ';'}
   {3223}
3224  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '=='}
   {3224}
3225  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '<'}
   {3225}
3226  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'break'}
   {3226}
3227  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '='}
   {3227}
3228  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '}'}
   {3228}
3229  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '+='}
   {3229}
3230  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '+'}
   {3230}
3231  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '*='}
   {3231}
3232  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '{'}
   {3232}
3233  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'continue'}
   {3233}
3234  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '>='}
   {3234}
3235  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': ')'}
   {3235}
3236  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'float'}
   {3236}
3237  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'double'}
   {3237}
3238  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'char'}
   {3238}
3239  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'number'}
   {3239}
3240  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'return'}
   {3744, 3240}
3241  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'for'}
   {3745, 3241}
3242  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '!='}
   {3242, 3746}
3243  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': ','}
   {3747, 3243}
3244  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '#'}
   {3244, 3748}
3245  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'int'}
   {3749, 3245}
3246  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'if'}
   {3246, 3750}
3247  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '('}
   {3247, 3751}
3248  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'else'}
   {3752, 3248}
3249  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '*'}
   {3753, 3249}
3250  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '-='}
   {3250, 3754}
3251  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'identifier'}
   {3755, 3251}
3252  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '<='}
   {3252, 3756}
3253  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '>'}
   {3757, 3253}
3254  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'void'}
   {3254, 3758}
3255  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '/='}
   {3255, 3759}
3256  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '/'}
   {3760, 3256}
3257  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'while'}
   {3761, 3257}
3258  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '-'}
   {3258, 3762}
3259  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': ';'}
   {3763, 3259}
3260  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '=='}
   {3260, 3764}
3261  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '<'}
   {3765, 3261}
3262  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'break'}
   {3262, 3766}
3263  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '='}
   {3263, 3767}
3264  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '}'}
   {3768, 3264}
3265  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '+='}
   {3769, 3265}
3266  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '+'}
   {3266, 3770}
3267  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '*='}
   {3771, 3267}
3268  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '{'}
   {3268, 3772}
3269  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'continue'}
   {3269, 3773}
3270  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '>='}
   {3270, 3774}
3271  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': ')'}
   {3271, 3775}
3272  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'float'}
   {3776, 3272}
3273  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'double'}
   {3777, 3273}
3274  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'char'}
   {3274, 3778}
3275  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'number'}
   {3779, 3275}
3276  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'return'}
   {3276}
3277  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'for'}
   {3277}
3278  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '!='}
   {3278}
3279  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': ','}
   {3279}
3280  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '#'}
   {3280}
3281  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'int'}
   {3281}
3282  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'if'}
   {3282}
3283  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '('}
   {3283}
3284  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'else'}
   {3284}
3285  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '*'}
   {3285}
3286  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '-='}
   {3286}
3287  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'identifier'}
   {3287}
3288  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '<='}
   {3288}
3289  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '>'}
   {3289}
3290  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'void'}
   {3290}
3291  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '/='}
   {3291}
3292  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '/'}
   {3292}
3293  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'while'}
   {3293}
3294  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '-'}
   {3294}
3295  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': ';'}
   {3295}
3296  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '=='}
   {3296}
3297  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '<'}
   {3297}
3298  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'break'}
   {3298}
3299  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '='}
   {3299}
3300  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '}'}
   {3300}
3301  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '+='}
   {3301}
3302  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '+'}
   {3302}
3303  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '*='}
   {3303}
3304  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '{'}
   {3304}
3305  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'continue'}
   {3305}
3306  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '>='}
   {3306}
3307  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': ')'}
   {3307}
3308  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'float'}
   {3308}
3309  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'double'}
   {3309}
3310  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'char'}
   {3310}
3311  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'number'}
   {3311}
3312  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'return'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1332, 1334, 1341, 1344, 1345, 1348, 1476, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3312, 1404, 1406}
3313  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'for'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1333, 1334, 1341, 1344, 1345, 1348, 1477, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3313, 1405, 1406}
3314  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '!='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3314, 1406}
3315  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': ','}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1479, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 1406, 1407}
3316  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '#'}
   {1408, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1336, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1480, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3316, 1406}
3317  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'int'}
   {1409, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1337, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1481, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3317, 1406}
3318  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'if'}
   {1410, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1338, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1482, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3318, 1406}
3319  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '('}
   {1411, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1339, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1483, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3319, 1406}
3320  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'else'}
   {1412, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1340, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1484, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3320, 1406}
3321  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '*'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3321, 1406}
3322  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '-='}
   {1413, 1414, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1342, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1486, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3322, 1406}
3323  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'identifier'}
   {1413, 1415, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1343, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1487, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3323, 1406}
3324  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '<='}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3324, 1406}
3325  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '>'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 3325, 1406}
3326  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'void'}
   {1413, 1416, 1417, 1418, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1346, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1490, 1492, 1494, 1496, 1497, 1502, 3326, 1506, 1406}
3327  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '/='}
   {1413, 1416, 1417, 1419, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1347, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1491, 1492, 1494, 1496, 1497, 1502, 1506, 1406, 3327}
3328  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '/'}
   {3328, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 1406}
3329  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'while'}
   {3329, 1413, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1349, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 1406}
3330  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '-'}
   {3330, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 1406}
3331  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': ';'}
   {3331, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1478, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1495, 1496, 1497, 1502, 1506, 1406}
3332  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '=='}
   {3332, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 1406}
3333  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '<'}
   {1413, 3333, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 1406}
3334  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'break'}
   {1413, 3334, 1416, 1417, 1420, 1422, 1424, 1425, 1426, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1354, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1498, 1502, 1506, 1406}
3335  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '='}
   {1413, 3335, 1416, 1417, 1420, 1422, 1424, 1425, 1427, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1355, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1499, 1502, 1506, 1406}
3336  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '}'}
   {1413, 1416, 1417, 3336, 1420, 1422, 1424, 1425, 1428, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1356, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1500, 1502, 1506, 1406}
3337  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '+='}
   {1413, 1416, 1417, 3337, 1420, 1422, 1424, 1425, 1429, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1357, 1358, 1485, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1501, 1502, 1506, 1406}
3338  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '+'}
   {1413, 1416, 1417, 3338, 1420, 1422, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 1406}
3339  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '*='}
   {1413, 1416, 1417, 3339, 1420, 1422, 1424, 1425, 1430, 1431, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1359, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1503, 1506, 1406}
3340  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '{'}
   {1413, 1416, 1417, 1420, 3340, 1422, 1424, 1425, 1430, 1432, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1360, 1488, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1504, 1506, 1406}
3341  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'continue'}
   {1413, 1416, 1417, 1420, 3341, 1422, 1424, 1425, 1430, 1433, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1361, 1362, 1489, 1492, 1494, 1496, 1497, 1502, 1505, 1506, 1406}
3342  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '>='}
   {1413, 1416, 1417, 1420, 1422, 3342, 1424, 1425, 1430, 1434, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1496, 1497, 1502, 1506, 1406}
3343  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': ')'}
   {1413, 1416, 1417, 1420, 1422, 3343, 1424, 1425, 1430, 1434, 1435, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1363, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 1406}
3344  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'float'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 3344, 1430, 1434, 1436, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1364, 1492, 1494, 1496, 1497, 1502, 1506, 1508, 1406}
3345  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'double'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 3345, 1430, 1434, 1437, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1365, 1494, 1496, 1497, 1502, 1506, 1509, 1406}
3346  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'char'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 3346, 1430, 1434, 1438, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1366, 1494, 1496, 1497, 1502, 1506, 1510, 1406}
3347  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'number'}
   {1413, 1416, 1417, 1420, 1422, 1424, 1425, 3347, 1430, 1434, 1439, 1334, 1341, 1344, 1345, 1348, 1350, 1478, 1352, 1353, 1485, 1358, 1488, 1489, 1362, 1492, 1494, 1367, 1496, 1497, 1502, 1506, 1511, 1406}
3348  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'return'}
   {1799, 2059, 2063, 3348, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1847, 1919, 2231, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3420, 1631, 2015, 2275, 2279, 1771, 3564, 1775, 2159, 1655, 1915, 3708, 2303}
3349  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'for'}
   {1799, 2059, 2063, 3349, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3421, 1631, 2015, 2275, 2279, 1771, 3565, 1775, 2159, 1655, 1915, 3709, 2303}
3350  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '!='}
   {1799, 2059, 2063, 3350, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3422, 1631, 2015, 2275, 2279, 1771, 3566, 1775, 2159, 1655, 1915, 3710, 2303}
3351  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': ','}
   {1799, 2059, 2063, 3351, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1847, 1919, 2231, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3423, 1631, 2015, 2275, 2279, 1771, 1775, 3567, 2159, 3711, 1655, 1915, 2303}
3352  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '#'}
   {3712, 1799, 2059, 2063, 1943, 3352, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 3424, 2015, 2275, 2279, 1771, 1775, 3568, 2159, 1655, 1915, 2303}
3353  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'int'}
   {3713, 1799, 2059, 2063, 1943, 3353, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3425, 2275, 2279, 1771, 1775, 2159, 3569, 1655, 1915, 2303}
3354  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'if'}
   {3714, 1799, 2059, 2063, 1943, 3354, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3426, 2275, 2279, 1771, 1775, 2159, 3570, 1655, 1915, 2303}
3355  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '('}
   {3715, 1799, 2059, 2063, 1943, 3355, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3427, 2275, 2279, 1771, 1775, 2159, 3571, 1655, 1915, 2303}
3356  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'else'}
   {3716, 1799, 2059, 2063, 1943, 2203, 3356, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3428, 2279, 1771, 1775, 2159, 3572, 1655, 1915, 2303}
3357  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '*'}
   {3717, 1799, 2059, 2063, 1943, 2203, 3357, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3429, 2279, 1771, 1775, 2159, 3573, 1655, 1915, 2303}
3358  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '-='}
   {3718, 1799, 2059, 2063, 1943, 2203, 3358, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3430, 2279, 1771, 1775, 2159, 3574, 1655, 1915, 2303}
3359  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'identifier'}
   {3719, 1799, 1655, 2059, 2063, 1943, 2203, 3359, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3431, 2279, 1771, 1775, 2159, 3575, 1915, 2303}
3360  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '<='}
   {1799, 3720, 2059, 2063, 1943, 2203, 2207, 3360, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3432, 1771, 1775, 2159, 1655, 3576, 1915, 2303}
3361  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '>'}
   {1799, 3721, 2059, 2063, 1943, 2203, 2207, 3361, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3433, 1771, 1775, 2159, 1655, 3577, 1915, 2303}
3362  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'void'}
   {1799, 3722, 2059, 2063, 1943, 2203, 2207, 3362, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3434, 1771, 1775, 2159, 1655, 3578, 1915, 2303}
3363  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '/='}
   {1799, 3723, 2059, 2063, 1943, 2203, 2207, 3363, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 3579, 1627, 1631, 2015, 2275, 2279, 3435, 1771, 1775, 2159, 1655, 1915, 2303}
3364  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '/'}
   {1799, 2059, 3724, 2063, 1943, 2203, 2207, 1699, 3364, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3436, 1775, 2159, 1655, 1915, 3580, 2303}
3365  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'while'}
   {1799, 2059, 3725, 2063, 1943, 2203, 2207, 1699, 3365, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3437, 1775, 2159, 1655, 1915, 3581, 2303}
3366  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '-'}
   {1799, 2059, 3726, 2063, 1943, 2203, 2207, 1699, 3366, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3438, 1775, 2159, 1655, 1915, 3582, 2303}
3367  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': ';'}
   {1799, 2059, 3727, 2063, 1943, 2203, 2207, 1699, 3367, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3583, 3439, 1775, 2159, 1655, 1915, 2303}
3368  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '=='}
   {3584, 1799, 2059, 2063, 3728, 1943, 2203, 2207, 1699, 2087, 3368, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 3440, 1775, 1655, 1915, 2303}
3369  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '<'}
   {3585, 1799, 2059, 2063, 3729, 1943, 2203, 2207, 1699, 2087, 1703, 3369, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3441, 1655, 1915, 2303}
3370  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'break'}
   {3586, 1799, 2059, 2063, 3730, 1943, 2203, 2207, 1699, 2087, 1703, 3370, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3442, 1655, 1915, 2303}
3371  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '='}
   {3587, 1799, 2059, 2063, 3731, 1943, 2203, 2207, 1699, 2087, 1703, 3371, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3443, 1655, 1915, 2303}
3372  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '}'}
   {3588, 1799, 2059, 2063, 3732, 1943, 2203, 2207, 1699, 2087, 1703, 3372, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3444, 1655, 1915, 2303}
3373  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '+='}
   {3589, 1799, 2059, 2063, 3733, 1943, 2203, 2207, 1699, 2087, 1703, 3373, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3445, 1655, 1915, 2303}
3374  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '+'}
   {3590, 1799, 2059, 2063, 3734, 1943, 2203, 2207, 1699, 2087, 1703, 3374, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3446, 1655, 1915, 2303}
3375  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '*='}
   {3591, 1655, 1799, 2059, 2063, 1943, 3735, 2203, 2207, 1699, 2087, 1703, 3375, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3447, 1915, 2303}
3376  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '{'}
   {1799, 3592, 2059, 2063, 1943, 3736, 2203, 2207, 1699, 2087, 1703, 3376, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3448, 1915, 2303}
3377  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'continue'}
   {1799, 3593, 2059, 2063, 1943, 3737, 2203, 2207, 1699, 2087, 1703, 3377, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3449, 1915, 2303}
3378  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '>='}
   {1799, 3594, 2059, 2063, 1943, 3738, 2203, 2207, 1699, 2087, 1703, 3378, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3450, 1915, 2303}
3379  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': ')'}
   {1799, 3595, 2059, 2063, 1943, 2203, 3739, 2207, 1699, 2087, 1703, 3379, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 3451, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 2303}
3380  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'float'}
   {1799, 2059, 3596, 2063, 1943, 2203, 3740, 2207, 1699, 2087, 1703, 1843, 3380, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3452, 2303}
3381  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'double'}
   {1799, 2059, 3597, 2063, 1943, 2203, 3741, 2207, 1699, 2087, 1703, 1843, 3381, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3453, 2303}
3382  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'char'}
   {1799, 2059, 3598, 2063, 1943, 2203, 3742, 2207, 1699, 2087, 1703, 1843, 3382, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3454, 2303}
3383  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'number'}
   {1799, 2059, 3599, 2063, 1943, 2203, 2207, 3743, 1699, 2087, 1703, 1843, 1919, 3383, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 3455, 1771, 2159, 1775, 1655, 1915, 2303}
3384  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'return'}
   {3384}
3385  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'for'}
   {3385}
3386  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '!='}
   {3386}
3387  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': ','}
   {3387}
3388  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '#'}
   {3388}
3389  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'int'}
   {3389}
3390  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'if'}
   {3390}
3391  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '('}
   {3391}
3392  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'else'}
   {3392}
3393  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '*'}
   {3393}
3394  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '-='}
   {3394}
3395  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'identifier'}
   {3395}
3396  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '<='}
   {3396}
3397  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '>'}
   {3397}
3398  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'void'}
   {3398}
3399  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '/='}
   {3399}
3400  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '/'}
   {3400}
3401  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'while'}
   {3401}
3402  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '-'}
   {3402}
3403  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': ';'}
   {3403}
3404  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '=='}
   {3404}
3405  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '<'}
   {3405}
3406  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'break'}
   {3406}
3407  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '='}
   {3407}
3408  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '}'}
   {3408}
3409  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '+='}
   {3409}
3410  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '+'}
   {3410}
3411  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '*='}
   {3411}
3412  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '{'}
   {3412}
3413  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'continue'}
   {3413}
3414  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': '>='}
   {3414}
3415  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': ')'}
   {3415}
3416  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'float'}
   {3416}
3417  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'double'}
   {3417}
3418  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'char'}
   {3418}
3419  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 41, 'isTer': True, 'accept': 'number'}
   {3419}
3420  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'return'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3420, 1727}
3421  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'for'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3421, 1727}
3422  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '!='}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3422, 1727}
3423  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': ','}
   {1699, 3423, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3424  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '#'}
   {3424, 1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3425  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'int'}
   {3425, 1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3426  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'if'}
   {3426, 1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3427  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '('}
   {1699, 3427, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3428  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'else'}
   {1699, 3428, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3429  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '*'}
   {1699, 3429, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3430  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '-='}
   {1699, 3430, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3431  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'identifier'}
   {1699, 1703, 1799, 3431, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3432  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '<='}
   {1699, 1703, 1799, 3432, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3433  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '>'}
   {1699, 1703, 1799, 3433, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3434  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'void'}
   {1699, 1703, 1799, 3434, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3435  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '/='}
   {1699, 1703, 1799, 1771, 3435, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3436  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '/'}
   {1699, 1703, 1799, 1771, 3436, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3437  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'while'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 3437, 1843, 1655, 1627, 1727}
3438  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '-'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 3438, 1843, 1655, 1627, 1727}
3439  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': ';'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 3439, 1843, 1655, 1627, 1727}
3440  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '=='}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 3440, 1843, 1655, 1627, 1727}
3441  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '<'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 3441, 1843, 1655, 1627, 1727}
3442  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'break'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 3442, 1843, 1655, 1627, 1727}
3443  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '='}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 3443, 1655, 1627, 1727}
3444  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '}'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 3444, 1655, 1627, 1727}
3445  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '+='}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 3445, 1655, 1627, 1727}
3446  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '+'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 3446, 1655, 1627, 1727}
3447  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '*='}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3447, 1727}
3448  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '{'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 3448, 1627, 1727}
3449  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'continue'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 3449, 1627, 1727}
3450  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '>='}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 3450, 1627, 1727}
3451  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': ')'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 3451, 1655, 1627, 1727}
3452  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'float'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3452, 1727}
3453  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'double'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3453, 1727}
3454  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'char'}
   {1699, 1703, 1799, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 3454, 1727}
3455  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'number'}
   {1699, 1703, 1799, 3455, 1771, 1847, 1631, 1775, 1871, 1843, 1655, 1627, 1727}
3456  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'return'}
   {3456, 1344, 1345, 1348, 1413, 1350, 1476, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1332, 1334, 1404, 1341, 1406}
3457  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'for'}
   {1344, 3457, 1345, 1348, 1413, 1350, 1477, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1341, 1497, 1502, 1506, 1333, 1334, 1405, 1406}
3458  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '!='}
   {1344, 1345, 3458, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 1506, 1334, 1341, 1406}
3459  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': ','}
   {1344, 1345, 3459, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1479, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1335, 1341, 1406, 1407}
3460  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '#'}
   {1344, 1345, 1408, 3460, 1348, 1350, 1413, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1480, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1336, 1341, 1406}
3461  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'int'}
   {1344, 1345, 1409, 1348, 3461, 1350, 1413, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1481, 1502, 1506, 1334, 1337, 1341, 1406}
3462  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'if'}
   {1344, 1345, 1410, 1348, 1413, 3462, 1350, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1482, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1338, 1341, 1406}
3463  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '('}
   {1344, 1345, 1411, 1348, 1413, 1350, 3463, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1483, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1339, 1341, 1406}
3464  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'else'}
   {1344, 1345, 1348, 1412, 1350, 1413, 3464, 1352, 1353, 1416, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1478, 1484, 1485, 1430, 1488, 1489, 1492, 1434, 1494, 1496, 1497, 1502, 1506, 1334, 1340, 1341, 1406}
3465  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '*'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 3465, 1353, 1416, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3466  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '-='}
   {1344, 1345, 1348, 1413, 1350, 1414, 1352, 1353, 3466, 1416, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1478, 1485, 1486, 1430, 1488, 1489, 1492, 1434, 1494, 1496, 1497, 1502, 1342, 1506, 1334, 1341, 1406}
3467  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'identifier'}
   {1344, 1345, 1348, 1413, 1350, 1415, 1352, 1353, 1416, 3467, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1478, 1485, 1487, 1430, 1488, 1489, 1492, 1434, 1494, 1496, 1497, 1502, 1506, 1334, 1341, 1406, 1343}
3468  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '<='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 3468, 1420, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3469  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '>'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 3469, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3470  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'void'}
   {1344, 1345, 1346, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1418, 1420, 3470, 1358, 1422, 1424, 1362, 1425, 1485, 1488, 1430, 1489, 1490, 1492, 1434, 1494, 1496, 1497, 1502, 1506, 1334, 1341, 1406}
3471  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '/='}
   {1344, 1345, 1347, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1419, 1420, 1358, 3471, 1422, 1424, 1362, 1425, 1485, 1488, 1430, 1489, 1491, 1492, 1434, 1494, 1496, 1497, 1502, 1506, 1334, 1341, 1406}
3472  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '/'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 3472, 1424, 1362, 1425, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3473  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'while'}
   {1344, 1345, 1348, 1349, 1350, 1413, 1352, 1353, 1416, 1417, 1420, 1421, 1358, 1422, 1424, 3473, 1362, 1425, 1478, 1485, 1430, 1488, 1489, 1492, 1434, 1493, 1494, 1496, 1497, 1502, 1506, 1334, 1341, 1406}
3474  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '-'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 3474, 1362, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3475  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': ';'}
   {1344, 1345, 1348, 1413, 1350, 1351, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1423, 1424, 1362, 3475, 1425, 1485, 1430, 1488, 1489, 1492, 1434, 1494, 1495, 1496, 1497, 1502, 1506, 1334, 1341, 1406}
3476  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '=='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 3476, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3477  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '<'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 3477, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3478  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'break'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1354, 1416, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1426, 1485, 1488, 3478, 1430, 1489, 1492, 1434, 1494, 1496, 1497, 1498, 1502, 1506, 1334, 1341, 1406}
3479  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1355, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1427, 1485, 1488, 1430, 3479, 1489, 1492, 1434, 1494, 1496, 1497, 1499, 1502, 1506, 1334, 1341, 1406}
3480  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '}'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1356, 1420, 1358, 1422, 1424, 1425, 1362, 1485, 1428, 1488, 1430, 1489, 3480, 1492, 1434, 1494, 1496, 1497, 1500, 1502, 1506, 1334, 1341, 1406}
3481  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '+='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1357, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1429, 1430, 1489, 1492, 3481, 1434, 1494, 1496, 1497, 1501, 1502, 1506, 1334, 1341, 1406}
3482  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '+'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 3482, 1434, 1502, 1506, 1334, 1341, 1406}
3483  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '*='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1359, 1422, 1424, 1362, 1425, 1488, 1489, 1430, 1431, 1492, 1494, 1434, 3483, 1496, 1497, 1502, 1503, 1506, 1334, 1341, 1406}
3484  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '{'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1360, 1424, 1362, 1425, 1488, 1489, 1430, 1492, 1432, 1494, 1434, 1496, 3484, 1497, 1502, 1504, 1506, 1334, 1341, 1406}
3485  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'continue'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1361, 1362, 1425, 1488, 1489, 1430, 1492, 1494, 1433, 1434, 1496, 1497, 3485, 1502, 1505, 1506, 1334, 1341, 1406}
3486  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '>='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 3486, 1502, 1506, 1334, 1341, 1406}
3487  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': ')'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1363, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1435, 1497, 1502, 3487, 1506, 1507, 1334, 1341, 1406}
3488  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'float'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1364, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1436, 1502, 3488, 1506, 1508, 1334, 1341, 1406}
3489  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'double'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1365, 1430, 1492, 1494, 1496, 1434, 1497, 1437, 1502, 3489, 1506, 1509, 1334, 1341, 1406}
3490  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'char'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1366, 1430, 1494, 1496, 1434, 1497, 1438, 1502, 3490, 1506, 1510, 1334, 1341, 1406}
3491  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'number'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1367, 1494, 1496, 1434, 1497, 1502, 1439, 1506, 3491, 1511, 1334, 1341, 1406}
3492  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'return'}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 3492, 1703, 2087, 1843, 1847, 1919, 2231, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3420, 1631, 2015, 2275, 2279, 1771, 3564, 1775, 2159, 1655, 1915, 3708, 2303}
3493  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'for'}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 3493, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3421, 1631, 2015, 2275, 2279, 1771, 3565, 1775, 2159, 1655, 1915, 3709, 2303}
3494  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '!='}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 3494, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3422, 1631, 2015, 2275, 2279, 1771, 3566, 1775, 2159, 1655, 1915, 3710, 2303}
3495  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': ','}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 3495, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3423, 1631, 2015, 2275, 2279, 1771, 1775, 3567, 2159, 3711, 1655, 1915, 2303}
3496  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '#'}
   {3712, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 3496, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 3424, 2015, 2275, 2279, 1771, 1775, 3568, 2159, 1655, 1915, 2303}
3497  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'int'}
   {3713, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3497, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3425, 2275, 2279, 1771, 1775, 2159, 3569, 1655, 1915, 2303}
3498  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'if'}
   {3714, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3498, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3426, 2275, 2279, 1771, 1775, 2159, 3570, 1655, 1915, 2303}
3499  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '('}
   {3715, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3499, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3427, 2275, 2279, 1771, 1775, 2159, 3571, 1655, 1915, 2303}
3500  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'else'}
   {3716, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3500, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3428, 2279, 1771, 1775, 2159, 3572, 1655, 1915, 2303}
3501  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '*'}
   {3717, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3501, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3429, 2279, 1771, 1775, 2159, 3573, 1655, 1915, 2303}
3502  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '-='}
   {3718, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3502, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3430, 2279, 1771, 1775, 2159, 3574, 1655, 1915, 2303}
3503  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'identifier'}
   {3719, 1799, 1655, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3503, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3431, 2279, 1771, 1775, 2159, 3575, 1915, 2303}
3504  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '<='}
   {1799, 3720, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3504, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3432, 1771, 1775, 2159, 1655, 3576, 1915, 2303}
3505  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '>'}
   {1799, 3721, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3505, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3433, 1771, 1775, 2159, 1655, 3577, 1915, 2303}
3506  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'void'}
   {1799, 3722, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3506, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3434, 1771, 1775, 2159, 1655, 3578, 1915, 2303}
3507  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '/='}
   {1799, 3723, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 3507, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 3579, 1627, 1631, 2015, 2275, 2279, 3435, 1771, 1775, 2159, 1655, 1915, 2303}
3508  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '/'}
   {1799, 2059, 3724, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3508, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3436, 1775, 2159, 1655, 1915, 3580, 2303}
3509  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'while'}
   {1799, 2059, 3725, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3509, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3437, 1775, 2159, 1655, 1915, 3581, 2303}
3510  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '-'}
   {1799, 2059, 3726, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3510, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3438, 1775, 2159, 1655, 1915, 3582, 2303}
3511  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': ';'}
   {1799, 2059, 3727, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3511, 1847, 1919, 2231, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3583, 3439, 1775, 2159, 1655, 1915, 2303}
3512  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '=='}
   {3584, 1799, 2059, 2063, 3728, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 3512, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 3440, 1775, 1655, 1915, 2303}
3513  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '<'}
   {3585, 1799, 2059, 2063, 3729, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 2231, 1919, 3513, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3441, 1655, 1915, 2303}
3514  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'break'}
   {3586, 1799, 2059, 2063, 3730, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 3514, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3442, 1655, 1915, 2303}
3515  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '='}
   {3587, 1799, 2059, 2063, 3731, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 3515, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3443, 1655, 1915, 2303}
3516  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '}'}
   {3588, 1799, 2059, 2063, 3732, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 3516, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3444, 1655, 1915, 2303}
3517  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '+='}
   {3589, 1799, 2059, 2063, 3733, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 3517, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3445, 1655, 1915, 2303}
3518  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '+'}
   {3590, 1799, 2059, 2063, 3734, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 3518, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3446, 1655, 1915, 2303}
3519  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '*='}
   {3591, 1655, 1799, 2059, 2063, 1943, 3735, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 3519, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3447, 1915, 2303}
3520  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '{'}
   {1799, 3592, 2059, 2063, 1943, 3736, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 3520, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3448, 1915, 2303}
3521  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'continue'}
   {1799, 3593, 2059, 2063, 1943, 3737, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 3521, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3449, 1915, 2303}
3522  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '>='}
   {1799, 3594, 2059, 2063, 1943, 3738, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 3522, 1987, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3450, 1915, 2303}
3523  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': ')'}
   {1799, 3595, 2059, 2063, 1943, 2203, 3739, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 3523, 1987, 1991, 1871, 2131, 3451, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 2303}
3524  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'float'}
   {1799, 2059, 3596, 2063, 1943, 2203, 3740, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 3524, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3452, 2303}
3525  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'double'}
   {1799, 2059, 3597, 2063, 1943, 2203, 3741, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 3525, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3453, 2303}
3526  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'char'}
   {1799, 2059, 3598, 2063, 1943, 2203, 3742, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 3526, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3454, 2303}
3527  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'number'}
   {1799, 2059, 3599, 2063, 1943, 2203, 2207, 3743, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 3527, 1991, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 3455, 1771, 2159, 1775, 1655, 1915, 2303}
3528  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'return'}
   {3528}
3529  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'for'}
   {3529}
3530  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '!='}
   {3530}
3531  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': ','}
   {3531}
3532  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '#'}
   {3532}
3533  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'int'}
   {3533}
3534  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'if'}
   {3534}
3535  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '('}
   {3535}
3536  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'else'}
   {3536}
3537  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '*'}
   {3537}
3538  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '-='}
   {3538}
3539  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'identifier'}
   {3539}
3540  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '<='}
   {3540}
3541  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '>'}
   {3541}
3542  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'void'}
   {3542}
3543  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '/='}
   {3543}
3544  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '/'}
   {3544}
3545  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'while'}
   {3545}
3546  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '-'}
   {3546}
3547  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': ';'}
   {3547}
3548  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '=='}
   {3548}
3549  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '<'}
   {3549}
3550  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'break'}
   {3550}
3551  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '='}
   {3551}
3552  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '}'}
   {3552}
3553  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '+='}
   {3553}
3554  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '+'}
   {3554}
3555  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '*='}
   {3555}
3556  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '{'}
   {3556}
3557  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'continue'}
   {3557}
3558  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '>='}
   {3558}
3559  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': ')'}
   {3559}
3560  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'float'}
   {3560}
3561  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'double'}
   {3561}
3562  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'char'}
   {3562}
3563  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'number'}
   {3563}
3564  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'return'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 3564, 2159, 1919, 1915, 2303}
3565  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'for'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 3565, 2159, 1919, 1915, 2303}
3566  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '!='}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 3566, 2159, 1919, 1915, 2303}
3567  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': ','}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3567, 1919, 1915, 2303}
3568  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '#'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3568, 1919, 1915, 2303}
3569  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'int'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3569, 1919, 1915, 2303}
3570  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'if'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3570, 1919, 1915, 2303}
3571  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '('}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3571, 1919, 1915, 2303}
3572  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'else'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3572, 1919, 1915, 2303}
3573  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '*'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3573, 1919, 1915, 2303}
3574  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '-='}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 3574, 1919, 1915, 2303}
3575  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'identifier'}
   {1987, 3575, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3576  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '<='}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 3576, 1915, 2303}
3577  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '>'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 3577, 1915, 2303}
3578  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'void'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 3578, 1915, 2303}
3579  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '/='}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 3579, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3580  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '/'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 3580, 2303}
3581  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'while'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 3581, 2303}
3582  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '-'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 3582, 2303}
3583  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': ';'}
   {1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 3583, 2159, 1919, 1915, 2303}
3584  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '=='}
   {3584, 1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3585  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '<'}
   {3585, 1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3586  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'break'}
   {3586, 1987, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3587  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '='}
   {1987, 3587, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3588  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '}'}
   {1987, 3588, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3589  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '+='}
   {1987, 3589, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3590  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '+'}
   {1987, 3590, 1991, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3591  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '*='}
   {1987, 1991, 3591, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3592  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '{'}
   {1987, 1991, 3592, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3593  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'continue'}
   {1987, 1991, 3593, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3594  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': '>='}
   {1987, 1991, 3594, 2059, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3595  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': ')'}
   {1987, 1991, 2059, 3595, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3596  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'float'}
   {1987, 1991, 2059, 3596, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3597  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'double'}
   {1987, 1991, 2059, 3597, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3598  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'char'}
   {1987, 1991, 2059, 3598, 2063, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3599  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'number'}
   {1987, 1991, 2059, 2063, 3599, 2131, 1943, 2135, 2231, 2203, 2015, 2207, 2275, 2087, 2279, 2159, 1919, 1915, 2303}
3600  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'return'}
   {1344, 1345, 1348, 1413, 1350, 1476, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 3600, 1424, 1362, 1425, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1332, 1334, 1404, 1341, 1406}
3601  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'for'}
   {1344, 1345, 1348, 1413, 1350, 1477, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 3601, 1362, 1425, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1341, 1496, 1497, 1502, 1506, 1333, 1334, 1405, 1406}
3602  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '!='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 3602, 1362, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3603  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': ','}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1479, 1358, 1422, 1424, 1425, 1362, 3603, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1335, 1341, 1406, 1407}
3604  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '#'}
   {1344, 1345, 1408, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1480, 1358, 1422, 1424, 1425, 1362, 1485, 3604, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1336, 1341, 1406}
3605  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'int'}
   {1344, 1345, 1409, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1481, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 3605, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1337, 1341, 1406}
3606  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'if'}
   {1344, 1345, 1410, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1482, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 3606, 1430, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1338, 1341, 1406}
3607  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '('}
   {1344, 1345, 1411, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1483, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 3607, 1492, 1494, 1434, 1496, 1497, 1502, 1506, 1334, 1339, 1341, 1406}
3608  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'else'}
   {1344, 1345, 1348, 1412, 1350, 1413, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1484, 1485, 1488, 1430, 1489, 3608, 1492, 1434, 1494, 1496, 1497, 1502, 1506, 1334, 1340, 1341, 1406}
3609  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '*'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 3609, 1434, 1497, 1502, 1506, 1334, 1341, 1406}
3610  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '-='}
   {1344, 1345, 1348, 1413, 1350, 1414, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1485, 1486, 1488, 1430, 1489, 1492, 1494, 3610, 1434, 1496, 1497, 1502, 1342, 1506, 1334, 1341, 1406}
3611  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'identifier'}
   {1344, 1345, 1348, 1413, 1350, 1415, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1424, 1425, 1362, 1485, 1487, 1488, 1430, 1489, 1492, 1494, 1434, 3611, 1496, 1497, 1502, 1506, 1334, 1341, 1406, 1343}
3612  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '<='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 3612, 1502, 1506, 1334, 1341, 1406}
3613  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '>'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 3613, 1502, 1506, 1334, 1341, 1406}
3614  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'void'}
   {1344, 1345, 1346, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1418, 1420, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1490, 1492, 1494, 1434, 1496, 1497, 3614, 1502, 1506, 1334, 1341, 1406}
3615  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '/='}
   {1344, 1345, 1347, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1419, 1420, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1489, 1430, 1491, 1492, 1494, 1434, 1496, 1497, 1502, 3615, 1506, 1334, 1341, 1406}
3616  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '/'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 3616, 1506, 1334, 1341, 1406}
3617  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'while'}
   {1344, 1345, 1348, 1349, 1350, 1413, 1352, 1353, 1416, 1417, 1420, 1421, 1358, 1422, 1424, 1425, 1362, 1478, 1485, 1488, 1430, 1489, 1492, 1493, 1434, 1494, 1496, 1497, 1502, 3617, 1506, 1334, 1341, 1406}
3618  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '-'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 3618, 1506, 1334, 1341, 1406}
3619  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': ';'}
   {1344, 1345, 1348, 1413, 1350, 1351, 1352, 1353, 1416, 1417, 1420, 1478, 1358, 1422, 1423, 1424, 1362, 1425, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1495, 1496, 1497, 1502, 1506, 3619, 1334, 1341, 1406}
3620  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '=='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 1506, 3620, 1334, 1341, 1406}
3621  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '<'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 1506, 3621, 1334, 1341, 1406}
3622  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'break'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1354, 1416, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1426, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1498, 1502, 1506, 3622, 1334, 1341, 1406}
3623  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1355, 1417, 1420, 1358, 1422, 1424, 1425, 1362, 1427, 1485, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1499, 1502, 1506, 3623, 1334, 1341, 1406}
3624  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '}'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1356, 1420, 1358, 1422, 1424, 1425, 1362, 1485, 1428, 1488, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1500, 1502, 1506, 3624, 1334, 1341, 1406}
3625  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '+='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1357, 1358, 1422, 1424, 1425, 1362, 1485, 1488, 1429, 1430, 1489, 1492, 1494, 1434, 1496, 1497, 1501, 1502, 1506, 3625, 1334, 1341, 1406}
3626  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '+'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 1506, 3626, 1334, 1341, 1406}
3627  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '*='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1359, 1422, 1424, 1362, 1425, 1488, 1489, 1430, 1431, 1492, 1494, 1434, 1496, 1497, 1502, 1503, 1506, 3627, 1334, 1341, 1406}
3628  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '{'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1360, 1424, 1362, 1425, 1488, 1489, 1430, 1492, 1432, 1494, 1434, 1496, 1497, 1502, 1504, 1506, 3628, 1334, 1341, 1406}
3629  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'continue'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1361, 1362, 1425, 1488, 1489, 1430, 1492, 1494, 1433, 1434, 1496, 1497, 1502, 1505, 1506, 3629, 1334, 1341, 1406}
3630  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': '>='}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1494, 1496, 1497, 1434, 1502, 1506, 3630, 1334, 1341, 1406}
3631  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': ')'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1363, 1488, 1489, 1430, 1492, 1494, 1496, 1434, 1435, 1497, 1502, 1506, 1507, 3631, 1334, 1341, 1406}
3632  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'float'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1364, 1489, 1430, 1492, 1494, 1496, 1434, 1497, 1436, 1502, 1506, 1508, 3632, 1334, 1341, 1406}
3633  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'double'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1365, 1430, 1492, 1494, 1496, 1434, 1497, 1437, 1502, 1506, 1509, 3633, 1334, 1341, 1406}
3634  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'char'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1366, 1430, 1494, 1496, 1434, 1497, 1438, 1502, 1506, 1510, 3634, 1334, 1341, 1406}
3635  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 43, 'isTer': False, 'accept': 'number'}
   {1344, 1345, 1348, 1413, 1350, 1478, 1352, 1353, 1416, 1417, 1420, 1485, 1358, 1422, 1424, 1425, 1362, 1488, 1489, 1492, 1430, 1367, 1494, 1496, 1434, 1497, 1502, 1439, 1506, 1511, 3635, 1334, 1341, 1406}
3636  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'return'}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3636, 1847, 1919, 2231, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3420, 1631, 2015, 2275, 2279, 1771, 3564, 1775, 2159, 1655, 1915, 3708, 2303}
3637  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'for'}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3637, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3421, 1631, 2015, 2275, 2279, 1771, 3565, 1775, 2159, 1655, 1915, 3709, 2303}
3638  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '!='}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3638, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3422, 1631, 2015, 2275, 2279, 1771, 3566, 1775, 2159, 1655, 1915, 3710, 2303}
3639  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': ','}
   {1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 3639, 1847, 1919, 2231, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 3423, 1631, 2015, 2275, 2279, 1771, 1775, 3567, 2159, 3711, 1655, 1915, 2303}
3640  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '#'}
   {3712, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3640, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 3424, 2015, 2275, 2279, 1771, 1775, 3568, 2159, 1655, 1915, 2303}
3641  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'int'}
   {3713, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3641, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3425, 2275, 2279, 1771, 1775, 2159, 3569, 1655, 1915, 2303}
3642  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'if'}
   {3714, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3642, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3426, 2275, 2279, 1771, 1775, 2159, 3570, 1655, 1915, 2303}
3643  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '('}
   {3715, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3643, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 3427, 2275, 2279, 1771, 1775, 2159, 3571, 1655, 1915, 2303}
3644  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'else'}
   {3716, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3644, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3428, 2279, 1771, 1775, 2159, 3572, 1655, 1915, 2303}
3645  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '*'}
   {3717, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3645, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3429, 2279, 1771, 1775, 2159, 3573, 1655, 1915, 2303}
3646  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '-='}
   {3718, 1799, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 3646, 1727, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3430, 2279, 1771, 1775, 2159, 3574, 1655, 1915, 2303}
3647  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'identifier'}
   {3719, 1799, 1655, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 3647, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 3431, 2279, 1771, 1775, 2159, 3575, 1915, 2303}
3648  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '<='}
   {1799, 3720, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 3648, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3432, 1771, 1775, 2159, 1655, 3576, 1915, 2303}
3649  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '>'}
   {1799, 3721, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 3649, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3433, 1771, 1775, 2159, 1655, 3577, 1915, 2303}
3650  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'void'}
   {1799, 3722, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 3650, 1987, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 3434, 1771, 1775, 2159, 1655, 3578, 1915, 2303}
3651  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '/='}
   {1799, 3723, 2059, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 3651, 1987, 1991, 1871, 2131, 2135, 3579, 1627, 1631, 2015, 2275, 2279, 3435, 1771, 1775, 2159, 1655, 1915, 2303}
3652  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '/'}
   {1799, 2059, 3724, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 3652, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3436, 1775, 2159, 1655, 1915, 3580, 2303}
3653  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'while'}
   {1799, 2059, 3725, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 3653, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3437, 1775, 2159, 1655, 1915, 3581, 2303}
3654  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '-'}
   {1799, 2059, 3726, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 3654, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3438, 1775, 2159, 1655, 1915, 3582, 2303}
3655  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': ';'}
   {1799, 2059, 3727, 2063, 1943, 2203, 2207, 1699, 1703, 2087, 1843, 1919, 2231, 1847, 1727, 1987, 3655, 1991, 1871, 2131, 2135, 1627, 1631, 2015, 2275, 2279, 1771, 3583, 3439, 1775, 2159, 1655, 1915, 2303}
3656  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '=='}
   {3584, 1799, 2059, 2063, 3728, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3656, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 3440, 1775, 1655, 1915, 2303}
3657  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '<'}
   {3585, 1799, 2059, 2063, 3729, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3657, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3441, 1655, 1915, 2303}
3658  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'break'}
   {3586, 1799, 2059, 2063, 3730, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3658, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3442, 1655, 1915, 2303}
3659  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '='}
   {3587, 1799, 2059, 2063, 3731, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3659, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3443, 1655, 1915, 2303}
3660  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '}'}
   {3588, 1799, 2059, 2063, 3732, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3660, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3444, 1655, 1915, 2303}
3661  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '+='}
   {3589, 1799, 2059, 2063, 3733, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3661, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3445, 1655, 1915, 2303}
3662  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '+'}
   {3590, 1799, 2059, 2063, 3734, 1943, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3662, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3446, 1655, 1915, 2303}
3663  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '*='}
   {3591, 1655, 1799, 2059, 2063, 1943, 3735, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 3663, 1871, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 3447, 1915, 2303}
3664  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '{'}
   {1799, 3592, 2059, 2063, 1943, 3736, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 3664, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3448, 1915, 2303}
3665  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'continue'}
   {1799, 3593, 2059, 2063, 1943, 3737, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 3665, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3449, 1915, 2303}
3666  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': '>='}
   {1799, 3594, 2059, 2063, 1943, 3738, 2203, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 3666, 2131, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 3450, 1915, 2303}
3667  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': ')'}
   {1799, 3595, 2059, 2063, 1943, 2203, 3739, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 3667, 2131, 3451, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 2303}
3668  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'float'}
   {1799, 2059, 3596, 2063, 1943, 2203, 3740, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 3668, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3452, 2303}
3669  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'double'}
   {1799, 2059, 3597, 2063, 1943, 2203, 3741, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 3669, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3453, 2303}
3670  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'char'}
   {1799, 2059, 3598, 2063, 1943, 2203, 3742, 2207, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 3670, 2135, 1627, 2015, 1631, 2275, 2279, 1771, 2159, 1775, 1655, 1915, 3454, 2303}
3671  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 43, 'isTer': False, 'accept': 'number'}
   {1799, 2059, 3599, 2063, 1943, 2203, 2207, 3743, 1699, 2087, 1703, 1843, 1919, 2231, 1847, 1727, 1987, 1991, 1871, 2131, 2135, 3671, 1627, 2015, 1631, 2275, 2279, 3455, 1771, 2159, 1775, 1655, 1915, 2303}
3672  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'return'}
   {3672}
3673  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'for'}
   {3673}
3674  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '!='}
   {3674}
3675  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': ','}
   {3675}
3676  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '#'}
   {3676}
3677  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'int'}
   {3677}
3678  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'if'}
   {3678}
3679  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '('}
   {3679}
3680  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'else'}
   {3680}
3681  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '*'}
   {3681}
3682  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '-='}
   {3682}
3683  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'identifier'}
   {3683}
3684  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '<='}
   {3684}
3685  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '>'}
   {3685}
3686  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'void'}
   {3686}
3687  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '/='}
   {3687}
3688  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '/'}
   {3688}
3689  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'while'}
   {3689}
3690  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '-'}
   {3690}
3691  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': ';'}
   {3691}
3692  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '=='}
   {3692}
3693  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '<'}
   {3693}
3694  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'break'}
   {3694}
3695  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '='}
   {3695}
3696  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '}'}
   {3696}
3697  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '+='}
   {3697}
3698  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '+'}
   {3698}
3699  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '*='}
   {3699}
3700  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '{'}
   {3700}
3701  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'continue'}
   {3701}
3702  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': '>='}
   {3702}
3703  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': ')'}
   {3703}
3704  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'float'}
   {3704}
3705  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'double'}
   {3705}
3706  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'char'}
   {3706}
3707  {'left': 'arithmetic_expression', 'right': ['relop', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 43, 'isTer': True, 'accept': 'number'}
   {3707}
3708  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'return'}
   {3708}
3709  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'for'}
   {3709}
3710  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '!='}
   {3710}
3711  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': ','}
   {3711}
3712  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '#'}
   {3712}
3713  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'int'}
   {3713}
3714  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'if'}
   {3714}
3715  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '('}
   {3715}
3716  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'else'}
   {3716}
3717  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '*'}
   {3717}
3718  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '-='}
   {3718}
3719  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'identifier'}
   {3719}
3720  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '<='}
   {3720}
3721  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '>'}
   {3721}
3722  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'void'}
   {3722}
3723  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '/='}
   {3723}
3724  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '/'}
   {3724}
3725  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'while'}
   {3725}
3726  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '-'}
   {3726}
3727  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': ';'}
   {3727}
3728  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '=='}
   {3728}
3729  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '<'}
   {3729}
3730  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'break'}
   {3730}
3731  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '='}
   {3731}
3732  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '}'}
   {3732}
3733  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '+='}
   {3733}
3734  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '+'}
   {3734}
3735  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '*='}
   {3735}
3736  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '{'}
   {3736}
3737  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'continue'}
   {3737}
3738  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': '>='}
   {3738}
3739  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': ')'}
   {3739}
3740  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'float'}
   {3740}
3741  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'double'}
   {3741}
3742  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'char'}
   {3742}
3743  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 44, 'isTer': True, 'accept': 'number'}
   {3743}
3744  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'return'}
   {3744}
3745  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'for'}
   {3745}
3746  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '!='}
   {3746}
3747  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': ','}
   {3747}
3748  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '#'}
   {3748}
3749  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'int'}
   {3749}
3750  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'if'}
   {3750}
3751  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '('}
   {3751}
3752  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'else'}
   {3752}
3753  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '*'}
   {3753}
3754  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '-='}
   {3754}
3755  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'identifier'}
   {3755}
3756  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '<='}
   {3756}
3757  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '>'}
   {3757}
3758  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'void'}
   {3758}
3759  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '/='}
   {3759}
3760  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '/'}
   {3760}
3761  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'while'}
   {3761}
3762  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '-'}
   {3762}
3763  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': ';'}
   {3763}
3764  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '=='}
   {3764}
3765  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '<'}
   {3765}
3766  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'break'}
   {3766}
3767  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '='}
   {3767}
3768  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '}'}
   {3768}
3769  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '+='}
   {3769}
3770  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '+'}
   {3770}
3771  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '*='}
   {3771}
3772  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '{'}
   {3772}
3773  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'continue'}
   {3773}
3774  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': '>='}
   {3774}
3775  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': ')'}
   {3775}
3776  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'float'}
   {3776}
3777  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'double'}
   {3777}
3778  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'char'}
   {3778}
3779  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'number'}
   {3779}
3780  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'return'}
   {3780}
3781  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'for'}
   {3781}
3782  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '!='}
   {3782}
3783  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': ','}
   {3783}
3784  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '#'}
   {3784}
3785  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'int'}
   {3785}
3786  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'if'}
   {3786}
3787  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '('}
   {3787}
3788  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'else'}
   {3788}
3789  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '*'}
   {3789}
3790  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '-='}
   {3790}
3791  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'identifier'}
   {3791}
3792  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '<='}
   {3792}
3793  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '>'}
   {3793}
3794  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'void'}
   {3794}
3795  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '/='}
   {3795}
3796  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '/'}
   {3796}
3797  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'while'}
   {3797}
3798  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '-'}
   {3798}
3799  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': ';'}
   {3799}
3800  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '=='}
   {3800}
3801  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '<'}
   {3801}
3802  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'break'}
   {3802}
3803  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '='}
   {3803}
3804  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '}'}
   {3804}
3805  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '+='}
   {3805}
3806  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '+'}
   {3806}
3807  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '*='}
   {3807}
3808  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '{'}
   {3808}
3809  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'continue'}
   {3809}
3810  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': '>='}
   {3810}
3811  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': ')'}
   {3811}
3812  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'float'}
   {3812}
3813  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'double'}
   {3813}
3814  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'char'}
   {3814}
3815  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 45, 'isTer': False, 'accept': 'number'}
   {3815}
3816  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'return'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3816, 3315}
3817  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'for'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3817, 3315}
3818  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '!='}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3818, 3315}
3819  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': ','}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3819, 3315}
3820  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '#'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3820, 3315}
3821  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'int'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3821, 3315}
3822  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'if'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3822, 3315}
3823  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '('}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3823, 3315}
3824  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'else'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3824, 3315}
3825  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '*'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3825, 3315}
3826  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '-='}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3826, 3315}
3827  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'identifier'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3827, 3315}
3828  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '<='}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3828}
3829  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '>'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3829}
3830  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'void'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3830}
3831  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '/='}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3831}
3832  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '/'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3832}
3833  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'while'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3833}
3834  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '-'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3834}
3835  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': ';'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3835}
3836  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '=='}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3836}
3837  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '<'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3837}
3838  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'break'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3838}
3839  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '='}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 1407, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315, 3839}
3840  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '}'}
   {3840, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3841  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '+='}
   {3841, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3842  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '+'}
   {3842, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3843  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '*='}
   {3843, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3844  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '{'}
   {3844, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3845  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'continue'}
   {3845, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3846  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': '>='}
   {3846, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3847  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': ')'}
   {3847, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3848  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'float'}
   {3848, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3849  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'double'}
   {3849, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3850  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'char'}
   {3850, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3851  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 45, 'isTer': False, 'accept': 'number'}
   {3851, 3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 4243, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3852  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'return'}
   {3852}
3853  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'for'}
   {3853}
3854  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '!='}
   {3854}
3855  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': ','}
   {3855}
3856  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '#'}
   {3856}
3857  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'int'}
   {3857}
3858  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'if'}
   {3858}
3859  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '('}
   {3859}
3860  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'else'}
   {3860}
3861  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '*'}
   {3861}
3862  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '-='}
   {3862}
3863  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'identifier'}
   {3863}
3864  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '<='}
   {3864}
3865  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '>'}
   {3865}
3866  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'void'}
   {3866}
3867  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '/='}
   {3867}
3868  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '/'}
   {3868}
3869  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'while'}
   {3869}
3870  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '-'}
   {3870}
3871  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': ';'}
   {3871}
3872  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '=='}
   {3872}
3873  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '<'}
   {3873}
3874  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'break'}
   {3874}
3875  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '='}
   {3875}
3876  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '}'}
   {3876}
3877  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '+='}
   {3877}
3878  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '+'}
   {3878}
3879  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '*='}
   {3879}
3880  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '{'}
   {3880}
3881  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'continue'}
   {3881}
3882  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': '>='}
   {3882}
3883  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': ')'}
   {3883}
3884  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'float'}
   {3884}
3885  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'double'}
   {3885}
3886  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'char'}
   {3886}
3887  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 45, 'isTer': False, 'accept': 'number'}
   {3887}
3888  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'return'}
   {3888}
3889  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'for'}
   {3889}
3890  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '!='}
   {3890}
3891  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': ','}
   {3891}
3892  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '#'}
   {3892}
3893  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'int'}
   {3893}
3894  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'if'}
   {3894}
3895  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '('}
   {3895}
3896  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'else'}
   {3896}
3897  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '*'}
   {3897}
3898  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '-='}
   {3898}
3899  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'identifier'}
   {3899}
3900  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '<='}
   {3900}
3901  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '>'}
   {3901}
3902  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'void'}
   {3902}
3903  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '/='}
   {3903}
3904  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '/'}
   {3904}
3905  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'while'}
   {3905}
3906  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '-'}
   {3906}
3907  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': ';'}
   {3907}
3908  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '=='}
   {3908}
3909  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '<'}
   {3909}
3910  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'break'}
   {3910}
3911  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '='}
   {3911}
3912  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '}'}
   {3912}
3913  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '+='}
   {3913}
3914  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '+'}
   {3914}
3915  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '*='}
   {3915}
3916  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '{'}
   {3916}
3917  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'continue'}
   {3917}
3918  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': '>='}
   {3918}
3919  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': ')'}
   {3919}
3920  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'float'}
   {3920}
3921  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'double'}
   {3921}
3922  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'char'}
   {3922}
3923  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 45, 'isTer': True, 'accept': 'number'}
   {3923}
3924  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'return'}
   {3924}
3925  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'for'}
   {3925}
3926  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '!='}
   {3926}
3927  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': ','}
   {3927}
3928  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '#'}
   {3928}
3929  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'int'}
   {3929}
3930  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'if'}
   {3930}
3931  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '('}
   {3931}
3932  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'else'}
   {3932}
3933  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '*'}
   {3933}
3934  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '-='}
   {3934}
3935  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'identifier'}
   {3935}
3936  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '<='}
   {3936}
3937  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '>'}
   {3937}
3938  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'void'}
   {3938}
3939  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '/='}
   {3939}
3940  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '/'}
   {3940}
3941  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'while'}
   {3941}
3942  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '-'}
   {3942}
3943  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': ';'}
   {3943}
3944  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '=='}
   {3944}
3945  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '<'}
   {3945}
3946  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'break'}
   {3946}
3947  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '='}
   {3947}
3948  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '}'}
   {3948}
3949  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '+='}
   {3949}
3950  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '+'}
   {3950}
3951  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '*='}
   {3951}
3952  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '{'}
   {3952}
3953  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'continue'}
   {3953}
3954  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '>='}
   {3954}
3955  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': ')'}
   {3955}
3956  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'float'}
   {3956}
3957  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'double'}
   {3957}
3958  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'char'}
   {3958}
3959  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'number'}
   {3959}
3960  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'return'}
   {1332, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3168, 3171, 3960, 1404, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3744, 3747, 3240, 3243, 1476, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3312, 3315}
3961  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'for'}
   {1333, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3169, 3171, 3961, 1405, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3745, 3747, 3241, 3243, 1477, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3313, 3315}
3962  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '!='}
   {1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3170, 3171, 3962, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3746, 3747, 3242, 3243, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3314, 3315}
3963  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': ','}
   {1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3963, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3964  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '#'}
   {1334, 1335, 1336, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3172, 3964, 1406, 1407, 1408, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3748, 3243, 3244, 1478, 1479, 1480, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3316}
3965  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'int'}
   {1334, 1335, 1337, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3173, 3965, 1406, 1407, 1409, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3749, 3243, 3245, 1478, 1479, 1481, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3317}
3966  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'if'}
   {1334, 1335, 1338, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3174, 1406, 3966, 1407, 1410, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3750, 3243, 3246, 1478, 1479, 1482, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3318}
3967  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '('}
   {1334, 1335, 1339, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3175, 1406, 1407, 3967, 1411, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3751, 3243, 3247, 1478, 1479, 1483, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3319}
3968  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'else'}
   {1334, 1335, 1340, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3176, 1406, 1407, 3968, 1412, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3752, 3243, 3248, 1478, 1479, 1484, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3320}
3969  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '*'}
   {1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3177, 1406, 1407, 3969, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3753, 3243, 3249, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3321}
3970  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '-='}
   {1334, 1335, 1341, 1342, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3178, 1406, 1407, 3970, 1413, 1414, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3754, 3243, 3250, 1478, 1479, 1485, 1486, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3322}
3971  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'identifier'}
   {1334, 1335, 1341, 1343, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3179, 1406, 1407, 3971, 1413, 1415, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3755, 3251, 1478, 1479, 1485, 1487, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3323}
3972  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '<='}
   {1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3180, 1406, 1407, 3972, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3756, 3252, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3324}
3973  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '>'}
   {1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3181, 1406, 1407, 3973, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3757, 3253, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3325}
3974  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'void'}
   {1334, 1335, 1341, 1344, 1345, 1346, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3182, 1406, 1407, 1413, 3974, 1416, 1417, 1418, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3758, 3254, 1478, 1479, 1485, 1488, 1489, 1490, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3326}
3975  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '/='}
   {1334, 1335, 1341, 1344, 1345, 1347, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3183, 1406, 1407, 1413, 3975, 1416, 1417, 1419, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3759, 3255, 1478, 1479, 1485, 1488, 1489, 1491, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3327}
3976  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '/'}
   {3328, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3184, 1406, 1407, 1413, 3976, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3760, 3256, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3977  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'while'}
   {3329, 1334, 1335, 1341, 1344, 1345, 1348, 1349, 1350, 1352, 1353, 1358, 1362, 3171, 3185, 1406, 1407, 1413, 1416, 3977, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3761, 3257, 1478, 1479, 1485, 1488, 1489, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 3315}
3978  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '-'}
   {3330, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3186, 1406, 1407, 1413, 1416, 1417, 3978, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3762, 3258, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3979  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': ';'}
   {3331, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3171, 3187, 1406, 1407, 1413, 1416, 1417, 3979, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3747, 3243, 3763, 3259, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506, 3315}
3980  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '=='}
   {3332, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3188, 1406, 1407, 1413, 1416, 1417, 3980, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3764, 3260, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3981  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '<'}
   {3333, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3189, 1406, 1407, 1413, 1416, 1417, 1420, 3981, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3765, 3261, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3982  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'break'}
   {3334, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1354, 1358, 1362, 3171, 3190, 1406, 1407, 1413, 1416, 1417, 1420, 3982, 1422, 1424, 1425, 1426, 1430, 1434, 3747, 3243, 3766, 3262, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1498, 1502, 1506, 3315}
3983  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '='}
   {3335, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1355, 1358, 1362, 3171, 3191, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 3983, 1424, 1425, 1427, 1430, 1434, 3747, 3243, 3767, 3263, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1499, 1502, 1506, 3315}
3984  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '}'}
   {3336, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1356, 1358, 1362, 3171, 3192, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 3984, 1424, 1425, 1428, 1430, 1434, 3747, 3243, 3768, 3264, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1500, 1502, 1506, 3315}
3985  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '+='}
   {3337, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1357, 1358, 1362, 3171, 3193, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 3985, 1425, 1429, 1430, 1434, 3747, 3243, 3769, 3265, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1501, 1502, 1506, 3315}
3986  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '+'}
   {3338, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3194, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3986, 1430, 1434, 3747, 3243, 3770, 3266, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3987  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '*='}
   {3339, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1359, 1362, 3171, 3195, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3987, 1430, 1431, 1434, 3747, 3243, 3771, 3267, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1503, 1506, 3315}
3988  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '{'}
   {3340, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1360, 1362, 3171, 3196, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3988, 1430, 1432, 1434, 3747, 3243, 3772, 3268, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1504, 1506, 3315}
3989  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'continue'}
   {3341, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1361, 1362, 3171, 3197, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3989, 1430, 1433, 1434, 3747, 3243, 3773, 3269, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1505, 1506, 3315}
3990  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': '>='}
   {3342, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 1406, 1407, 3198, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 3990, 1430, 1434, 3747, 3243, 3774, 3270, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
3991  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': ')'}
   {3343, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 1407, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 3991, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
3992  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'float'}
   {3344, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1364, 3171, 1406, 1407, 3200, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 3992, 1434, 1436, 3747, 3243, 3776, 1478, 1479, 3272, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1508, 3315}
3993  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'double'}
   {3345, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1365, 3171, 1406, 1407, 3201, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 3993, 1434, 1437, 3747, 3243, 3777, 1478, 1479, 3273, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1509, 3315}
3994  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'char'}
   {3346, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1366, 3171, 1406, 1407, 3202, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 3994, 1434, 1438, 3747, 3243, 3778, 1478, 1479, 3274, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1510, 3315}
3995  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'number'}
   {3347, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1367, 3171, 1406, 1407, 3203, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3995, 1439, 3747, 3243, 3779, 1478, 1479, 3275, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1511, 3315}
3996  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'return'}
   {4068, 3996, 3924}
3997  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'for'}
   {4069, 3925, 3997}
3998  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '!='}
   {3926, 4070, 3998}
3999  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': ','}
   {4071, 3927, 3999}
4000  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '#'}
   {4000, 3928, 4072}
4001  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'int'}
   {3929, 4001, 4073}
4002  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'if'}
   {4002, 3930, 4074}
4003  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '('}
   {3931, 4003, 4075}
4004  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'else'}
   {4076, 4004, 3932}
4005  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '*'}
   {4077, 3933, 4005}
4006  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '-='}
   {3934, 4078, 4006}
4007  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'identifier'}
   {4079, 3935, 4007}
4008  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '<='}
   {4008, 3936, 4080}
4009  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '>'}
   {4009, 4081, 3937}
4010  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'void'}
   {4010, 3938, 4082}
4011  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '/='}
   {3939, 4011, 4083}
4012  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '/'}
   {3940, 4084, 4012}
4013  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'while'}
   {4085, 3941, 4013}
4014  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '-'}
   {3942, 4086, 4014}
4015  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': ';'}
   {4087, 3943, 4015}
4016  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '=='}
   {4016, 3944, 4088}
4017  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '<'}
   {4017, 4089, 3945}
4018  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'break'}
   {4018, 3946, 4090}
4019  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '='}
   {3947, 4019, 4091}
4020  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '}'}
   {4092, 4020, 3948}
4021  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '+='}
   {4093, 3949, 4021}
4022  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '+'}
   {4094, 4022, 3950}
4023  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '*='}
   {4095, 3951, 4023}
4024  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '{'}
   {4024, 4096, 3952}
4025  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'continue'}
   {4025, 4097, 3953}
4026  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': '>='}
   {4026, 4098, 3954}
4027  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': ')'}
   {4099, 3955, 4027}
4028  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'float'}
   {3956, 4028, 4100}
4029  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'double'}
   {4101, 3957, 4029}
4030  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'char'}
   {3958, 4030, 4102}
4031  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 46, 'isTer': False, 'accept': 'number'}
   {4103, 3959, 4031}
4032  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'return'}
   {4032}
4033  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'for'}
   {4033}
4034  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '!='}
   {4034}
4035  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': ','}
   {4035}
4036  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '#'}
   {4036}
4037  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'int'}
   {4037}
4038  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'if'}
   {4038}
4039  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '('}
   {4039}
4040  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'else'}
   {4040}
4041  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '*'}
   {4041}
4042  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '-='}
   {4042}
4043  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'identifier'}
   {4043}
4044  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '<='}
   {4044}
4045  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '>'}
   {4045}
4046  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'void'}
   {4046}
4047  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '/='}
   {4047}
4048  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '/'}
   {4048}
4049  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'while'}
   {4049}
4050  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '-'}
   {4050}
4051  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': ';'}
   {4051}
4052  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '=='}
   {4052}
4053  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '<'}
   {4053}
4054  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'break'}
   {4054}
4055  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '='}
   {4055}
4056  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '}'}
   {4056}
4057  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '+='}
   {4057}
4058  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '+'}
   {4058}
4059  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '*='}
   {4059}
4060  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '{'}
   {4060}
4061  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'continue'}
   {4061}
4062  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': '>='}
   {4062}
4063  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': ')'}
   {4063}
4064  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'float'}
   {4064}
4065  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'double'}
   {4065}
4066  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'char'}
   {4066}
4067  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 46, 'isTer': True, 'accept': 'number'}
   {4067}
4068  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'return'}
   {4068}
4069  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'for'}
   {4069}
4070  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '!='}
   {4070}
4071  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': ','}
   {4071}
4072  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '#'}
   {4072}
4073  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'int'}
   {4073}
4074  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'if'}
   {4074}
4075  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '('}
   {4075}
4076  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'else'}
   {4076}
4077  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '*'}
   {4077}
4078  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '-='}
   {4078}
4079  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'identifier'}
   {4079}
4080  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '<='}
   {4080}
4081  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '>'}
   {4081}
4082  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'void'}
   {4082}
4083  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '/='}
   {4083}
4084  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '/'}
   {4084}
4085  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'while'}
   {4085}
4086  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '-'}
   {4086}
4087  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': ';'}
   {4087}
4088  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '=='}
   {4088}
4089  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '<'}
   {4089}
4090  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'break'}
   {4090}
4091  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '='}
   {4091}
4092  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '}'}
   {4092}
4093  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '+='}
   {4093}
4094  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '+'}
   {4094}
4095  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '*='}
   {4095}
4096  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '{'}
   {4096}
4097  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'continue'}
   {4097}
4098  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': '>='}
   {4098}
4099  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': ')'}
   {4099}
4100  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'float'}
   {4100}
4101  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'double'}
   {4101}
4102  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'char'}
   {4102}
4103  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 47, 'isTer': True, 'accept': 'number'}
   {4103}
4104  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'return'}
   {4104, 1332, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3168, 3171, 1404, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3744, 3747, 3240, 3243, 1476, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3312, 3315}
4105  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'for'}
   {4105, 1333, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3169, 3171, 1405, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3745, 3747, 3241, 3243, 1477, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3313, 3315}
4106  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '!='}
   {4106, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3170, 3171, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3746, 3747, 3242, 3243, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3314, 3315}
4107  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': ','}
   {4107, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4108  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '#'}
   {4108, 1334, 1335, 1336, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3172, 1406, 1407, 1408, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3748, 3243, 3244, 1478, 1479, 1480, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3316}
4109  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'int'}
   {4109, 1334, 1335, 1337, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3173, 1406, 1407, 1409, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3749, 3243, 3245, 1478, 1479, 1481, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3317}
4110  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'if'}
   {4110, 1334, 1335, 1338, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3174, 1406, 1407, 1410, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3750, 3243, 3246, 1478, 1479, 1482, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3318}
4111  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '('}
   {4111, 1334, 1335, 1339, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3175, 1406, 1407, 1411, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3751, 3243, 3247, 1478, 1479, 1483, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3319}
4112  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'else'}
   {4112, 1334, 1335, 1340, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3176, 1406, 1407, 1412, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3752, 3243, 3248, 1478, 1479, 1484, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3320}
4113  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '*'}
   {4113, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3177, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3753, 3243, 3249, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3321}
4114  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '-='}
   {4114, 1334, 1335, 1341, 1342, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3178, 1406, 1407, 1413, 1414, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3754, 3243, 3250, 1478, 1479, 1485, 1486, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3322}
4115  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'identifier'}
   {4115, 1334, 1335, 1341, 1343, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3179, 1406, 1407, 1413, 1415, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3755, 3251, 1478, 1479, 1485, 1487, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3323}
4116  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '<='}
   {4116, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3180, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3756, 3252, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3324}
4117  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '>'}
   {4117, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3181, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3757, 3253, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3325}
4118  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'void'}
   {4118, 1334, 1335, 1341, 1344, 1345, 1346, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3182, 1406, 1407, 1413, 1416, 1417, 1418, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3758, 3254, 1478, 1479, 1485, 1488, 1489, 1490, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3326}
4119  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '/='}
   {4119, 1334, 1335, 1341, 1344, 1345, 1347, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3183, 1406, 1407, 1413, 1416, 1417, 1419, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3759, 3255, 1478, 1479, 1485, 1488, 1489, 1491, 1492, 1494, 1496, 1497, 1502, 1506, 3315, 3327}
4120  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '/'}
   {3328, 4120, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3184, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3760, 3256, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4121  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'while'}
   {3329, 4121, 1334, 1335, 1341, 1344, 1345, 1348, 1349, 1350, 1352, 1353, 1358, 1362, 3171, 3185, 1406, 1407, 1413, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3761, 3257, 1478, 1479, 1485, 1488, 1489, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 3315}
4122  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '-'}
   {3330, 4122, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3186, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3762, 3258, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4123  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': ';'}
   {3331, 4123, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3171, 3187, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3747, 3243, 3763, 3259, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506, 3315}
4124  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '=='}
   {3332, 4124, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3188, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3764, 3260, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4125  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '<'}
   {3333, 4125, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3189, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3765, 3261, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4126  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'break'}
   {3334, 4126, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1354, 1358, 1362, 3171, 3190, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1426, 1430, 1434, 3747, 3243, 3766, 3262, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1498, 1502, 1506, 3315}
4127  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '='}
   {3335, 4127, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1355, 1358, 1362, 3171, 3191, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1427, 1430, 1434, 3747, 3243, 3767, 3263, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1499, 1502, 1506, 3315}
4128  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '}'}
   {3336, 4128, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1356, 1358, 1362, 3171, 3192, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1428, 1430, 1434, 3747, 3243, 3768, 3264, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1500, 1502, 1506, 3315}
4129  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '+='}
   {3337, 4129, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1357, 1358, 1362, 3171, 3193, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1429, 1430, 1434, 3747, 3243, 3769, 3265, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1501, 1502, 1506, 3315}
4130  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '+'}
   {3338, 4130, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 3194, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3770, 3266, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4131  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '*='}
   {3339, 4131, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1359, 1362, 3171, 3195, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1431, 1434, 3747, 3243, 3771, 3267, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1503, 1506, 3315}
4132  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '{'}
   {3340, 4132, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1360, 1362, 3171, 3196, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1432, 1434, 3747, 3243, 3772, 3268, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1504, 1506, 3315}
4133  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'continue'}
   {3341, 4133, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1361, 1362, 3171, 3197, 1406, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1433, 1434, 3747, 3243, 3773, 3269, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1505, 1506, 3315}
4134  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '>='}
   {3342, 4134, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 3171, 1406, 1407, 3198, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 3747, 3243, 3774, 3270, 1478, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 3315}
4135  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': ')'}
   {3343, 4135, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 3171, 1406, 3199, 1407, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3747, 3243, 3775, 1478, 3271, 1479, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507, 3315}
4136  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'float'}
   {3344, 4136, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1364, 3171, 1406, 1407, 3200, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1436, 3747, 3243, 3776, 1478, 1479, 3272, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1508, 3315}
4137  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'double'}
   {3345, 4137, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1365, 3171, 1406, 1407, 3201, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1437, 3747, 3243, 3777, 1478, 1479, 3273, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1509, 3315}
4138  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'char'}
   {3346, 4138, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1366, 3171, 1406, 1407, 3202, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1438, 3747, 3243, 3778, 1478, 1479, 3274, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1510, 3315}
4139  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'number'}
   {3347, 4139, 1334, 1335, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1367, 3171, 1406, 1407, 3203, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1439, 3747, 3243, 3779, 1478, 1479, 3275, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1511, 3315}
4140  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'return'}
   {4068, 4140, 3924}
4141  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'for'}
   {4069, 3925, 4141}
4142  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '!='}
   {3926, 4070, 4142}
4143  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': ','}
   {4071, 3927, 4143}
4144  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '#'}
   {4144, 3928, 4072}
4145  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'int'}
   {3929, 4145, 4073}
4146  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'if'}
   {4146, 3930, 4074}
4147  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '('}
   {3931, 4147, 4075}
4148  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'else'}
   {4076, 4148, 3932}
4149  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '*'}
   {4077, 3933, 4149}
4150  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '-='}
   {3934, 4078, 4150}
4151  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'identifier'}
   {4079, 3935, 4151}
4152  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '<='}
   {4152, 3936, 4080}
4153  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '>'}
   {4153, 4081, 3937}
4154  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'void'}
   {4154, 3938, 4082}
4155  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '/='}
   {3939, 4155, 4083}
4156  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '/'}
   {3940, 4084, 4156}
4157  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'while'}
   {4085, 3941, 4157}
4158  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '-'}
   {3942, 4086, 4158}
4159  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': ';'}
   {4087, 3943, 4159}
4160  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '=='}
   {4160, 3944, 4088}
4161  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '<'}
   {4161, 4089, 3945}
4162  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'break'}
   {4162, 3946, 4090}
4163  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '='}
   {3947, 4163, 4091}
4164  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '}'}
   {4092, 4164, 3948}
4165  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '+='}
   {4093, 3949, 4165}
4166  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '+'}
   {4094, 4166, 3950}
4167  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '*='}
   {4095, 3951, 4167}
4168  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '{'}
   {4168, 4096, 3952}
4169  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'continue'}
   {4169, 4097, 3953}
4170  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '>='}
   {4170, 4098, 3954}
4171  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': ')'}
   {4099, 3955, 4171}
4172  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'float'}
   {3956, 4172, 4100}
4173  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'double'}
   {4101, 3957, 4173}
4174  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'char'}
   {3958, 4174, 4102}
4175  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'number'}
   {4103, 3959, 4175}
4176  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'return'}
   {4176}
4177  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'for'}
   {4177}
4178  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '!='}
   {4178}
4179  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': ','}
   {4179}
4180  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '#'}
   {4180}
4181  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'int'}
   {4181}
4182  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'if'}
   {4182}
4183  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '('}
   {4183}
4184  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'else'}
   {4184}
4185  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '*'}
   {4185}
4186  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '-='}
   {4186}
4187  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'identifier'}
   {4187}
4188  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '<='}
   {4188}
4189  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '>'}
   {4189}
4190  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'void'}
   {4190}
4191  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '/='}
   {4191}
4192  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '/'}
   {4192}
4193  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'while'}
   {4193}
4194  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '-'}
   {4194}
4195  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': ';'}
   {4195}
4196  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '=='}
   {4196}
4197  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '<'}
   {4197}
4198  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'break'}
   {4198}
4199  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '='}
   {4199}
4200  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '}'}
   {4200}
4201  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '+='}
   {4201}
4202  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '+'}
   {4202}
4203  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '*='}
   {4203}
4204  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '{'}
   {4204}
4205  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'continue'}
   {4205}
4206  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '>='}
   {4206}
4207  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': ')'}
   {4207}
4208  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'float'}
   {4208}
4209  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'double'}
   {4209}
4210  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'char'}
   {4210}
4211  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'number'}
   {4211}
4212  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'return'}
   {4212}
4213  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'for'}
   {4213}
4214  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '!='}
   {4214}
4215  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': ','}
   {4215}
4216  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '#'}
   {4216}
4217  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'int'}
   {4217}
4218  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'if'}
   {4218}
4219  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '('}
   {4219}
4220  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'else'}
   {4220}
4221  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '*'}
   {4221}
4222  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '-='}
   {4222}
4223  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'identifier'}
   {4223}
4224  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '<='}
   {4224}
4225  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '>'}
   {4225}
4226  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'void'}
   {4226}
4227  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '/='}
   {4227}
4228  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '/'}
   {4228}
4229  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'while'}
   {4229}
4230  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '-'}
   {4230}
4231  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': ';'}
   {4231}
4232  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '=='}
   {4232}
4233  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '<'}
   {4233}
4234  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'break'}
   {4234}
4235  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '='}
   {4235}
4236  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '}'}
   {4236}
4237  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '+='}
   {4237}
4238  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '+'}
   {4238}
4239  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '*='}
   {4239}
4240  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '{'}
   {4240}
4241  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'continue'}
   {4241}
4242  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': '>='}
   {4242}
4243  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': ')'}
   {4243}
4244  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'float'}
   {4244}
4245  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'double'}
   {4245}
4246  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'char'}
   {4246}
4247  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 49, 'isTer': True, 'accept': 'number'}
   {4247}
4248  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'return'}
   {515, 587, 371, 659, 4248, 443}
4249  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'for'}
   {515, 587, 371, 659, 4249, 443}
4250  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '!='}
   {515, 587, 371, 659, 4250, 443}
4251  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': ','}
   {515, 587, 4251, 371, 659, 443}
4252  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '#'}
   {515, 587, 371, 659, 443, 4252}
4253  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'int'}
   {515, 587, 371, 659, 443, 4253}
4254  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'if'}
   {515, 659, 371, 443, 587, 4254}
4255  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '('}
   {515, 659, 371, 443, 587, 4255}
4256  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'else'}
   {4256, 515, 659, 371, 443, 587}
4257  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '*'}
   {4257, 515, 659, 371, 443, 587}
4258  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '-='}
   {4258, 515, 659, 371, 443, 587}
4259  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'identifier'}
   {515, 4259, 659, 371, 443, 587}
4260  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '<='}
   {515, 4260, 659, 371, 443, 587}
4261  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '>'}
   {515, 659, 4261, 371, 443, 587}
4262  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'void'}
   {515, 659, 371, 4262, 443, 587}
4263  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '/='}
   {515, 659, 371, 443, 4263, 587}
4264  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '/'}
   {515, 659, 371, 443, 4264, 587}
4265  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'while'}
   {515, 659, 371, 443, 4265, 587}
4266  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '-'}
   {515, 659, 371, 443, 4266, 587}
4267  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': ';'}
   {515, 659, 371, 443, 587, 4267}
4268  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '=='}
   {515, 659, 371, 443, 587, 4268}
4269  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '<'}
   {515, 659, 371, 443, 587, 4269}
4270  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'break'}
   {515, 659, 371, 443, 587, 4270}
4271  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '='}
   {515, 659, 371, 443, 587, 4271}
4272  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '}'}
   {4272, 515, 659, 371, 443, 587}
4273  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '+='}
   {4273, 515, 659, 371, 443, 587}
4274  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '+'}
   {4274, 515, 659, 371, 443, 587}
4275  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '*='}
   {515, 4275, 659, 371, 443, 587}
4276  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '{'}
   {515, 4276, 659, 371, 443, 587}
4277  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'continue'}
   {515, 659, 4277, 371, 443, 587}
4278  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': '>='}
   {515, 659, 371, 4278, 443, 587}
4279  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': ')'}
   {515, 659, 371, 443, 4279, 587}
4280  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'float'}
   {515, 659, 371, 443, 4280, 587}
4281  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'double'}
   {515, 659, 371, 443, 4281, 587}
4282  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'char'}
   {515, 659, 371, 443, 4282, 587}
4283  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'number'}
   {515, 659, 371, 443, 587, 4283}
4284  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'return'}
   {4284}
4285  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'for'}
   {4285}
4286  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '!='}
   {4286}
4287  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': ','}
   {4287}
4288  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '#'}
   {4288}
4289  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'int'}
   {4289}
4290  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'if'}
   {4290}
4291  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '('}
   {4291}
4292  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'else'}
   {4292}
4293  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '*'}
   {4293}
4294  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '-='}
   {4294}
4295  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'identifier'}
   {4295}
4296  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '<='}
   {4296}
4297  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '>'}
   {4297}
4298  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'void'}
   {4298}
4299  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '/='}
   {4299}
4300  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '/'}
   {4300}
4301  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'while'}
   {4301}
4302  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '-'}
   {4302}
4303  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': ';'}
   {4303}
4304  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '=='}
   {4304}
4305  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '<'}
   {4305}
4306  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'break'}
   {4306}
4307  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '='}
   {4307}
4308  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '}'}
   {4308}
4309  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '+='}
   {4309}
4310  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '+'}
   {4310}
4311  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '*='}
   {4311}
4312  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '{'}
   {4312}
4313  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'continue'}
   {4313}
4314  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': '>='}
   {4314}
4315  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': ')'}
   {4315}
4316  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'float'}
   {4316}
4317  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'double'}
   {4317}
4318  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'char'}
   {4318}
4319  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 50, 'isTer': False, 'accept': 'number'}
   {4319}
4320  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'return'}
   {4320}
4321  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'for'}
   {4321}
4322  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '!='}
   {4322}
4323  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': ','}
   {4323}
4324  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '#'}
   {4324}
4325  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'int'}
   {4325}
4326  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'if'}
   {4326}
4327  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '('}
   {4327}
4328  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'else'}
   {4328}
4329  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '*'}
   {4329}
4330  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '-='}
   {4330}
4331  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'identifier'}
   {4331}
4332  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '<='}
   {4332}
4333  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '>'}
   {4333}
4334  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'void'}
   {4334}
4335  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '/='}
   {4335}
4336  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '/'}
   {4336}
4337  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'while'}
   {4337}
4338  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '-'}
   {4338}
4339  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': ';'}
   {4339}
4340  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '=='}
   {4340}
4341  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '<'}
   {4341}
4342  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'break'}
   {4342}
4343  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '='}
   {4343}
4344  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '}'}
   {4344}
4345  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '+='}
   {4345}
4346  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '+'}
   {4346}
4347  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '*='}
   {4347}
4348  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '{'}
   {4348}
4349  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'continue'}
   {4349}
4350  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': '>='}
   {4350}
4351  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': ')'}
   {4351}
4352  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'float'}
   {4352}
4353  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'double'}
   {4353}
4354  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'char'}
   {4354}
4355  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 50, 'isTer': False, 'accept': 'number'}
   {4355}
4356  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'return'}
   {4675, 4356, 515, 4999, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4357  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'for'}
   {4675, 515, 4357, 4999, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4358  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '!='}
   {4675, 515, 4358, 4999, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4359  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': ','}
   {4675, 515, 4999, 4359, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4360  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '#'}
   {4675, 515, 4999, 4360, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4361  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'int'}
   {4675, 515, 4999, 4361, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4362  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'if'}
   {4675, 515, 4999, 4362, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4363  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '('}
   {4675, 515, 4999, 4363, 587, 659, 4639, 4971, 4531, 371, 4982, 443}
4364  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'else'}
   {4675, 515, 4999, 587, 4364, 659, 4639, 4971, 4531, 371, 4982, 443}
4365  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '*'}
   {4675, 515, 4999, 587, 4365, 659, 4639, 4971, 4531, 371, 4982, 443}
4366  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '-='}
   {4675, 515, 4999, 587, 4366, 659, 4639, 4971, 4531, 371, 4982, 443}
4367  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'identifier'}
   {4675, 515, 4999, 587, 4367, 659, 4639, 4971, 4531, 371, 4982, 443}
4368  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '<='}
   {4675, 515, 4999, 587, 4368, 659, 4639, 4971, 4531, 371, 4982, 443}
4369  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '>'}
   {4675, 515, 4999, 587, 4369, 659, 4639, 4971, 4531, 371, 4982, 443}
4370  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'void'}
   {4675, 515, 4999, 587, 4370, 659, 4639, 4971, 4531, 371, 4982, 443}
4371  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '/='}
   {4675, 515, 4999, 587, 4371, 659, 4639, 4971, 4531, 371, 4982, 443}
4372  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '/'}
   {4675, 515, 4999, 587, 659, 4372, 4639, 4971, 4531, 371, 4982, 443}
4373  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'while'}
   {4675, 515, 4999, 587, 659, 4373, 4639, 4971, 4531, 371, 4982, 443}
4374  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '-'}
   {4675, 515, 4999, 587, 659, 4374, 4639, 4971, 4531, 371, 4982, 443}
4375  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': ';'}
   {4675, 515, 4999, 587, 659, 4375, 4639, 4971, 4531, 371, 4982, 443}
4376  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '=='}
   {4675, 515, 4999, 587, 659, 4376, 4639, 4971, 4531, 371, 4982, 443}
4377  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '<'}
   {4675, 515, 4999, 587, 659, 4377, 4639, 4971, 4531, 371, 4982, 443}
4378  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'break'}
   {4675, 515, 4999, 587, 659, 4378, 4639, 4971, 4531, 371, 4982, 443}
4379  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '='}
   {4675, 515, 4999, 587, 659, 4379, 4639, 4971, 4531, 371, 4982, 443}
4380  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '}'}
   {4675, 515, 4999, 587, 659, 4380, 4639, 4971, 4531, 371, 4982, 443}
4381  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '+='}
   {4675, 515, 4999, 587, 659, 4381, 4639, 4971, 4531, 371, 4982, 443}
4382  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '+'}
   {4675, 515, 4999, 587, 659, 4382, 4639, 4971, 4531, 371, 4982, 443}
4383  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '*='}
   {4675, 515, 4999, 587, 659, 4383, 4639, 4971, 4531, 371, 4982, 443}
4384  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '{'}
   {4675, 515, 4999, 587, 659, 4639, 4384, 4971, 4531, 371, 4982, 443}
4385  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'continue'}
   {4675, 515, 4999, 587, 659, 4639, 4385, 4971, 4531, 371, 4982, 443}
4386  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': '>='}
   {4675, 515, 4999, 587, 659, 4639, 4386, 4971, 4531, 371, 4982, 443}
4387  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': ')'}
   {4675, 515, 4999, 587, 659, 4639, 4387, 4971, 4531, 371, 4982, 443}
4388  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'float'}
   {4675, 515, 4999, 587, 659, 4639, 4388, 4971, 4531, 371, 4982, 443}
4389  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'double'}
   {4675, 515, 4999, 587, 659, 4639, 4389, 4971, 4531, 371, 4982, 443}
4390  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'char'}
   {4675, 515, 4999, 587, 659, 4639, 4390, 4971, 4531, 371, 4982, 443}
4391  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 50, 'isTer': False, 'accept': 'number'}
   {4675, 515, 4999, 587, 659, 4639, 4391, 4971, 4531, 371, 4982, 443}
4392  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'return'}
   {4392}
4393  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'for'}
   {4393}
4394  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '!='}
   {4394}
4395  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': ','}
   {4395}
4396  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '#'}
   {4396}
4397  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'int'}
   {4397}
4398  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'if'}
   {4398}
4399  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '('}
   {4399}
4400  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'else'}
   {4400}
4401  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '*'}
   {4401}
4402  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '-='}
   {4402}
4403  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'identifier'}
   {4403}
4404  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '<='}
   {4404}
4405  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '>'}
   {4405}
4406  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'void'}
   {4406}
4407  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '/='}
   {4407}
4408  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '/'}
   {4408}
4409  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'while'}
   {4409}
4410  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '-'}
   {4410}
4411  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': ';'}
   {4411}
4412  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '=='}
   {4412}
4413  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '<'}
   {4413}
4414  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'break'}
   {4414}
4415  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '='}
   {4415}
4416  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '}'}
   {4416}
4417  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '+='}
   {4417}
4418  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '+'}
   {4418}
4419  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '*='}
   {4419}
4420  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '{'}
   {4420}
4421  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'continue'}
   {4421}
4422  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': '>='}
   {4422}
4423  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': ')'}
   {4423}
4424  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'float'}
   {4424}
4425  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'double'}
   {4425}
4426  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'char'}
   {4426}
4427  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 50, 'isTer': False, 'accept': 'number'}
   {4427}
4428  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'return'}
   {5076, 4428}
4429  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'for'}
   {5077, 4429}
4430  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '!='}
   {5078, 4430}
4431  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': ','}
   {5079, 4431}
4432  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '#'}
   {4432, 5080}
4433  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'int'}
   {4433, 5081}
4434  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'if'}
   {5082, 4434}
4435  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '('}
   {4435, 5083}
4436  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'else'}
   {5084, 4436}
4437  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '*'}
   {5085, 4437}
4438  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '-='}
   {5086, 4438}
4439  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'identifier'}
   {5087, 4439}
4440  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '<='}
   {4440, 5088}
4441  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '>'}
   {4441, 5089}
4442  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'void'}
   {4442, 5090}
4443  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '/='}
   {4443, 5091}
4444  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '/'}
   {5092, 4444}
4445  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'while'}
   {5093, 4445}
4446  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '-'}
   {5094, 4446}
4447  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': ';'}
   {5095, 4447}
4448  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '=='}
   {4448, 5096}
4449  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '<'}
   {4449, 5097}
4450  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'break'}
   {4450, 5098}
4451  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '='}
   {4451, 5099}
4452  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '}'}
   {5100, 4452}
4453  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '+='}
   {5101, 4453}
4454  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '+'}
   {5102, 4454}
4455  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '*='}
   {5103, 4455}
4456  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '{'}
   {4456, 5104}
4457  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'continue'}
   {4457, 5105}
4458  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': '>='}
   {4458, 5106}
4459  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': ')'}
   {4459, 5107}
4460  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'float'}
   {5108, 4460}
4461  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'double'}
   {5109, 4461}
4462  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'char'}
   {5110, 4462}
4463  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 50, 'isTer': False, 'accept': 'number'}
   {5111, 4463}
4464  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'return'}
   {4464}
4465  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'for'}
   {4465}
4466  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '!='}
   {4466}
4467  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': ','}
   {4467}
4468  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '#'}
   {4468}
4469  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'int'}
   {4469}
4470  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'if'}
   {4470}
4471  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '('}
   {4471}
4472  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'else'}
   {4472}
4473  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '*'}
   {4473}
4474  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '-='}
   {4474}
4475  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'identifier'}
   {4475}
4476  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '<='}
   {4476}
4477  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '>'}
   {4477}
4478  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'void'}
   {4478}
4479  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '/='}
   {4479}
4480  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '/'}
   {4480}
4481  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'while'}
   {4481}
4482  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '-'}
   {4482}
4483  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': ';'}
   {4483}
4484  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '=='}
   {4484}
4485  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '<'}
   {4485}
4486  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'break'}
   {4486}
4487  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '='}
   {4487}
4488  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '}'}
   {4488}
4489  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '+='}
   {4489}
4490  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '+'}
   {4490}
4491  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '*='}
   {4491}
4492  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '{'}
   {4492}
4493  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'continue'}
   {4493}
4494  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': '>='}
   {4494}
4495  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': ')'}
   {4495}
4496  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'float'}
   {4496}
4497  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'double'}
   {4497}
4498  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'char'}
   {4498}
4499  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 50, 'isTer': True, 'accept': 'number'}
   {4499}
4500  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'return'}
   {515, 4968, 587, 4971, 659, 4500, 371, 4982, 443}
4501  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'for'}
   {515, 4969, 587, 4971, 659, 371, 4501, 4982, 443}
4502  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '!='}
   {515, 4970, 587, 4971, 659, 371, 4502, 4982, 443}
4503  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': ','}
   {515, 587, 4971, 659, 371, 4982, 4503, 443}
4504  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '#'}
   {515, 587, 4971, 4972, 659, 371, 4982, 4504, 443}
4505  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'int'}
   {515, 587, 4971, 4973, 659, 371, 4982, 4505, 443}
4506  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'if'}
   {515, 587, 4971, 4974, 659, 371, 4982, 4506, 443}
4507  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '('}
   {515, 587, 4971, 4975, 659, 371, 443, 4982, 4507}
4508  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'else'}
   {515, 587, 4971, 4976, 659, 371, 4982, 443, 4508}
4509  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '*'}
   {515, 587, 4971, 4977, 659, 371, 4982, 443, 4509}
4510  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '-='}
   {515, 587, 4971, 4978, 659, 371, 4982, 443, 4510}
4511  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'identifier'}
   {515, 587, 4971, 659, 371, 4979, 4982, 443, 4511}
4512  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '<='}
   {4512, 515, 587, 4971, 659, 371, 4980, 4982, 443}
4513  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '>'}
   {4513, 515, 587, 4971, 659, 371, 4981, 4982, 443}
4514  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'void'}
   {4514, 515, 587, 4971, 659, 371, 4982, 443}
4515  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '/='}
   {515, 4515, 587, 4971, 659, 371, 4982, 4983, 443}
4516  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '/'}
   {515, 4516, 587, 4971, 659, 371, 4982, 4984, 443}
4517  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'while'}
   {515, 4517, 587, 4971, 659, 371, 4982, 4985, 443}
4518  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '-'}
   {515, 4518, 587, 4971, 659, 371, 4982, 4986, 443}
4519  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': ';'}
   {515, 4987, 4519, 587, 4971, 659, 371, 4982, 443}
4520  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '=='}
   {515, 4520, 587, 4971, 659, 371, 4982, 443, 4988}
4521  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '<'}
   {515, 4521, 587, 4971, 659, 371, 4982, 443, 4989}
4522  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'break'}
   {515, 4522, 587, 4971, 659, 371, 4982, 443, 4990}
4523  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '='}
   {515, 587, 4523, 4971, 659, 371, 4982, 443, 4991}
4524  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '}'}
   {4992, 515, 587, 4524, 4971, 659, 371, 4982, 443}
4525  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '+='}
   {4993, 515, 587, 4971, 4525, 659, 371, 4982, 443}
4526  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '+'}
   {4994, 515, 587, 4971, 4526, 659, 371, 4982, 443}
4527  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '*='}
   {515, 4995, 587, 4971, 4527, 659, 371, 4982, 443}
4528  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '{'}
   {515, 4996, 587, 4971, 4528, 659, 371, 4982, 443}
4529  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'continue'}
   {515, 4997, 587, 4971, 4529, 659, 371, 4982, 443}
4530  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '>='}
   {515, 4998, 587, 4971, 4530, 659, 371, 4982, 443}
4531  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': ')'}
   {515, 4999, 4971, 587, 371, 659, 4531, 4982, 443}
4532  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'float'}
   {515, 5000, 587, 4971, 659, 4532, 371, 4982, 443}
4533  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'double'}
   {515, 5001, 587, 4971, 659, 371, 4533, 4982, 443}
4534  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'char'}
   {515, 5002, 587, 4971, 659, 371, 4534, 4982, 443}
4535  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'number'}
   {515, 587, 5003, 4971, 659, 371, 4982, 4535, 443}
4536  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'return'}
   {4536, 4860, 4896, 4716}
4537  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'for'}
   {4537, 4861, 4717, 4897}
4538  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '!='}
   {4538, 4862, 4898, 4718}
4539  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': ','}
   {4899, 4539, 4863, 4719}
4540  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '#'}
   {4720, 4864, 4540, 4900}
4541  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'int'}
   {4721, 4901, 4541, 4865}
4542  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'if'}
   {4902, 4722, 4866, 4542}
4543  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '('}
   {4867, 4723, 4903, 4543}
4544  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'else'}
   {4544, 4904, 4724, 4868}
4545  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '*'}
   {4545, 4869, 4725, 4905}
4546  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '-='}
   {4546, 4906, 4726, 4870}
4547  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'identifier'}
   {4907, 4547, 4871, 4727}
4548  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '<='}
   {4728, 4872, 4548, 4908}
4549  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '>'}
   {4729, 4909, 4549, 4873}
4550  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'void'}
   {4910, 4730, 4874, 4550}
4551  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '/='}
   {4875, 4731, 4911, 4551}
4552  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '/'}
   {4552, 4912, 4732, 4876}
4553  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'while'}
   {4553, 4877, 4733, 4913}
4554  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '-'}
   {4554, 4914, 4734, 4878}
4555  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': ';'}
   {4915, 4555, 4879, 4735}
4556  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '=='}
   {4736, 4880, 4556, 4916}
4557  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '<'}
   {4737, 4917, 4557, 4881}
4558  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'break'}
   {4918, 4738, 4882, 4558}
4559  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '='}
   {4883, 4739, 4919, 4559}
4560  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '}'}
   {4560, 4920, 4740, 4884}
4561  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '+='}
   {4561, 4885, 4741, 4921}
4562  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '+'}
   {4562, 4922, 4742, 4886}
4563  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '*='}
   {4923, 4563, 4887, 4743}
4564  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '{'}
   {4744, 4888, 4564, 4924}
4565  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'continue'}
   {4745, 4925, 4565, 4889}
4566  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '>='}
   {4926, 4746, 4890, 4566}
4567  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': ')'}
   {4891, 4747, 4927, 4567}
4568  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'float'}
   {4568, 4928, 4748, 4892}
4569  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'double'}
   {4929, 4569, 4893, 4749}
4570  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'char'}
   {4570, 4930, 4750, 4894}
4571  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'number'}
   {4931, 4571, 4895, 4751}
4572  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'return'}
   {4572}
4573  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'for'}
   {4573}
4574  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '!='}
   {4574}
4575  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': ','}
   {4575}
4576  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '#'}
   {4576}
4577  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'int'}
   {4577}
4578  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'if'}
   {4578}
4579  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '('}
   {4579}
4580  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'else'}
   {4580}
4581  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '*'}
   {4581}
4582  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '-='}
   {4582}
4583  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'identifier'}
   {4583}
4584  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '<='}
   {4584}
4585  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '>'}
   {4585}
4586  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'void'}
   {4586}
4587  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '/='}
   {4587}
4588  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '/'}
   {4588}
4589  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'while'}
   {4589}
4590  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '-'}
   {4590}
4591  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': ';'}
   {4591}
4592  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '=='}
   {4592}
4593  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '<'}
   {4593}
4594  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'break'}
   {4594}
4595  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '='}
   {4595}
4596  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '}'}
   {4596}
4597  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '+='}
   {4597}
4598  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '+'}
   {4598}
4599  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '*='}
   {4599}
4600  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '{'}
   {4600}
4601  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'continue'}
   {4601}
4602  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': '>='}
   {4602}
4603  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': ')'}
   {4603}
4604  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'float'}
   {4604}
4605  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'double'}
   {4605}
4606  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'char'}
   {4606}
4607  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 51, 'isTer': True, 'accept': 'number'}
   {4607}
4608  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'return'}
   {4608}
4609  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'for'}
   {4609}
4610  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '!='}
   {4610}
4611  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': ','}
   {4611}
4612  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '#'}
   {4612}
4613  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'int'}
   {4613}
4614  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'if'}
   {4614}
4615  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '('}
   {4615}
4616  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'else'}
   {4616}
4617  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '*'}
   {4617}
4618  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '-='}
   {4618}
4619  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'identifier'}
   {4619}
4620  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '<='}
   {4620}
4621  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '>'}
   {4621}
4622  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'void'}
   {4622}
4623  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '/='}
   {4623}
4624  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '/'}
   {4624}
4625  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'while'}
   {4625}
4626  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '-'}
   {4626}
4627  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': ';'}
   {4627}
4628  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '=='}
   {4628}
4629  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '<'}
   {4629}
4630  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'break'}
   {4630}
4631  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '='}
   {4631}
4632  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '}'}
   {4632}
4633  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '+='}
   {4633}
4634  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '+'}
   {4634}
4635  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '*='}
   {4635}
4636  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '{'}
   {4636}
4637  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'continue'}
   {4637}
4638  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': '>='}
   {4638}
4639  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': ')'}
   {4639}
4640  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'float'}
   {4640}
4641  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'double'}
   {4641}
4642  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'char'}
   {4642}
4643  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 52, 'isTer': True, 'accept': 'number'}
   {4643}
4644  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'return'}
   {4644}
4645  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'for'}
   {4645}
4646  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '!='}
   {4646}
4647  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': ','}
   {4647}
4648  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '#'}
   {4648}
4649  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'int'}
   {4649}
4650  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'if'}
   {4650}
4651  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '('}
   {4651}
4652  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'else'}
   {4652}
4653  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '*'}
   {4653}
4654  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '-='}
   {4654}
4655  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'identifier'}
   {4655}
4656  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '<='}
   {4656}
4657  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '>'}
   {4657}
4658  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'void'}
   {4658}
4659  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '/='}
   {4659}
4660  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '/'}
   {4660}
4661  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'while'}
   {4661}
4662  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '-'}
   {4662}
4663  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': ';'}
   {4663}
4664  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '=='}
   {4664}
4665  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '<'}
   {4665}
4666  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'break'}
   {4666}
4667  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '='}
   {4667}
4668  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '}'}
   {4668}
4669  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '+='}
   {4669}
4670  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '+'}
   {4670}
4671  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '*='}
   {4671}
4672  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '{'}
   {4672}
4673  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'continue'}
   {4673}
4674  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': '>='}
   {4674}
4675  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': ')'}
   {4675}
4676  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'float'}
   {4676}
4677  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'double'}
   {4677}
4678  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'char'}
   {4678}
4679  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'number'}
   {4679}
4680  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'return'}
   {4680}
4681  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'for'}
   {4681}
4682  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '!='}
   {4682}
4683  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': ','}
   {4683}
4684  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '#'}
   {4684}
4685  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'int'}
   {4685}
4686  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'if'}
   {4686}
4687  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '('}
   {4687}
4688  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'else'}
   {4688}
4689  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '*'}
   {4689}
4690  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '-='}
   {4690}
4691  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'identifier'}
   {4691}
4692  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '<='}
   {4692}
4693  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '>'}
   {4693}
4694  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'void'}
   {4694}
4695  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '/='}
   {4695}
4696  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '/'}
   {4696}
4697  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'while'}
   {4697}
4698  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '-'}
   {4698}
4699  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': ';'}
   {4699}
4700  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '=='}
   {4700}
4701  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '<'}
   {4701}
4702  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'break'}
   {4702}
4703  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '='}
   {4703}
4704  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '}'}
   {4704}
4705  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '+='}
   {4705}
4706  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '+'}
   {4706}
4707  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '*='}
   {4707}
4708  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '{'}
   {4708}
4709  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'continue'}
   {4709}
4710  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': '>='}
   {4710}
4711  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': ')'}
   {4711}
4712  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'float'}
   {4712}
4713  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'double'}
   {4713}
4714  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'char'}
   {4714}
4715  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'number'}
   {4715}
4716  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'return'}
   {4716}
4717  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'for'}
   {4717}
4718  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '!='}
   {4718}
4719  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': ','}
   {4719}
4720  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '#'}
   {4720}
4721  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'int'}
   {4721}
4722  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'if'}
   {4722}
4723  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '('}
   {4723}
4724  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'else'}
   {4724}
4725  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '*'}
   {4725}
4726  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '-='}
   {4726}
4727  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'identifier'}
   {4727}
4728  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '<='}
   {4728}
4729  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '>'}
   {4729}
4730  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'void'}
   {4730}
4731  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '/='}
   {4731}
4732  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '/'}
   {4732}
4733  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'while'}
   {4733}
4734  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '-'}
   {4734}
4735  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': ';'}
   {4735}
4736  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '=='}
   {4736}
4737  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '<'}
   {4737}
4738  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'break'}
   {4738}
4739  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '='}
   {4739}
4740  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '}'}
   {4740}
4741  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '+='}
   {4741}
4742  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '+'}
   {4742}
4743  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '*='}
   {4743}
4744  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '{'}
   {4744}
4745  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'continue'}
   {4745}
4746  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '>='}
   {4746}
4747  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': ')'}
   {4747}
4748  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'float'}
   {4748}
4749  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'double'}
   {4749}
4750  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'char'}
   {4750}
4751  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'number'}
   {4751}
4752  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'return'}
   {515, 4968, 587, 4971, 4752, 659, 371, 4982, 443}
4753  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'for'}
   {515, 4969, 587, 4971, 4753, 659, 371, 4982, 443}
4754  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '!='}
   {515, 4970, 587, 4971, 4754, 659, 371, 4982, 443}
4755  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': ','}
   {515, 587, 4971, 4755, 659, 371, 4982, 443}
4756  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '#'}
   {515, 587, 4971, 4972, 659, 4756, 371, 4982, 443}
4757  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'int'}
   {515, 587, 4971, 4973, 659, 371, 4757, 4982, 443}
4758  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'if'}
   {515, 587, 4971, 4974, 659, 371, 4758, 4982, 443}
4759  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '('}
   {515, 587, 4971, 4975, 659, 371, 4982, 4759, 443}
4760  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'else'}
   {515, 587, 4971, 4976, 659, 371, 4982, 4760, 443}
4761  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '*'}
   {515, 587, 4971, 4977, 659, 371, 4982, 4761, 443}
4762  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '-='}
   {515, 587, 4971, 4978, 659, 371, 4982, 4762, 443}
4763  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'identifier'}
   {515, 587, 4971, 659, 371, 443, 4979, 4982, 4763}
4764  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '<='}
   {515, 587, 4971, 659, 371, 4980, 4982, 443, 4764}
4765  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '>'}
   {515, 587, 4971, 659, 371, 4981, 4982, 443, 4765}
4766  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'void'}
   {515, 587, 4971, 659, 371, 4982, 443, 4766}
4767  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '/='}
   {515, 587, 4971, 659, 371, 4982, 4983, 443, 4767}
4768  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '/'}
   {4768, 515, 587, 4971, 659, 371, 4982, 4984, 443}
4769  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'while'}
   {4769, 515, 587, 4971, 659, 371, 4982, 4985, 443}
4770  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '-'}
   {4770, 515, 587, 4971, 659, 371, 4982, 4986, 443}
4771  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': ';'}
   {515, 4771, 4987, 587, 4971, 659, 371, 4982, 443}
4772  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '=='}
   {515, 4772, 587, 4971, 659, 371, 4982, 443, 4988}
4773  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '<'}
   {515, 4773, 587, 4971, 659, 371, 4982, 443, 4989}
4774  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'break'}
   {515, 4774, 587, 4971, 659, 371, 4982, 443, 4990}
4775  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '='}
   {515, 4775, 587, 4971, 659, 371, 4982, 443, 4991}
4776  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '}'}
   {4992, 515, 4776, 587, 4971, 659, 371, 4982, 443}
4777  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '+='}
   {4993, 515, 4777, 587, 4971, 659, 371, 4982, 443}
4778  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '+'}
   {4994, 515, 4778, 587, 4971, 659, 371, 4982, 443}
4779  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '*='}
   {515, 4995, 587, 4779, 4971, 659, 371, 4982, 443}
4780  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '{'}
   {515, 4996, 587, 4780, 4971, 659, 371, 4982, 443}
4781  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'continue'}
   {515, 4997, 587, 4971, 4781, 659, 371, 4982, 443}
4782  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '>='}
   {515, 4998, 587, 4971, 4782, 659, 371, 4982, 443}
4783  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': ')'}
   {515, 4999, 587, 4971, 4783, 659, 371, 4982, 443}
4784  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'float'}
   {515, 5000, 587, 4971, 4784, 659, 371, 4982, 443}
4785  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'double'}
   {515, 5001, 587, 4971, 4785, 659, 371, 4982, 443}
4786  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'char'}
   {515, 5002, 587, 4971, 4786, 659, 371, 4982, 443}
4787  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'number'}
   {515, 587, 5003, 4971, 4787, 659, 371, 4982, 443}
4788  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'return'}
   {4716, 4860, 4896, 4788}
4789  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'for'}
   {4861, 4789, 4717, 4897}
4790  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '!='}
   {4718, 4862, 4898, 4790}
4791  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': ','}
   {4719, 4899, 4863, 4791}
4792  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '#'}
   {4792, 4864, 4720, 4900}
4793  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'int'}
   {4793, 4721, 4901, 4865}
4794  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'if'}
   {4902, 4794, 4866, 4722}
4795  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '('}
   {4867, 4795, 4723, 4903}
4796  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'else'}
   {4724, 4904, 4796, 4868}
4797  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '*'}
   {4905, 4869, 4797, 4725}
4798  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '-='}
   {4726, 4906, 4798, 4870}
4799  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'identifier'}
   {4727, 4907, 4871, 4799}
4800  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '<='}
   {4800, 4872, 4728, 4908}
4801  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '>'}
   {4801, 4729, 4909, 4873}
4802  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'void'}
   {4910, 4802, 4874, 4730}
4803  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '/='}
   {4875, 4803, 4731, 4911}
4804  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '/'}
   {4732, 4912, 4804, 4876}
4805  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'while'}
   {4913, 4877, 4805, 4733}
4806  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '-'}
   {4734, 4914, 4806, 4878}
4807  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': ';'}
   {4735, 4915, 4879, 4807}
4808  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '=='}
   {4808, 4880, 4916, 4736}
4809  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '<'}
   {4809, 4737, 4917, 4881}
4810  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'break'}
   {4810, 4882, 4918, 4738}
4811  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '='}
   {4883, 4811, 4739, 4919}
4812  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '}'}
   {4920, 4740, 4812, 4884}
4813  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '+='}
   {4921, 4885, 4813, 4741}
4814  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '+'}
   {4922, 4742, 4814, 4886}
4815  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '*='}
   {4743, 4923, 4887, 4815}
4816  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '{'}
   {4816, 4888, 4924, 4744}
4817  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'continue'}
   {4817, 4745, 4925, 4889}
4818  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': '>='}
   {4818, 4890, 4926, 4746}
4819  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': ')'}
   {4891, 4819, 4747, 4927}
4820  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'float'}
   {4928, 4748, 4820, 4892}
4821  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'double'}
   {4929, 4893, 4821, 4749}
4822  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'char'}
   {4930, 4750, 4822, 4894}
4823  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 54, 'isTer': False, 'accept': 'number'}
   {4751, 4931, 4895, 4823}
4824  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'return'}
   {4824}
4825  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'for'}
   {4825}
4826  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '!='}
   {4826}
4827  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': ','}
   {4827}
4828  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '#'}
   {4828}
4829  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'int'}
   {4829}
4830  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'if'}
   {4830}
4831  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '('}
   {4831}
4832  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'else'}
   {4832}
4833  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '*'}
   {4833}
4834  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '-='}
   {4834}
4835  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'identifier'}
   {4835}
4836  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '<='}
   {4836}
4837  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '>'}
   {4837}
4838  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'void'}
   {4838}
4839  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '/='}
   {4839}
4840  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '/'}
   {4840}
4841  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'while'}
   {4841}
4842  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '-'}
   {4842}
4843  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': ';'}
   {4843}
4844  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '=='}
   {4844}
4845  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '<'}
   {4845}
4846  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'break'}
   {4846}
4847  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '='}
   {4847}
4848  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '}'}
   {4848}
4849  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '+='}
   {4849}
4850  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '+'}
   {4850}
4851  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '*='}
   {4851}
4852  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '{'}
   {4852}
4853  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'continue'}
   {4853}
4854  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': '>='}
   {4854}
4855  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': ')'}
   {4855}
4856  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'float'}
   {4856}
4857  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'double'}
   {4857}
4858  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'char'}
   {4858}
4859  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 54, 'isTer': True, 'accept': 'number'}
   {4859}
4860  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'return'}
   {4860}
4861  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'for'}
   {4861}
4862  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '!='}
   {4862}
4863  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': ','}
   {4863}
4864  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '#'}
   {4864}
4865  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'int'}
   {4865}
4866  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'if'}
   {4866}
4867  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '('}
   {4867}
4868  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'else'}
   {4868}
4869  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '*'}
   {4869}
4870  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '-='}
   {4870}
4871  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'identifier'}
   {4871}
4872  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '<='}
   {4872}
4873  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '>'}
   {4873}
4874  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'void'}
   {4874}
4875  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '/='}
   {4875}
4876  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '/'}
   {4876}
4877  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'while'}
   {4877}
4878  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '-'}
   {4878}
4879  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': ';'}
   {4879}
4880  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '=='}
   {4880}
4881  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '<'}
   {4881}
4882  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'break'}
   {4882}
4883  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '='}
   {4883}
4884  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '}'}
   {4884}
4885  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '+='}
   {4885}
4886  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '+'}
   {4886}
4887  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '*='}
   {4887}
4888  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '{'}
   {4888}
4889  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'continue'}
   {4889}
4890  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '>='}
   {4890}
4891  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': ')'}
   {4891}
4892  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'float'}
   {4892}
4893  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'double'}
   {4893}
4894  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'char'}
   {4894}
4895  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'number'}
   {4895}
4896  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {4896}
4897  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {4897}
4898  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '!='}
   {4898}
4899  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': ','}
   {4899}
4900  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '#'}
   {4900}
4901  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {4901}
4902  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {4902}
4903  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '('}
   {4903}
4904  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {4904}
4905  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '*'}
   {4905}
4906  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '-='}
   {4906}
4907  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {4907}
4908  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '<='}
   {4908}
4909  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '>'}
   {4909}
4910  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {4910}
4911  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '/='}
   {4911}
4912  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '/'}
   {4912}
4913  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {4913}
4914  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '-'}
   {4914}
4915  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': ';'}
   {4915}
4916  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '=='}
   {4916}
4917  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '<'}
   {4917}
4918  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {4918}
4919  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '='}
   {4919}
4920  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '}'}
   {4920}
4921  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '+='}
   {4921}
4922  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '+'}
   {4922}
4923  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '*='}
   {4923}
4924  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '{'}
   {4924}
4925  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {4925}
4926  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '>='}
   {4926}
4927  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': ')'}
   {4927}
4928  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {4928}
4929  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {4929}
4930  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {4930}
4931  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {4931}
4932  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'return'}
   {4932}
4933  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'for'}
   {4933}
4934  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '!='}
   {4934}
4935  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': ','}
   {4935}
4936  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '#'}
   {4936}
4937  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'int'}
   {4937}
4938  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'if'}
   {4938}
4939  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '('}
   {4939}
4940  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'else'}
   {4940}
4941  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '*'}
   {4941}
4942  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '-='}
   {4942}
4943  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'identifier'}
   {4943}
4944  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '<='}
   {4944}
4945  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '>'}
   {4945}
4946  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'void'}
   {4946}
4947  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '/='}
   {4947}
4948  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '/'}
   {4948}
4949  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'while'}
   {4949}
4950  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '-'}
   {4950}
4951  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': ';'}
   {4951}
4952  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '=='}
   {4952}
4953  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '<'}
   {4953}
4954  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'break'}
   {4954}
4955  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '='}
   {4955}
4956  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '}'}
   {4956}
4957  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '+='}
   {4957}
4958  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '+'}
   {4958}
4959  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '*='}
   {4959}
4960  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '{'}
   {4960}
4961  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'continue'}
   {4961}
4962  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': '>='}
   {4962}
4963  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': ')'}
   {4963}
4964  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'float'}
   {4964}
4965  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'double'}
   {4965}
4966  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'char'}
   {4966}
4967  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'number'}
   {4967}
4968  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'return'}
   {371, 515, 659, 443, 4968, 587}
4969  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'for'}
   {371, 515, 659, 443, 4969, 587}
4970  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '!='}
   {371, 515, 659, 443, 4970, 587}
4971  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': ','}
   {371, 515, 659, 443, 4971, 587}
4972  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '#'}
   {515, 659, 371, 443, 587, 4972}
4973  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'int'}
   {515, 659, 371, 443, 587, 4973}
4974  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'if'}
   {515, 659, 371, 443, 587, 4974}
4975  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '('}
   {515, 659, 371, 443, 587, 4975}
4976  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'else'}
   {4976, 515, 659, 371, 443, 587}
4977  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '*'}
   {4977, 515, 659, 371, 443, 587}
4978  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '-='}
   {4978, 515, 659, 371, 443, 587}
4979  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'identifier'}
   {515, 4979, 659, 371, 443, 587}
4980  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '<='}
   {515, 4980, 659, 371, 443, 587}
4981  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '>'}
   {515, 659, 4981, 371, 443, 587}
4982  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'void'}
   {515, 659, 371, 4982, 443, 587}
4983  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '/='}
   {515, 659, 371, 443, 4983, 587}
4984  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '/'}
   {515, 659, 371, 443, 4984, 587}
4985  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'while'}
   {515, 659, 371, 443, 4985, 587}
4986  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '-'}
   {515, 659, 371, 443, 4986, 587}
4987  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': ';'}
   {515, 4987, 659, 371, 443, 587}
4988  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '=='}
   {515, 659, 371, 443, 587, 4988}
4989  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '<'}
   {515, 659, 371, 443, 587, 4989}
4990  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'break'}
   {515, 659, 371, 443, 587, 4990}
4991  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '='}
   {515, 659, 371, 443, 587, 4991}
4992  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '}'}
   {4992, 371, 515, 659, 443, 587}
4993  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '+='}
   {4993, 371, 515, 659, 443, 587}
4994  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '+'}
   {4994, 371, 515, 659, 443, 587}
4995  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '*='}
   {371, 515, 659, 443, 4995, 587}
4996  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '{'}
   {371, 515, 659, 443, 4996, 587}
4997  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'continue'}
   {371, 515, 659, 443, 4997, 587}
4998  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '>='}
   {371, 515, 659, 443, 4998, 587}
4999  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': ')'}
   {371, 515, 659, 443, 4999, 587}
5000  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'float'}
   {371, 515, 659, 443, 5000, 587}
5001  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'double'}
   {371, 515, 659, 443, 5001, 587}
5002  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'char'}
   {371, 515, 659, 443, 5002, 587}
5003  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'number'}
   {371, 515, 659, 443, 5003, 587}
5004  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'return'}
   {5004}
5005  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'for'}
   {5005}
5006  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '!='}
   {5006}
5007  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': ','}
   {5007}
5008  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '#'}
   {5008}
5009  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'int'}
   {5009}
5010  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'if'}
   {5010}
5011  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '('}
   {5011}
5012  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'else'}
   {5012}
5013  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '*'}
   {5013}
5014  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '-='}
   {5014}
5015  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'identifier'}
   {5015}
5016  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '<='}
   {5016}
5017  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '>'}
   {5017}
5018  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'void'}
   {5018}
5019  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '/='}
   {5019}
5020  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '/'}
   {5020}
5021  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'while'}
   {5021}
5022  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '-'}
   {5022}
5023  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': ';'}
   {5023}
5024  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '=='}
   {5024}
5025  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '<'}
   {5025}
5026  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'break'}
   {5026}
5027  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '='}
   {5027}
5028  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '}'}
   {5028}
5029  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '+='}
   {5029}
5030  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '+'}
   {5030}
5031  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '*='}
   {5031}
5032  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '{'}
   {5032}
5033  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'continue'}
   {5033}
5034  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '>='}
   {5034}
5035  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': ')'}
   {5035}
5036  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'float'}
   {5036}
5037  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'double'}
   {5037}
5038  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'char'}
   {5038}
5039  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'number'}
   {5039}
5040  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'return'}
   {5040}
5041  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'for'}
   {5041}
5042  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '!='}
   {5042}
5043  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': ','}
   {5043}
5044  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '#'}
   {5044}
5045  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'int'}
   {5045}
5046  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'if'}
   {5046}
5047  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '('}
   {5047}
5048  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'else'}
   {5048}
5049  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '*'}
   {5049}
5050  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '-='}
   {5050}
5051  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'identifier'}
   {5051}
5052  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '<='}
   {5052}
5053  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '>'}
   {5053}
5054  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'void'}
   {5054}
5055  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '/='}
   {5055}
5056  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '/'}
   {5056}
5057  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'while'}
   {5057}
5058  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '-'}
   {5058}
5059  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': ';'}
   {5059}
5060  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '=='}
   {5060}
5061  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '<'}
   {5061}
5062  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'break'}
   {5062}
5063  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '='}
   {5063}
5064  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '}'}
   {5064}
5065  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '+='}
   {5065}
5066  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '+'}
   {5066}
5067  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '*='}
   {5067}
5068  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '{'}
   {5068}
5069  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'continue'}
   {5069}
5070  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '>='}
   {5070}
5071  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': ')'}
   {5071}
5072  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'float'}
   {5072}
5073  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'double'}
   {5073}
5074  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'char'}
   {5074}
5075  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'number'}
   {5075}
5076  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'return'}
   {5076}
5077  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'for'}
   {5077}
5078  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '!='}
   {5078}
5079  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': ','}
   {5079}
5080  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '#'}
   {5080}
5081  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'int'}
   {5081}
5082  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'if'}
   {5082}
5083  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '('}
   {5083}
5084  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'else'}
   {5084}
5085  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '*'}
   {5085}
5086  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '-='}
   {5086}
5087  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'identifier'}
   {5087}
5088  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '<='}
   {5088}
5089  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '>'}
   {5089}
5090  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'void'}
   {5090}
5091  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '/='}
   {5091}
5092  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '/'}
   {5092}
5093  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'while'}
   {5093}
5094  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '-'}
   {5094}
5095  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': ';'}
   {5095}
5096  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '=='}
   {5096}
5097  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '<'}
   {5097}
5098  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'break'}
   {5098}
5099  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '='}
   {5099}
5100  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '}'}
   {5100}
5101  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '+='}
   {5101}
5102  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '+'}
   {5102}
5103  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '*='}
   {5103}
5104  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '{'}
   {5104}
5105  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'continue'}
   {5105}
5106  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': '>='}
   {5106}
5107  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': ')'}
   {5107}
5108  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'float'}
   {5108}
5109  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'double'}
   {5109}
5110  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'char'}
   {5110}
5111  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'number'}
   {5111}
5112  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'return'}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 5112, 6137, 6139, 6142}
5113  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'for'}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 5113, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5114  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '!='}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 5114, 6139, 6142}
5115  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': ','}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 5115, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5116  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '#'}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 5116, 6142}
5117  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'int'}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 5117, 6142}
5118  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'if'}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 5118, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5119  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '('}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142, 5119}
5120  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'else'}
   {5120, 6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5121  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '*'}
   {6144, 5121, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5122  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '-='}
   {6144, 5122, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5123  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'identifier'}
   {6144, 5123, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5124  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '<='}
   {6144, 5124, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5125  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '>'}
   {6144, 6148, 5125, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5126  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'void'}
   {6144, 6148, 6149, 5126, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5127  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '/='}
   {6144, 6148, 6149, 5127, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5128  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '/'}
   {6144, 6148, 6149, 5128, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5129  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'while'}
   {6144, 6148, 6149, 6152, 5129, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5130  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '-'}
   {6144, 6148, 6149, 6152, 6153, 5130, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5131  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': ';'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5131, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5132  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '=='}
   {6144, 6148, 6149, 6152, 6153, 6154, 5132, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5133  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '<'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5133, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5134  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'break'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5134, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5135  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '='}
   {6144, 6148, 6149, 6152, 6153, 6154, 5135, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5136  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '}'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5136, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5137  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '+='}
   {6144, 6148, 6149, 6152, 6153, 6154, 5137, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5138  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '+'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5138, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5139  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '*='}
   {6144, 6148, 6149, 6152, 6153, 6154, 5139, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5140  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '{'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5140, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5141  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'continue'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5141, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5142  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': '>='}
   {6144, 6148, 6149, 6152, 6153, 6154, 5142, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5143  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': ')'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5143, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5144  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'float'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5144, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5145  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'double'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5145, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5146  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'char'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5146, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5147  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 58, 'isTer': False, 'accept': 'number'}
   {6144, 6148, 6149, 6152, 6153, 6154, 5147, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5148  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'return'}
   {5148}
5149  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'for'}
   {5149}
5150  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '!='}
   {5150}
5151  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': ','}
   {5151}
5152  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '#'}
   {5152}
5153  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'int'}
   {5153}
5154  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'if'}
   {5154}
5155  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '('}
   {5155}
5156  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'else'}
   {5156}
5157  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '*'}
   {5157}
5158  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '-='}
   {5158}
5159  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'identifier'}
   {5159}
5160  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '<='}
   {5160}
5161  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '>'}
   {5161}
5162  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'void'}
   {5162}
5163  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '/='}
   {5163}
5164  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '/'}
   {5164}
5165  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'while'}
   {5165}
5166  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '-'}
   {5166}
5167  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': ';'}
   {5167}
5168  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '=='}
   {5168}
5169  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '<'}
   {5169}
5170  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'break'}
   {5170}
5171  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '='}
   {5171}
5172  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '}'}
   {5172}
5173  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '+='}
   {5173}
5174  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '+'}
   {5174}
5175  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '*='}
   {5175}
5176  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '{'}
   {5176}
5177  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'continue'}
   {5177}
5178  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': '>='}
   {5178}
5179  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': ')'}
   {5179}
5180  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'float'}
   {5180}
5181  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'double'}
   {5181}
5182  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'char'}
   {5182}
5183  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 58, 'isTer': False, 'accept': 'number'}
   {5183}
5184  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'return'}
   {5184}
5185  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'for'}
   {5185}
5186  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '!='}
   {5186}
5187  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': ','}
   {5187}
5188  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '#'}
   {5188}
5189  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'int'}
   {5189}
5190  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'if'}
   {5190}
5191  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '('}
   {5191}
5192  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'else'}
   {5192}
5193  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '*'}
   {5193}
5194  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '-='}
   {5194}
5195  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'identifier'}
   {5195}
5196  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '<='}
   {5196}
5197  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '>'}
   {5197}
5198  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'void'}
   {5198}
5199  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '/='}
   {5199}
5200  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '/'}
   {5200}
5201  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'while'}
   {5201}
5202  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '-'}
   {5202}
5203  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': ';'}
   {5203}
5204  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '=='}
   {5204}
5205  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '<'}
   {5205}
5206  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'break'}
   {5206}
5207  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '='}
   {5207}
5208  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '}'}
   {5208}
5209  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '+='}
   {5209}
5210  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '+'}
   {5210}
5211  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '*='}
   {5211}
5212  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '{'}
   {5212}
5213  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'continue'}
   {5213}
5214  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': '>='}
   {5214}
5215  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': ')'}
   {5215}
5216  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'float'}
   {5216}
5217  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'double'}
   {5217}
5218  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'char'}
   {5218}
5219  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 58, 'isTer': True, 'accept': 'number'}
   {5219}
5220  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'return'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5220, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5221  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'for'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5221, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5222  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '!='}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6662, 6665, 6666, 6671, 6674, 5652, 5653, 5654, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5726, 5729, 5730, 5222, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6266, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5798, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 722, 725, 726, 731, 6876, 6877, 734, 6878, 737, 6881, 739, 6372, 6373, 742, 6374, 6882, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 5366, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5906, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5438, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6014, 6017, 6018, 6895, 5508, 5509, 5510, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5582, 6910, 5585, 5586, 5076, 5077, 5078, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 6122, 5608, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5223  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': ','}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6663, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 5655, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5727, 5729, 5730, 5223, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6267, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5799, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 723, 725, 726, 731, 6876, 6877, 734, 6879, 737, 6881, 739, 6372, 6373, 742, 6375, 6882, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 5367, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5907, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5439, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6015, 6017, 6018, 6895, 5508, 5509, 6023, 5511, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5583, 5585, 5586, 5076, 5077, 5079, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 6123, 5608, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5224  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '#'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6664, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5656, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5728, 5729, 5730, 5735, 5224, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6268, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5800, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 724, 725, 726, 731, 6876, 6877, 734, 6880, 737, 6881, 739, 6372, 6373, 742, 6882, 6376, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 5368, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5908, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5440, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6016, 6017, 6018, 6895, 5508, 5509, 6023, 5512, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5584, 5585, 5586, 5076, 5077, 5591, 5080, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 6124, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5225  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'int'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5225, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5226  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'if'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5226, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5227  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '('}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6667, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 5659, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5731, 5735, 5738, 5227, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6271, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5803, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 727, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6883, 6377, 6378, 6379, 748, 749, 6887, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 5371, 6394, 6904, 6905, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5911, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5443, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 6890, 371, 6893, 6012, 6013, 6017, 6018, 6019, 5508, 5509, 6023, 5513, 6026, 5514, 5515, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5587, 5076, 5077, 5591, 5081, 5082, 5083, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 6127, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5228  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'else'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6668, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5660, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5732, 5735, 5738, 5228, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6272, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5804, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 728, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6884, 6377, 6378, 6887, 748, 749, 6380, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 5372, 6904, 6905, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5912, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5444, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 6890, 371, 6893, 6012, 6013, 6017, 6018, 6020, 5508, 5509, 6023, 5513, 6026, 5514, 5516, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5588, 5591, 5081, 5082, 5594, 5084, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 6128, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5229  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '*'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6669, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5661, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5733, 5735, 5738, 5229, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6273, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5805, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 729, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6885, 6377, 6378, 6887, 748, 749, 6381, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 5373, 6905, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5913, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5445, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 6890, 371, 6893, 6012, 6013, 6017, 6018, 5508, 6021, 5509, 6023, 5513, 6026, 5514, 6029, 5517, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5589, 5591, 5081, 5082, 5594, 5085, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 6129, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5230  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '-='}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6670, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5662, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5734, 5735, 5738, 5741, 5230, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6274, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5806, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 730, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6886, 6377, 6378, 6887, 748, 749, 6382, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 5374, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5914, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5446, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 6890, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6022, 6023, 5513, 6026, 5514, 6029, 5518, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5590, 5591, 5081, 5082, 5594, 5597, 5086, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 6130, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5231  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'identifier'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5231, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5232  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '<='}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6672, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 5664, 6688, 5666, 6689, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5736, 5738, 5741, 5743, 5232, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6276, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5808, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 732, 6876, 734, 6877, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6888, 748, 749, 6890, 6383, 752, 753, 754, 6384, 5364, 5365, 6386, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 5376, 6400, 5378, 6401, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5916, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5448, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 6024, 5513, 6026, 5514, 6029, 6031, 5519, 5520, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5592, 5081, 5082, 5594, 5597, 5087, 5088, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6132, 6134, 6137, 6139, 6142}
5233  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '>'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6673, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 5665, 5666, 6689, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5737, 5738, 5741, 5743, 5233, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6277, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5809, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 733, 734, 6877, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6889, 748, 749, 6890, 6383, 752, 753, 754, 6385, 5364, 5365, 6386, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 5377, 5378, 6401, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5917, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5449, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 6025, 6026, 5513, 5514, 6029, 6031, 5519, 5521, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5593, 5594, 5597, 5087, 5599, 5089, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6133, 6134, 6137, 6139, 6142}
5234  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'void'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5234, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5235  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '/='}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 6675, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 5667, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5739, 5741, 5743, 5746, 5235, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6279, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5811, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 735, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6891, 6383, 752, 753, 754, 6386, 5364, 5365, 6387, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 5379, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5919, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5451, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 5513, 6026, 6027, 5514, 6029, 6031, 5519, 6034, 5522, 5523, 5525, 6898, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5595, 5597, 5087, 5599, 5090, 3043, 5091, 5093, 5602, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6135, 6134, 6137, 6139, 6142}
5236  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '/'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6676, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 5668, 5669, 6692, 5671, 6693, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5740, 5741, 5743, 5746, 5236, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6280, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5812, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 736, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6892, 6383, 752, 753, 754, 6386, 5364, 5365, 6388, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 5380, 5381, 6404, 5383, 6405, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5920, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5452, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 5513, 6026, 5514, 6028, 6029, 6031, 5519, 6034, 5522, 5524, 5525, 6898, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5596, 5597, 5087, 5599, 5090, 3043, 5092, 5093, 5602, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6136, 6137, 6139, 6142}
5237  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'while'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5237, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5238  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '-'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6678, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 5670, 5671, 6693, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5742, 5743, 5746, 5238, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6282, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5814, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 738, 739, 6372, 6373, 742, 6881, 6882, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6390, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 5382, 5383, 6405, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5922, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5454, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6894, 6017, 6018, 6895, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6030, 6031, 5519, 6034, 5522, 6898, 5525, 5526, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5598, 5087, 5599, 5090, 3043, 5602, 5093, 5094, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6138, 6139, 6142}
5239  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': ';'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5239, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5240  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '=='}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 6680, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 5672, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5744, 5746, 5752, 5240, 5753, 6264, 5756, 5757, 5758, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6284, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5816, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 740, 6372, 742, 6373, 6882, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6392, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 5384, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5924, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5456, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 6896, 5513, 6026, 5514, 6029, 6031, 6032, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5528, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5600, 5090, 3043, 5602, 5093, 5095, 5096, 6120, 5098, 6121, 5608, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6140, 6142}
5241  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '<'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6681, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5673, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5745, 5746, 5752, 5753, 5241, 6264, 5756, 5757, 5758, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6285, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5817, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 741, 742, 6373, 6882, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6393, 6394, 6904, 6905, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5385, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5925, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5457, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6897, 6031, 5519, 6033, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5529, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5601, 5090, 3043, 5602, 5093, 5095, 6120, 5097, 5098, 6121, 5608, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6141, 6142}
5242  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'break'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5242, 6264, 5756, 5757, 5758, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5243  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '='}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6683, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5675, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5747, 5752, 5753, 6264, 5243, 5756, 5757, 5758, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 6287, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5819, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 743, 6882, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6395, 6904, 6905, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5387, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5927, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5459, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 6035, 5522, 5525, 6898, 5527, 6040, 6041, 5530, 5531, 6044, 6045, 6046, 6899, 5536, 5537, 5540, 5541, 5542, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5603, 5095, 6120, 6121, 5098, 5099, 5608, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142, 6143}
5244  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '}'}
   {6144, 515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 5244, 6275, 6278, 6281, 6283, 6286, 2703, 6288, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 744, 6377, 6378, 6887, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6396, 6900, 6904, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6036, 5525, 6898, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5532, 5536, 5537, 5540, 5541, 5542, 6905, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5604, 5095, 6120, 6121, 5098, 5608, 5100, 6125, 6126, 5609, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5245  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '+='}
   {6145, 515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6685, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5677, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5749, 5752, 5753, 6264, 6265, 5756, 5757, 5245, 5758, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 6289, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5821, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 745, 6377, 6378, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6901, 6397, 6904, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5389, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5929, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5461, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 6037, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5533, 5536, 5537, 5540, 5541, 5542, 6905, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5605, 5095, 6120, 6121, 5098, 5608, 5609, 5101, 6126, 6125, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5246  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '+'}
   {6146, 515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6686, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5678, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5750, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 5246, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 6290, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5822, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 746, 6378, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6902, 6904, 6398, 5375, 6400, 6401, 5378, 6908, 6404, 5381, 6405, 5383, 6406, 5386, 5390, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5930, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5462, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 6038, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5534, 5536, 5537, 5540, 5541, 5542, 6905, 443, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5606, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5102, 5104, 5105, 5612, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5247  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '*='}
   {515, 6147, 6148, 6149, 6660, 6152, 6153, 6154, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6687, 6688, 5666, 6689, 6692, 5669, 6693, 5671, 6694, 5674, 5679, 5680, 5681, 5684, 5685, 5686, 587, 5612, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5751, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 5247, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6291, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5823, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 747, 748, 749, 6890, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6903, 6904, 6905, 5375, 6399, 6400, 5378, 6401, 6404, 5381, 6405, 5383, 6406, 5386, 5391, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5931, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5463, 5464, 5465, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 6039, 6040, 6041, 5527, 5530, 6044, 6045, 6046, 5535, 5536, 5537, 5540, 5541, 5542, 443, 6908, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5607, 5608, 6125, 6126, 5103, 5104, 5105, 5609, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5248  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '{'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 5248, 6270, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5249  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'continue'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 5249, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5250  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '>='}
   {515, 6148, 6149, 6150, 6660, 6152, 6153, 6154, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6690, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5682, 5684, 5685, 5686, 587, 5612, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5754, 6264, 5756, 5757, 5758, 6265, 6269, 6270, 5250, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6294, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5826, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 750, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6906, 5375, 6400, 6401, 5378, 6402, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5905, 5393, 5394, 5904, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5934, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5466, 5468, 5469, 5470, 371, 6893, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 6042, 5530, 6044, 6045, 6046, 5536, 5537, 5538, 5540, 5541, 5542, 443, 6908, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5610, 5104, 5105, 5106, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5251  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': ')'}
   {515, 6148, 6149, 6660, 6151, 6152, 6153, 6154, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6691, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5683, 5684, 5685, 5686, 587, 3151, 5613, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 5755, 5756, 5757, 5758, 6265, 6269, 6270, 5251, 6275, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6295, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5827, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 751, 752, 753, 754, 6383, 5364, 5365, 6386, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6907, 5375, 6400, 6401, 5378, 6403, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5905, 5393, 5904, 5395, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5935, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5467, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6043, 6044, 6045, 6046, 5536, 5537, 5539, 5540, 5541, 5542, 443, 6908, 6909, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5611, 5104, 5105, 5612, 5107, 5108, 5109, 5110, 6131, 6134, 6137, 6139, 6142}
5252  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'float'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 5252, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5253  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'double'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 5253, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5254  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'char'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 3151, 5614, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 6269, 6270, 6275, 5254, 6278, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 6386, 5364, 5365, 6389, 6391, 6895, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 6012, 6013, 6017, 6018, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 6910, 5585, 5586, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5255  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'number'}
   {515, 6148, 6149, 6660, 6661, 6152, 6153, 6154, 6155, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 6695, 5674, 5680, 5681, 5684, 5685, 5686, 5687, 587, 3151, 5614, 5615, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 6264, 6265, 5756, 5757, 5758, 5759, 6269, 6270, 6275, 6278, 5255, 6281, 6283, 6286, 2703, 659, 6292, 6293, 6296, 6297, 6298, 6299, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 5831, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6372, 6373, 742, 6882, 6887, 6377, 6378, 6890, 748, 749, 6893, 6383, 752, 753, 754, 755, 5364, 5365, 6386, 6389, 6391, 5369, 5370, 6394, 6904, 6905, 6908, 5375, 6400, 6401, 5378, 6909, 6404, 5381, 6405, 5383, 6406, 6407, 5386, 5392, 5393, 5904, 5905, 5396, 5397, 5398, 5399, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5939, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 5471, 371, 6012, 6013, 6017, 6018, 6895, 5508, 5509, 6023, 5513, 6026, 5514, 6029, 6031, 5519, 6034, 5522, 6898, 5525, 5527, 6040, 6041, 5530, 6044, 6045, 6046, 6047, 5536, 5537, 5540, 5541, 5542, 5543, 443, 5580, 5581, 6910, 5585, 5586, 6911, 5076, 5077, 5591, 5081, 5082, 5594, 5597, 5087, 5599, 5090, 3043, 5602, 5093, 5095, 6120, 6121, 5098, 5608, 5609, 6125, 6126, 5612, 5104, 5105, 5613, 6131, 5108, 5109, 5110, 5111, 6134, 6137, 6139, 6142}
5256  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'return'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5220, 6264, 6265, 6269, 6270, 6275, 6278, 5256, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5328, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5257  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'for'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5221, 6264, 6265, 6269, 6270, 6275, 6278, 5257, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5329, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5258  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '!='}
   {6148, 6149, 6152, 6153, 6154, 3151, 5222, 6264, 6265, 6266, 6269, 6270, 6275, 6278, 6281, 5258, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5330, 6372, 6373, 6374, 6377, 6378, 6383, 6386, 5364, 5365, 5366, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5438, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5510, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5582, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6662, 6665, 6666, 6671, 6674, 5652, 5653, 5654, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5726, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5798, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 722, 725, 726, 731, 6876, 6877, 734, 6878, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5906, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6014, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5078, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6122, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5259  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': ','}
   {6148, 6149, 6152, 6153, 6154, 3151, 5223, 6264, 6265, 6267, 6269, 6270, 6275, 6278, 6281, 5259, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5331, 6372, 6373, 6375, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 5367, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5439, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5511, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5583, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6663, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 5655, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5727, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5799, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 723, 725, 726, 731, 6876, 6877, 734, 6879, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5907, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6015, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5079, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6123, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5260  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '#'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5224, 6264, 6265, 6268, 6269, 6270, 6275, 6278, 6281, 6283, 5260, 6286, 6292, 6293, 6296, 6297, 6298, 5332, 6372, 6373, 6376, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5368, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5440, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5512, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5584, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6664, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5656, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5728, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5800, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 724, 725, 726, 731, 6876, 6877, 734, 6880, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5908, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6016, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5080, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6124, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5261  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'int'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5225, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 5261, 6286, 6292, 6293, 6296, 6297, 6298, 5333, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5262  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'if'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5226, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 5262, 6286, 6292, 6293, 6296, 6297, 6298, 5334, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5263  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '('}
   {6148, 6149, 6152, 6153, 6154, 3151, 5227, 6264, 6265, 6269, 6270, 6271, 6275, 6278, 6281, 6283, 6286, 5263, 6292, 6293, 6296, 6297, 6298, 5335, 6372, 6373, 6377, 6378, 6379, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 5371, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5443, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5515, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5587, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6667, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 5659, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5731, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5803, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 727, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 6883, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5911, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6019, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5083, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 6127, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5264  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'else'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5228, 6264, 6265, 6269, 6270, 6272, 6275, 6278, 6281, 6283, 6286, 5264, 6292, 6293, 6296, 6297, 6298, 5336, 6372, 6373, 6377, 6378, 6380, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5372, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5444, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5516, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5588, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6668, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5660, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5732, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5804, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 728, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 6884, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5912, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6020, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5084, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6128, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5265  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '*'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5229, 6264, 6265, 6269, 6270, 6273, 6275, 6278, 6281, 6283, 6286, 5265, 6292, 6293, 6296, 6297, 6298, 5337, 6372, 6373, 6377, 6378, 6381, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5373, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5445, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5517, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5589, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6669, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5661, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5733, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5805, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 729, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 6885, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5913, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6021, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5085, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6129, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5266  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '-='}
   {6148, 6149, 6152, 6153, 6154, 3151, 5230, 6264, 6265, 6269, 6270, 6274, 6275, 6278, 6281, 6283, 6286, 5266, 6292, 6293, 6296, 6297, 6298, 5338, 6372, 6373, 6377, 6378, 6382, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5374, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5446, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5518, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5590, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6670, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5662, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5734, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5806, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 730, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6886, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5914, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6022, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5086, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6130, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5267  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'identifier'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5231, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 5267, 6292, 6293, 6296, 6297, 6298, 5339, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5268  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '<='}
   {6148, 6149, 6152, 6153, 6154, 3151, 5232, 6264, 6265, 6269, 6270, 6275, 6276, 6278, 6281, 6283, 6286, 5268, 6292, 6293, 6296, 6297, 6298, 5340, 6372, 6373, 6377, 6378, 6383, 6384, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 5376, 6400, 5378, 6401, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5448, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5520, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5592, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6672, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 5664, 6688, 5666, 6689, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5736, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5808, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 732, 6876, 734, 6877, 737, 6881, 739, 6882, 742, 6887, 6888, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5916, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6024, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5088, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6132, 6134, 6137, 6139, 6142}
5269  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '>'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5233, 6264, 6265, 6269, 6270, 6275, 6277, 6278, 6281, 6283, 6286, 6292, 5269, 6293, 6296, 6297, 6298, 5341, 6372, 6373, 6377, 6378, 6383, 6385, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 5377, 5378, 6401, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5449, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5521, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5593, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6673, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 5665, 5666, 6689, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5737, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5809, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 733, 734, 6877, 737, 6881, 739, 6882, 742, 6887, 6889, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5917, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6025, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5089, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6133, 6134, 6137, 6139, 6142}
5270  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'void'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5234, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 5270, 6296, 6297, 6298, 5342, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5271  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '/='}
   {6148, 6149, 6152, 6153, 6154, 3151, 5235, 6264, 6265, 6269, 6270, 6275, 6278, 6279, 6281, 6283, 6286, 6292, 6293, 5271, 6296, 6297, 6298, 5343, 6372, 6373, 6377, 6378, 6383, 6386, 6387, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 5379, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5451, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5523, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5595, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 6675, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 5667, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5739, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5811, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 735, 737, 6881, 739, 6882, 742, 6887, 6890, 6891, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5919, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6027, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5091, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6135, 6134, 6137, 6139, 6142}
5272  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '/'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5236, 6264, 6265, 6269, 6270, 6275, 6278, 6280, 6281, 6283, 6286, 6292, 6293, 5272, 6296, 6297, 6298, 5344, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6388, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 5380, 5381, 6404, 5383, 6405, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5452, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5524, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5596, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6676, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 5668, 5669, 6692, 5671, 6693, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5740, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5812, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 736, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6892, 6893, 752, 753, 754, 6895, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5920, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6028, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5092, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6136, 6137, 6139, 6142}
5273  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'while'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5237, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 5273, 6297, 6298, 5345, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5274  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '-'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5238, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6282, 6283, 6286, 6292, 6293, 6296, 6297, 5274, 6298, 5346, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6390, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 5382, 5383, 6405, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5454, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5526, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5598, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6678, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 5670, 5671, 6693, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5742, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5814, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 738, 739, 6881, 6882, 742, 6887, 6890, 748, 749, 6893, 6894, 752, 753, 754, 6895, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5922, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6030, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5094, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6138, 6139, 6142}
5275  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': ';'}
   {6148, 6149, 6152, 6153, 6154, 3151, 5239, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5275, 5347, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5276  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '=='}
   {6148, 6149, 6152, 6153, 6154, 3151, 5240, 6264, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6284, 6286, 6292, 6293, 6296, 6297, 6298, 5276, 5348, 6372, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 6392, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 5384, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5456, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5528, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5600, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 6680, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 5672, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5744, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5816, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 740, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6896, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5924, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6032, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 5096, 6120, 5098, 6121, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6140, 6142}
5277  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '<'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 5241, 6265, 6269, 6270, 6275, 6278, 6281, 6283, 6285, 6286, 6292, 6293, 6296, 6297, 6298, 5277, 6372, 5349, 6373, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6393, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5385, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5457, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5529, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5601, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6681, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5673, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5745, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5817, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 741, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6897, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5925, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6033, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 5097, 5098, 6121, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6141, 6142}
5278  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'break'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5242, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5278, 6372, 6373, 5350, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5279  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '='}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5243, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6287, 6292, 6293, 6296, 6297, 6298, 5279, 6372, 6373, 5351, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6395, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5387, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5459, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5531, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5603, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6683, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5675, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5747, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5819, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 743, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6899, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5927, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6035, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5099, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142, 6143}
5280  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '}'}
   {6144, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5244, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6288, 6292, 6293, 6296, 6297, 6298, 5280, 6372, 6373, 5352, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6396, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5388, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5460, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5532, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5604, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6684, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5676, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5748, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5820, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 744, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6900, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5928, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6036, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5100, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5281  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '+='}
   {6145, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 5245, 6269, 6270, 6275, 6278, 6281, 6283, 6286, 6289, 6292, 6293, 6296, 6297, 6298, 5281, 6372, 6373, 5353, 6377, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6397, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5389, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5461, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5533, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5605, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6685, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5677, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5749, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5821, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 745, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6901, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5929, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6037, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 5101, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5282  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '+'}
   {6146, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 5246, 6270, 6275, 6278, 6281, 6283, 6286, 6290, 6292, 6293, 6296, 6297, 6298, 5282, 6372, 6373, 6377, 5354, 6378, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 6398, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5390, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5462, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5534, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5606, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 6686, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5678, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5750, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5822, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 746, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6902, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5930, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6038, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 5102, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5283  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '*='}
   {6147, 6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 5247, 6275, 6278, 6281, 6283, 6286, 6291, 6292, 6293, 6296, 6297, 6298, 5283, 6372, 6373, 6377, 6378, 5355, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6399, 6400, 5378, 6401, 6404, 5381, 6405, 5383, 6406, 5386, 5391, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5463, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5535, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5607, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6687, 6688, 5666, 6689, 6692, 5669, 6693, 5671, 6694, 5674, 5679, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5751, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5823, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 747, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6903, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5931, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6039, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5103, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5284  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '{'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 5248, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5284, 6372, 6373, 6377, 6378, 5356, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5285  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'continue'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 5249, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5285, 6372, 6373, 6377, 6378, 5357, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5286  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': '>='}
   {6148, 6149, 6150, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 5250, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6294, 6296, 6297, 6298, 5286, 6372, 6373, 6377, 6378, 5358, 6383, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6402, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5394, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5466, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5538, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5610, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6690, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5682, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5754, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5826, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 750, 6895, 752, 753, 754, 6893, 6898, 6904, 6905, 6906, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5934, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6042, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 5106, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5287  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': ')'}
   {6148, 6149, 6151, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 5251, 6275, 6278, 6281, 6283, 6286, 6292, 6293, 6295, 6296, 6297, 6298, 5287, 6372, 6373, 6377, 6378, 6383, 5359, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6403, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5395, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5467, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5539, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5611, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6691, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5683, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5755, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5827, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 751, 752, 753, 754, 6895, 6898, 6904, 6905, 6907, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5935, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6043, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 5107, 5108, 5109, 5110, 6131, 6134, 6137, 6139, 6142}
5288  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'float'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 6275, 5252, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5288, 6372, 6373, 6377, 6378, 6383, 5360, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5289  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'double'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 6275, 5253, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5289, 6372, 6373, 6377, 6378, 6383, 5361, 6386, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5290  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'char'}
   {6148, 6149, 6152, 6153, 6154, 3151, 6264, 6265, 6269, 6270, 6275, 5254, 6278, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 5290, 6372, 6373, 6377, 6378, 6383, 6386, 5362, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 5386, 5392, 5393, 5396, 5397, 5398, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 5674, 5680, 5681, 5684, 5685, 5686, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 6898, 6904, 6905, 6908, 6909, 6910, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 6134, 6137, 6139, 6142}
5291  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 59, 'isTer': False, 'accept': 'number'}
   {6148, 6149, 6152, 6153, 6154, 6155, 3151, 6264, 6265, 6269, 6270, 6275, 6278, 5255, 6281, 6283, 6286, 6292, 6293, 6296, 6297, 6298, 6299, 5291, 6372, 6373, 6377, 6378, 6383, 6386, 5363, 5364, 5365, 6389, 6391, 5369, 5370, 6394, 5375, 6400, 6401, 5378, 6404, 5381, 6405, 5383, 6406, 6407, 5386, 5392, 5393, 5396, 5397, 5398, 5399, 5436, 5437, 5441, 5442, 5447, 5450, 5453, 5455, 5458, 5464, 5465, 5468, 5469, 5470, 5471, 371, 5508, 5509, 5513, 5514, 5519, 5522, 5525, 5527, 5530, 5536, 5537, 5540, 5541, 5542, 5543, 443, 5580, 5581, 5585, 5586, 5591, 5594, 5597, 5599, 5602, 5608, 5609, 5612, 5613, 5614, 5615, 515, 6660, 6661, 6665, 6666, 6671, 6674, 5652, 5653, 6677, 6679, 5657, 5658, 6682, 5663, 6688, 6689, 5666, 6692, 5669, 6693, 5671, 6694, 6695, 5674, 5680, 5681, 5684, 5685, 5686, 5687, 587, 5724, 5725, 5729, 5730, 5735, 5738, 5741, 5743, 5746, 5752, 5753, 5756, 5757, 5758, 5759, 2703, 659, 2719, 5796, 5797, 5801, 5802, 5807, 5810, 5813, 5815, 5818, 5824, 5825, 5828, 5829, 5830, 5831, 720, 721, 725, 726, 731, 6876, 6877, 734, 737, 6881, 739, 6882, 742, 6887, 6890, 748, 749, 6893, 6895, 752, 753, 754, 755, 6898, 6904, 6905, 6908, 6909, 6910, 6911, 5904, 5905, 5909, 5910, 5915, 5918, 5921, 5923, 5926, 5932, 5933, 5936, 5937, 5938, 5939, 6012, 6013, 6017, 6018, 6023, 6026, 6029, 6031, 6034, 6040, 6041, 6044, 6045, 6046, 6047, 5076, 5077, 5081, 5082, 5087, 5090, 3043, 5093, 5095, 6120, 6121, 5098, 6125, 6126, 5104, 5105, 6131, 5108, 5109, 5110, 5111, 6134, 6137, 6139, 6142}
5292  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'return'}
   {5292}
5293  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'for'}
   {5293}
5294  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '!='}
   {5294}
5295  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': ','}
   {5295}
5296  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '#'}
   {5296}
5297  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'int'}
   {5297}
5298  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'if'}
   {5298}
5299  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '('}
   {5299}
5300  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'else'}
   {5300}
5301  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '*'}
   {5301}
5302  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '-='}
   {5302}
5303  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'identifier'}
   {5303}
5304  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '<='}
   {5304}
5305  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '>'}
   {5305}
5306  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'void'}
   {5306}
5307  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '/='}
   {5307}
5308  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '/'}
   {5308}
5309  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'while'}
   {5309}
5310  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '-'}
   {5310}
5311  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': ';'}
   {5311}
5312  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '=='}
   {5312}
5313  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '<'}
   {5313}
5314  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'break'}
   {5314}
5315  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '='}
   {5315}
5316  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '}'}
   {5316}
5317  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '+='}
   {5317}
5318  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '+'}
   {5318}
5319  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '*='}
   {5319}
5320  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '{'}
   {5320}
5321  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'continue'}
   {5321}
5322  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': '>='}
   {5322}
5323  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': ')'}
   {5323}
5324  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'float'}
   {5324}
5325  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'double'}
   {5325}
5326  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'char'}
   {5326}
5327  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 59, 'isTer': True, 'accept': 'number'}
   {5327}
5328  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'return'}
   {5328}
5329  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'for'}
   {5329}
5330  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '!='}
   {5330}
5331  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': ','}
   {5331}
5332  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '#'}
   {5332}
5333  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'int'}
   {5333}
5334  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'if'}
   {5334}
5335  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '('}
   {5335}
5336  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'else'}
   {5336}
5337  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '*'}
   {5337}
5338  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '-='}
   {5338}
5339  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'identifier'}
   {5339}
5340  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '<='}
   {5340}
5341  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '>'}
   {5341}
5342  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'void'}
   {5342}
5343  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '/='}
   {5343}
5344  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '/'}
   {5344}
5345  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'while'}
   {5345}
5346  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '-'}
   {5346}
5347  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': ';'}
   {5347}
5348  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '=='}
   {5348}
5349  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '<'}
   {5349}
5350  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'break'}
   {5350}
5351  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '='}
   {5351}
5352  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '}'}
   {5352}
5353  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '+='}
   {5353}
5354  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '+'}
   {5354}
5355  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '*='}
   {5355}
5356  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '{'}
   {5356}
5357  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'continue'}
   {5357}
5358  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': '>='}
   {5358}
5359  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': ')'}
   {5359}
5360  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'float'}
   {5360}
5361  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'double'}
   {5361}
5362  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'char'}
   {5362}
5363  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 60, 'isTer': True, 'accept': 'number'}
   {5363}
5364  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'return'}
   {3043, 5796, 2703, 3151, 5364, 2719}
5365  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'for'}
   {5365, 5797}
5366  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '!='}
   {5366, 5798}
5367  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': ','}
   {5367, 5799}
5368  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '#'}
   {5800, 5368}
5369  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'int'}
   {5801, 5369}
5370  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'if'}
   {5370, 5802}
5371  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '('}
   {5803, 5371}
5372  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'else'}
   {5372, 5804}
5373  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '*'}
   {5373, 5805}
5374  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '-='}
   {5374, 5806}
5375  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'identifier'}
   {5375, 5807}
5376  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '<='}
   {5808, 5376}
5377  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '>'}
   {5809, 5377}
5378  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'void'}
   {5810, 5378}
5379  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '/='}
   {5379, 5811}
5380  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '/'}
   {5812, 5380}
5381  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'while'}
   {5381, 5813}
5382  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '-'}
   {5814, 5382}
5383  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': ';'}
   {5383, 5815}
5384  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '=='}
   {5816, 5384}
5385  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '<'}
   {5817, 5385}
5386  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'break'}
   {5818, 5386}
5387  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '='}
   {5387, 5819}
5388  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '}'}
   {5820, 5388}
5389  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '+='}
   {5389, 5821}
5390  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '+'}
   {5822, 5390}
5391  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '*='}
   {5391, 5823}
5392  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '{'}
   {5824, 5392}
5393  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'continue'}
   {5825, 5393}
5394  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': '>='}
   {5826, 5394}
5395  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': ')'}
   {5395, 5827}
5396  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'float'}
   {5828, 5396}
5397  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'double'}
   {5397, 5829}
5398  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'char'}
   {5830, 5398}
5399  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 61, 'isTer': False, 'accept': 'number'}
   {5399, 5831}
5400  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'return'}
   {5400}
5401  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'for'}
   {5401}
5402  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '!='}
   {5402}
5403  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': ','}
   {5403}
5404  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '#'}
   {5404}
5405  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'int'}
   {5405}
5406  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'if'}
   {5406}
5407  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '('}
   {5407}
5408  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'else'}
   {5408}
5409  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '*'}
   {5409}
5410  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '-='}
   {5410}
5411  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'identifier'}
   {5411}
5412  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '<='}
   {5412}
5413  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '>'}
   {5413}
5414  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'void'}
   {5414}
5415  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '/='}
   {5415}
5416  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '/'}
   {5416}
5417  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'while'}
   {5417}
5418  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '-'}
   {5418}
5419  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': ';'}
   {5419}
5420  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '=='}
   {5420}
5421  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '<'}
   {5421}
5422  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'break'}
   {5422}
5423  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '='}
   {5423}
5424  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '}'}
   {5424}
5425  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '+='}
   {5425}
5426  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '+'}
   {5426}
5427  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '*='}
   {5427}
5428  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '{'}
   {5428}
5429  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'continue'}
   {5429}
5430  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': '>='}
   {5430}
5431  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': ')'}
   {5431}
5432  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'float'}
   {5432}
5433  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'double'}
   {5433}
5434  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'char'}
   {5434}
5435  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 61, 'isTer': True, 'accept': 'number'}
   {5435}
5436  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'return'}
   {6120, 5904, 5436, 6264, 6012}
5437  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'for'}
   {6121, 6013, 5905, 6265, 5437}
5438  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '!='}
   {5438, 6122, 5906, 6266, 6014}
5439  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': ','}
   {6123, 5907, 6015, 6267, 5439}
5440  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '#'}
   {6016, 5440, 6124, 5908, 6268}
5441  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'int'}
   {5441, 6017, 6125, 5909, 6269}
5442  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'if'}
   {6018, 5442, 6126, 5910, 6270}
5443  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '('}
   {5443, 6019, 6127, 5911, 6271}
5444  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'else'}
   {6272, 6020, 5444, 6128, 5912}
5445  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '*'}
   {6273, 5445, 6021, 6129, 5913}
5446  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '-='}
   {6274, 5446, 6022, 6130, 5914}
5447  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'identifier'}
   {6275, 5447, 6023, 6131, 5915}
5448  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '<='}
   {6276, 6024, 5448, 6132, 5916}
5449  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '>'}
   {6277, 5449, 6025, 6133, 5917}
5450  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'void'}
   {6278, 6026, 5450, 6134, 5918}
5451  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '/='}
   {6279, 5451, 6027, 6135, 5919}
5452  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '/'}
   {5920, 6280, 6028, 5452, 6136}
5453  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'while'}
   {5921, 6281, 5453, 6029, 6137}
5454  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '-'}
   {5922, 6282, 5454, 6030, 6138}
5455  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': ';'}
   {5923, 6283, 5455, 6031, 6139}
5456  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '=='}
   {5924, 6284, 6032, 5456, 6140}
5457  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '<'}
   {5925, 6285, 6033, 5457, 6141}
5458  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'break'}
   {5926, 6286, 6034, 5458, 6142}
5459  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '='}
   {5927, 6287, 5459, 6035, 6143}
5460  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '}'}
   {6144, 5928, 6288, 6036, 5460}
5461  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '+='}
   {6145, 5929, 6289, 5461, 6037}
5462  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '+'}
   {6146, 5930, 6290, 5462, 6038}
5463  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '*='}
   {6147, 5931, 6039, 6291, 5463}
5464  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '{'}
   {5464, 6148, 5932, 6292, 6040}
5465  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'continue'}
   {6149, 5933, 6293, 5465, 6041}
5466  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '>='}
   {6150, 5466, 5934, 6294, 6042}
5467  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': ')'}
   {6043, 6151, 5935, 6295, 5467}
5468  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'float'}
   {6152, 5936, 5468, 6296, 6044}
5469  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'double'}
   {6153, 6045, 5937, 6297, 5469}
5470  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'char'}
   {6154, 5938, 6046, 6298, 5470}
5471  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'number'}
   {6155, 5939, 6047, 6299, 5471}
5472  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'return'}
   {5472}
5473  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'for'}
   {5473}
5474  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '!='}
   {5474}
5475  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': ','}
   {5475}
5476  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '#'}
   {5476}
5477  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'int'}
   {5477}
5478  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'if'}
   {5478}
5479  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '('}
   {5479}
5480  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'else'}
   {5480}
5481  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '*'}
   {5481}
5482  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '-='}
   {5482}
5483  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'identifier'}
   {5483}
5484  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '<='}
   {5484}
5485  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '>'}
   {5485}
5486  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'void'}
   {5486}
5487  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '/='}
   {5487}
5488  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '/'}
   {5488}
5489  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'while'}
   {5489}
5490  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '-'}
   {5490}
5491  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': ';'}
   {5491}
5492  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '=='}
   {5492}
5493  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '<'}
   {5493}
5494  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'break'}
   {5494}
5495  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '='}
   {5495}
5496  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '}'}
   {5496}
5497  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '+='}
   {5497}
5498  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '+'}
   {5498}
5499  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '*='}
   {5499}
5500  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '{'}
   {5500}
5501  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'continue'}
   {5501}
5502  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '>='}
   {5502}
5503  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': ')'}
   {5503}
5504  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'float'}
   {5504}
5505  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'double'}
   {5505}
5506  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'char'}
   {5506}
5507  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'number'}
   {5507}
5508  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'return'}
   {5508, 6372}
5509  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'for'}
   {6373, 5509}
5510  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '!='}
   {5510, 6374}
5511  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': ','}
   {5511, 6375}
5512  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '#'}
   {6376, 5512}
5513  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'int'}
   {6377, 5513}
5514  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'if'}
   {6378, 5514}
5515  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '('}
   {6379, 5515}
5516  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'else'}
   {5516, 6380}
5517  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '*'}
   {6381, 5517}
5518  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '-='}
   {5518, 6382}
5519  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'identifier'}
   {5519, 6383}
5520  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '<='}
   {6384, 5520}
5521  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '>'}
   {6385, 5521}
5522  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'void'}
   {6386, 5522}
5523  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '/='}
   {6387, 5523}
5524  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '/'}
   {5524, 6388}
5525  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'while'}
   {6389, 5525}
5526  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '-'}
   {5526, 6390}
5527  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': ';'}
   {5527, 6391}
5528  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '=='}
   {6392, 5528}
5529  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '<'}
   {6393, 5529}
5530  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'break'}
   {6394, 5530}
5531  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '='}
   {6395, 5531}
5532  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '}'}
   {5532, 6396}
5533  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '+='}
   {6397, 5533}
5534  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '+'}
   {5534, 6398}
5535  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '*='}
   {5535, 6399}
5536  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '{'}
   {6400, 5536}
5537  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'continue'}
   {6401, 5537}
5538  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '>='}
   {5538, 6402}
5539  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': ')'}
   {6403, 5539}
5540  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'float'}
   {5540, 6404}
5541  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'double'}
   {6405, 5541}
5542  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'char'}
   {5542, 6406}
5543  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'number'}
   {5543, 6407}
5544  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'return'}
   {5544}
5545  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'for'}
   {5545}
5546  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '!='}
   {5546}
5547  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': ','}
   {5547}
5548  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '#'}
   {5548}
5549  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'int'}
   {5549}
5550  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'if'}
   {5550}
5551  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '('}
   {5551}
5552  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'else'}
   {5552}
5553  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '*'}
   {5553}
5554  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '-='}
   {5554}
5555  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'identifier'}
   {5555}
5556  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '<='}
   {5556}
5557  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '>'}
   {5557}
5558  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'void'}
   {5558}
5559  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '/='}
   {5559}
5560  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '/'}
   {5560}
5561  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'while'}
   {5561}
5562  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '-'}
   {5562}
5563  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': ';'}
   {5563}
5564  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '=='}
   {5564}
5565  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '<'}
   {5565}
5566  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'break'}
   {5566}
5567  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '='}
   {5567}
5568  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '}'}
   {5568}
5569  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '+='}
   {5569}
5570  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '+'}
   {5570}
5571  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '*='}
   {5571}
5572  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '{'}
   {5572}
5573  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'continue'}
   {5573}
5574  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': '>='}
   {5574}
5575  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': ')'}
   {5575}
5576  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'float'}
   {5576}
5577  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'double'}
   {5577}
5578  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'char'}
   {5578}
5579  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 63, 'isTer': True, 'accept': 'number'}
   {5579}
5580  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'return'}
   {6876, 6660, 5580}
5581  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'for'}
   {6877, 6661, 5581}
5582  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '!='}
   {6878, 6662, 5582}
5583  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': ','}
   {5583, 6879, 6663}
5584  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '#'}
   {6664, 5584, 6880}
5585  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'int'}
   {6665, 5585, 6881}
5586  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'if'}
   {6882, 6666, 5586}
5587  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '('}
   {6667, 5587, 6883}
5588  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'else'}
   {6884, 6668, 5588}
5589  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '*'}
   {5589, 6885, 6669}
5590  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '-='}
   {6886, 6670, 5590}
5591  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'identifier'}
   {5591, 6887, 6671}
5592  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '<='}
   {6672, 5592, 6888}
5593  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '>'}
   {6673, 5593, 6889}
5594  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'void'}
   {6890, 6674, 5594}
5595  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '/='}
   {6675, 5595, 6891}
5596  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '/'}
   {6892, 6676, 5596}
5597  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'while'}
   {5597, 6893, 6677}
5598  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '-'}
   {6894, 6678, 5598}
5599  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': ';'}
   {5599, 6895, 6679}
5600  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '=='}
   {6680, 5600, 6896}
5601  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '<'}
   {6681, 6897, 5601}
5602  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'break'}
   {5602, 6898, 6682}
5603  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '='}
   {5603, 6683, 6899}
5604  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '}'}
   {5604, 6900, 6684}
5605  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '+='}
   {6901, 5605, 6685}
5606  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '+'}
   {5606, 6902, 6686}
5607  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '*='}
   {6903, 5607, 6687}
5608  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '{'}
   {6688, 5608, 6904}
5609  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'continue'}
   {6689, 6905, 5609}
5610  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '>='}
   {5610, 6906, 6690}
5611  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': ')'}
   {5611, 6691, 6907}
5612  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'float'}
   {5612, 6908, 6692}
5613  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'double'}
   {6909, 5613, 6693}
5614  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'char'}
   {5614, 6910, 6694}
5615  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'number'}
   {6911, 5615, 6695}
5616  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'return'}
   {5616}
5617  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'for'}
   {5617}
5618  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '!='}
   {5618}
5619  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': ','}
   {5619}
5620  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '#'}
   {5620}
5621  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'int'}
   {5621}
5622  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'if'}
   {5622}
5623  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '('}
   {5623}
5624  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'else'}
   {5624}
5625  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '*'}
   {5625}
5626  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '-='}
   {5626}
5627  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'identifier'}
   {5627}
5628  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '<='}
   {5628}
5629  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '>'}
   {5629}
5630  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'void'}
   {5630}
5631  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '/='}
   {5631}
5632  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '/'}
   {5632}
5633  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'while'}
   {5633}
5634  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '-'}
   {5634}
5635  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': ';'}
   {5635}
5636  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '=='}
   {5636}
5637  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '<'}
   {5637}
5638  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'break'}
   {5638}
5639  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '='}
   {5639}
5640  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '}'}
   {5640}
5641  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '+='}
   {5641}
5642  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '+'}
   {5642}
5643  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '*='}
   {5643}
5644  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '{'}
   {5644}
5645  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'continue'}
   {5645}
5646  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': '>='}
   {5646}
5647  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': ')'}
   {5647}
5648  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'float'}
   {5648}
5649  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'double'}
   {5649}
5650  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'char'}
   {5650}
5651  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'number'}
   {5651}
5652  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'return'}
   {5076, 5652}
5653  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'for'}
   {5653, 5077}
5654  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '!='}
   {5078, 5654}
5655  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': ','}
   {5655, 5079}
5656  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '#'}
   {5080, 5656}
5657  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'int'}
   {5081, 5657}
5658  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'if'}
   {5082, 5658}
5659  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '('}
   {5659, 5083}
5660  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'else'}
   {5084, 5660}
5661  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '*'}
   {5661, 5085}
5662  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '-='}
   {5086, 5662}
5663  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'identifier'}
   {5663, 5087}
5664  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '<='}
   {5088, 5664}
5665  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '>'}
   {5089, 5665}
5666  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'void'}
   {5090, 5666}
5667  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '/='}
   {5667, 5091}
5668  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '/'}
   {5092, 5668}
5669  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'while'}
   {5669, 5093}
5670  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '-'}
   {5670, 5094}
5671  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': ';'}
   {5671, 5095}
5672  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '=='}
   {5096, 5672}
5673  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '<'}
   {5097, 5673}
5674  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'break'}
   {5098, 5674}
5675  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '='}
   {5675, 5099}
5676  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '}'}
   {5100, 5676}
5677  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '+='}
   {5677, 5101}
5678  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '+'}
   {5678, 5102}
5679  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '*='}
   {5679, 5103}
5680  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '{'}
   {5104, 5680}
5681  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'continue'}
   {5105, 5681}
5682  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '>='}
   {5106, 5682}
5683  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': ')'}
   {5683, 5107}
5684  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'float'}
   {5108, 5684}
5685  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'double'}
   {5685, 5109}
5686  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'char'}
   {5686, 5110}
5687  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'number'}
   {5687, 5111}
5688  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'return'}
   {5688}
5689  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'for'}
   {5689}
5690  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '!='}
   {5690}
5691  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': ','}
   {5691}
5692  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '#'}
   {5692}
5693  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'int'}
   {5693}
5694  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'if'}
   {5694}
5695  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '('}
   {5695}
5696  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'else'}
   {5696}
5697  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '*'}
   {5697}
5698  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '-='}
   {5698}
5699  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'identifier'}
   {5699}
5700  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '<='}
   {5700}
5701  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '>'}
   {5701}
5702  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'void'}
   {5702}
5703  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '/='}
   {5703}
5704  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '/'}
   {5704}
5705  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'while'}
   {5705}
5706  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '-'}
   {5706}
5707  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': ';'}
   {5707}
5708  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '=='}
   {5708}
5709  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '<'}
   {5709}
5710  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'break'}
   {5710}
5711  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '='}
   {5711}
5712  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '}'}
   {5712}
5713  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '+='}
   {5713}
5714  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '+'}
   {5714}
5715  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '*='}
   {5715}
5716  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '{'}
   {5716}
5717  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'continue'}
   {5717}
5718  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': '>='}
   {5718}
5719  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': ')'}
   {5719}
5720  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'float'}
   {5720}
5721  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'double'}
   {5721}
5722  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'char'}
   {5722}
5723  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 65, 'isTer': True, 'accept': 'number'}
   {5723}
5724  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'return'}
   {515, 587, 720, 659, 371, 443, 5724}
5725  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'for'}
   {515, 587, 721, 659, 371, 443, 5725}
5726  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '!='}
   {515, 587, 722, 659, 371, 443, 5726}
5727  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': ','}
   {515, 587, 723, 659, 371, 443, 5727}
5728  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '#'}
   {5728, 515, 587, 659, 724, 371, 443}
5729  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'int'}
   {5729, 515, 587, 659, 371, 725, 443}
5730  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'if'}
   {5730, 515, 587, 659, 371, 726, 443}
5731  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '('}
   {515, 5731, 587, 659, 371, 727, 443}
5732  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'else'}
   {515, 5732, 587, 659, 371, 728, 443}
5733  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '*'}
   {515, 5733, 587, 659, 371, 729, 443}
5734  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '-='}
   {515, 5734, 587, 659, 371, 730, 443}
5735  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'identifier'}
   {515, 5735, 587, 659, 371, 443, 731}
5736  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '<='}
   {515, 5736, 587, 659, 371, 443, 732}
5737  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '>'}
   {515, 5737, 587, 659, 371, 443, 733}
5738  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'void'}
   {515, 5738, 587, 659, 371, 443, 734}
5739  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '/='}
   {515, 587, 5739, 659, 371, 443, 735}
5740  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '/'}
   {736, 515, 587, 5740, 659, 371, 443}
5741  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'while'}
   {737, 515, 587, 5741, 659, 371, 443}
5742  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '-'}
   {738, 515, 587, 5742, 659, 371, 443}
5743  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': ';'}
   {739, 515, 587, 5743, 659, 371, 443}
5744  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '=='}
   {515, 740, 587, 5744, 659, 371, 443}
5745  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '<'}
   {515, 741, 587, 5745, 659, 371, 443}
5746  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'break'}
   {515, 742, 587, 5746, 659, 371, 443}
5747  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '='}
   {515, 743, 587, 659, 371, 5747, 443}
5748  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '}'}
   {515, 744, 587, 659, 371, 5748, 443}
5749  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '+='}
   {515, 745, 587, 659, 371, 5749, 443}
5750  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '+'}
   {515, 746, 587, 659, 371, 5750, 443}
5751  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '*='}
   {515, 587, 747, 659, 371, 5751, 443}
5752  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '{'}
   {515, 587, 748, 659, 371, 5752, 443}
5753  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'continue'}
   {515, 587, 749, 659, 371, 5753, 443}
5754  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': '>='}
   {515, 587, 750, 659, 371, 5754, 443}
5755  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': ')'}
   {515, 587, 5755, 751, 659, 371, 443}
5756  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'float'}
   {515, 587, 752, 659, 371, 443, 5756}
5757  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'double'}
   {515, 587, 753, 659, 371, 443, 5757}
5758  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'char'}
   {515, 587, 754, 659, 371, 443, 5758}
5759  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 66, 'isTer': False, 'accept': 'number'}
   {515, 587, 755, 659, 371, 443, 5759}
5760  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'return'}
   {5760}
5761  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'for'}
   {5761}
5762  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '!='}
   {5762}
5763  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': ','}
   {5763}
5764  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '#'}
   {5764}
5765  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'int'}
   {5765}
5766  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'if'}
   {5766}
5767  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '('}
   {5767}
5768  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'else'}
   {5768}
5769  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '*'}
   {5769}
5770  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '-='}
   {5770}
5771  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'identifier'}
   {5771}
5772  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '<='}
   {5772}
5773  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '>'}
   {5773}
5774  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'void'}
   {5774}
5775  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '/='}
   {5775}
5776  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '/'}
   {5776}
5777  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'while'}
   {5777}
5778  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '-'}
   {5778}
5779  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': ';'}
   {5779}
5780  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '=='}
   {5780}
5781  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '<'}
   {5781}
5782  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'break'}
   {5782}
5783  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '='}
   {5783}
5784  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '}'}
   {5784}
5785  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '+='}
   {5785}
5786  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '+'}
   {5786}
5787  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '*='}
   {5787}
5788  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '{'}
   {5788}
5789  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'continue'}
   {5789}
5790  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': '>='}
   {5790}
5791  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': ')'}
   {5791}
5792  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'float'}
   {5792}
5793  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'double'}
   {5793}
5794  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'char'}
   {5794}
5795  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 66, 'isTer': True, 'accept': 'number'}
   {5795}
5796  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'return'}
   {2719, 2703, 3043, 5796, 3151}
5797  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'for'}
   {3043, 5797, 2703, 3151, 2719}
5798  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '!='}
   {3043, 5798, 2703, 3151, 2719}
5799  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': ','}
   {3043, 5799, 2703, 3151, 2719}
5800  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '#'}
   {3043, 5800, 2703, 3151, 2719}
5801  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'int'}
   {3043, 5801, 2703, 3151, 2719}
5802  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'if'}
   {3043, 5802, 2703, 3151, 2719}
5803  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '('}
   {3043, 5803, 2703, 3151, 2719}
5804  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'else'}
   {3043, 5804, 2703, 3151, 2719}
5805  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '*'}
   {3043, 5805, 2703, 3151, 2719}
5806  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '-='}
   {3043, 5806, 2703, 3151, 2719}
5807  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'identifier'}
   {3043, 2703, 3151, 5807, 2719}
5808  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '<='}
   {3043, 2703, 5808, 3151, 2719}
5809  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '>'}
   {3043, 2703, 3151, 5809, 2719}
5810  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'void'}
   {3043, 2703, 3151, 5810, 2719}
5811  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '/='}
   {3043, 2703, 3151, 5811, 2719}
5812  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '/'}
   {3043, 2703, 3151, 5812, 2719}
5813  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'while'}
   {3043, 2703, 3151, 5813, 2719}
5814  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '-'}
   {3043, 2703, 3151, 5814, 2719}
5815  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': ';'}
   {3043, 2703, 3151, 5815, 2719}
5816  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '=='}
   {3043, 2703, 3151, 5816, 2719}
5817  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '<'}
   {3043, 2703, 3151, 5817, 2719}
5818  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'break'}
   {3043, 2703, 3151, 5818, 2719}
5819  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '='}
   {3043, 2703, 3151, 5819, 2719}
5820  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '}'}
   {3043, 2703, 3151, 5820, 2719}
5821  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '+='}
   {3043, 2703, 3151, 5821, 2719}
5822  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '+'}
   {3043, 2703, 3151, 5822, 2719}
5823  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '*='}
   {3043, 2703, 3151, 5823, 2719}
5824  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '{'}
   {5824, 3043, 2703, 3151, 2719}
5825  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'continue'}
   {5825, 3043, 2703, 3151, 2719}
5826  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '>='}
   {5826, 3043, 2703, 3151, 2719}
5827  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': ')'}
   {5827, 3043, 2703, 3151, 2719}
5828  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'float'}
   {3043, 5828, 2703, 3151, 2719}
5829  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'double'}
   {3043, 5829, 2703, 3151, 2719}
5830  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'char'}
   {3043, 5830, 2703, 3151, 2719}
5831  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'number'}
   {3043, 5831, 2703, 3151, 2719}
5832  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'return'}
   {5832}
5833  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'for'}
   {5833}
5834  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '!='}
   {5834}
5835  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': ','}
   {5835}
5836  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '#'}
   {5836}
5837  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'int'}
   {5837}
5838  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'if'}
   {5838}
5839  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '('}
   {5839}
5840  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'else'}
   {5840}
5841  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '*'}
   {5841}
5842  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '-='}
   {5842}
5843  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'identifier'}
   {5843}
5844  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '<='}
   {5844}
5845  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '>'}
   {5845}
5846  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'void'}
   {5846}
5847  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '/='}
   {5847}
5848  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '/'}
   {5848}
5849  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'while'}
   {5849}
5850  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '-'}
   {5850}
5851  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': ';'}
   {5851}
5852  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '=='}
   {5852}
5853  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '<'}
   {5853}
5854  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'break'}
   {5854}
5855  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '='}
   {5855}
5856  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '}'}
   {5856}
5857  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '+='}
   {5857}
5858  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '+'}
   {5858}
5859  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '*='}
   {5859}
5860  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '{'}
   {5860}
5861  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'continue'}
   {5861}
5862  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': '>='}
   {5862}
5863  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': ')'}
   {5863}
5864  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'float'}
   {5864}
5865  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'double'}
   {5865}
5866  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'char'}
   {5866}
5867  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 67, 'isTer': False, 'accept': 'number'}
   {5867}
5868  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'return'}
   {5868}
5869  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'for'}
   {5869}
5870  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '!='}
   {5870}
5871  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': ','}
   {5871}
5872  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '#'}
   {5872}
5873  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'int'}
   {5873}
5874  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'if'}
   {5874}
5875  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '('}
   {5875}
5876  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'else'}
   {5876}
5877  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '*'}
   {5877}
5878  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '-='}
   {5878}
5879  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'identifier'}
   {5879}
5880  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '<='}
   {5880}
5881  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '>'}
   {5881}
5882  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'void'}
   {5882}
5883  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '/='}
   {5883}
5884  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '/'}
   {5884}
5885  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'while'}
   {5885}
5886  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '-'}
   {5886}
5887  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': ';'}
   {5887}
5888  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '=='}
   {5888}
5889  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '<'}
   {5889}
5890  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'break'}
   {5890}
5891  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '='}
   {5891}
5892  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '}'}
   {5892}
5893  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '+='}
   {5893}
5894  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '+'}
   {5894}
5895  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '*='}
   {5895}
5896  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '{'}
   {5896}
5897  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'continue'}
   {5897}
5898  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': '>='}
   {5898}
5899  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': ')'}
   {5899}
5900  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'float'}
   {5900}
5901  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'double'}
   {5901}
5902  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'char'}
   {5902}
5903  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 67, 'isTer': True, 'accept': 'number'}
   {5903}
5904  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'return'}
   {5904}
5905  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'for'}
   {5905}
5906  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '!='}
   {5906}
5907  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': ','}
   {5907}
5908  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '#'}
   {5908}
5909  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'int'}
   {5909}
5910  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'if'}
   {5910}
5911  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '('}
   {5911}
5912  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'else'}
   {5912}
5913  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '*'}
   {5913}
5914  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '-='}
   {5914}
5915  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'identifier'}
   {5915}
5916  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '<='}
   {5916}
5917  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '>'}
   {5917}
5918  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'void'}
   {5918}
5919  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '/='}
   {5919}
5920  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '/'}
   {5920}
5921  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'while'}
   {5921}
5922  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '-'}
   {5922}
5923  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': ';'}
   {5923}
5924  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '=='}
   {5924}
5925  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '<'}
   {5925}
5926  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'break'}
   {5926}
5927  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '='}
   {5927}
5928  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '}'}
   {5928}
5929  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '+='}
   {5929}
5930  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '+'}
   {5930}
5931  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '*='}
   {5931}
5932  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '{'}
   {5932}
5933  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'continue'}
   {5933}
5934  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '>='}
   {5934}
5935  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': ')'}
   {5935}
5936  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'float'}
   {5936}
5937  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'double'}
   {5937}
5938  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'char'}
   {5938}
5939  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'number'}
   {5939}
5940  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'return'}
   {5940}
5941  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'for'}
   {5941}
5942  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '!='}
   {5942}
5943  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': ','}
   {5943}
5944  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '#'}
   {5944}
5945  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'int'}
   {5945}
5946  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'if'}
   {5946}
5947  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '('}
   {5947}
5948  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'else'}
   {5948}
5949  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '*'}
   {5949}
5950  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '-='}
   {5950}
5951  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'identifier'}
   {5951}
5952  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '<='}
   {5952}
5953  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '>'}
   {5953}
5954  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'void'}
   {5954}
5955  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '/='}
   {5955}
5956  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '/'}
   {5956}
5957  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'while'}
   {5957}
5958  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '-'}
   {5958}
5959  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': ';'}
   {5959}
5960  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '=='}
   {5960}
5961  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '<'}
   {5961}
5962  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'break'}
   {5962}
5963  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '='}
   {5963}
5964  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '}'}
   {5964}
5965  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '+='}
   {5965}
5966  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '+'}
   {5966}
5967  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '*='}
   {5967}
5968  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '{'}
   {5968}
5969  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'continue'}
   {5969}
5970  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': '>='}
   {5970}
5971  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': ')'}
   {5971}
5972  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'float'}
   {5972}
5973  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'double'}
   {5973}
5974  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'char'}
   {5974}
5975  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'number'}
   {5975}
5976  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'return'}
   {5976}
5977  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'for'}
   {5977}
5978  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '!='}
   {5978}
5979  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': ','}
   {5979}
5980  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '#'}
   {5980}
5981  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'int'}
   {5981}
5982  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'if'}
   {5982}
5983  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '('}
   {5983}
5984  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'else'}
   {5984}
5985  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '*'}
   {5985}
5986  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '-='}
   {5986}
5987  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'identifier'}
   {5987}
5988  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '<='}
   {5988}
5989  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '>'}
   {5989}
5990  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'void'}
   {5990}
5991  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '/='}
   {5991}
5992  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '/'}
   {5992}
5993  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'while'}
   {5993}
5994  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '-'}
   {5994}
5995  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': ';'}
   {5995}
5996  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '=='}
   {5996}
5997  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '<'}
   {5997}
5998  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'break'}
   {5998}
5999  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '='}
   {5999}
6000  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '}'}
   {6000}
6001  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '+='}
   {6001}
6002  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '+'}
   {6002}
6003  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '*='}
   {6003}
6004  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '{'}
   {6004}
6005  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'continue'}
   {6005}
6006  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': '>='}
   {6006}
6007  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': ')'}
   {6007}
6008  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'float'}
   {6008}
6009  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'double'}
   {6009}
6010  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'char'}
   {6010}
6011  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'number'}
   {6011}
6012  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'return'}
   {6012}
6013  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'for'}
   {6013}
6014  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '!='}
   {6014}
6015  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': ','}
   {6015}
6016  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '#'}
   {6016}
6017  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'int'}
   {6017}
6018  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'if'}
   {6018}
6019  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '('}
   {6019}
6020  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'else'}
   {6020}
6021  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '*'}
   {6021}
6022  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '-='}
   {6022}
6023  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'identifier'}
   {6023}
6024  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '<='}
   {6024}
6025  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '>'}
   {6025}
6026  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'void'}
   {6026}
6027  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '/='}
   {6027}
6028  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '/'}
   {6028}
6029  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'while'}
   {6029}
6030  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '-'}
   {6030}
6031  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': ';'}
   {6031}
6032  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '=='}
   {6032}
6033  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '<'}
   {6033}
6034  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'break'}
   {6034}
6035  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '='}
   {6035}
6036  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '}'}
   {6036}
6037  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '+='}
   {6037}
6038  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '+'}
   {6038}
6039  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '*='}
   {6039}
6040  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '{'}
   {6040}
6041  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'continue'}
   {6041}
6042  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '>='}
   {6042}
6043  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': ')'}
   {6043}
6044  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'float'}
   {6044}
6045  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'double'}
   {6045}
6046  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'char'}
   {6046}
6047  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'number'}
   {6047}
6048  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'return'}
   {6048}
6049  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'for'}
   {6049}
6050  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '!='}
   {6050}
6051  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': ','}
   {6051}
6052  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '#'}
   {6052}
6053  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'int'}
   {6053}
6054  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'if'}
   {6054}
6055  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '('}
   {6055}
6056  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'else'}
   {6056}
6057  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '*'}
   {6057}
6058  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '-='}
   {6058}
6059  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'identifier'}
   {6059}
6060  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '<='}
   {6060}
6061  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '>'}
   {6061}
6062  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'void'}
   {6062}
6063  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '/='}
   {6063}
6064  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '/'}
   {6064}
6065  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'while'}
   {6065}
6066  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '-'}
   {6066}
6067  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': ';'}
   {6067}
6068  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '=='}
   {6068}
6069  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '<'}
   {6069}
6070  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'break'}
   {6070}
6071  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '='}
   {6071}
6072  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '}'}
   {6072}
6073  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '+='}
   {6073}
6074  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '+'}
   {6074}
6075  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '*='}
   {6075}
6076  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '{'}
   {6076}
6077  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'continue'}
   {6077}
6078  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': '>='}
   {6078}
6079  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': ')'}
   {6079}
6080  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'float'}
   {6080}
6081  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'double'}
   {6081}
6082  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'char'}
   {6082}
6083  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'number'}
   {6083}
6084  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'return'}
   {6084}
6085  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'for'}
   {6085}
6086  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '!='}
   {6086}
6087  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': ','}
   {6087}
6088  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '#'}
   {6088}
6089  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'int'}
   {6089}
6090  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'if'}
   {6090}
6091  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '('}
   {6091}
6092  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'else'}
   {6092}
6093  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '*'}
   {6093}
6094  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '-='}
   {6094}
6095  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'identifier'}
   {6095}
6096  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '<='}
   {6096}
6097  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '>'}
   {6097}
6098  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'void'}
   {6098}
6099  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '/='}
   {6099}
6100  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '/'}
   {6100}
6101  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'while'}
   {6101}
6102  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '-'}
   {6102}
6103  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': ';'}
   {6103}
6104  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '=='}
   {6104}
6105  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '<'}
   {6105}
6106  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'break'}
   {6106}
6107  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '='}
   {6107}
6108  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '}'}
   {6108}
6109  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '+='}
   {6109}
6110  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '+'}
   {6110}
6111  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '*='}
   {6111}
6112  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '{'}
   {6112}
6113  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'continue'}
   {6113}
6114  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': '>='}
   {6114}
6115  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': ')'}
   {6115}
6116  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'float'}
   {6116}
6117  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'double'}
   {6117}
6118  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'char'}
   {6118}
6119  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 69, 'isTer': True, 'accept': 'number'}
   {6119}
6120  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'return'}
   {6120}
6121  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'for'}
   {6121}
6122  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '!='}
   {6122}
6123  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': ','}
   {6123}
6124  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '#'}
   {6124}
6125  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'int'}
   {6125}
6126  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'if'}
   {6126}
6127  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '('}
   {6127}
6128  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'else'}
   {6128}
6129  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '*'}
   {6129}
6130  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '-='}
   {6130}
6131  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'identifier'}
   {6131}
6132  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '<='}
   {6132}
6133  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '>'}
   {6133}
6134  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'void'}
   {6134}
6135  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '/='}
   {6135}
6136  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '/'}
   {6136}
6137  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'while'}
   {6137}
6138  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '-'}
   {6138}
6139  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': ';'}
   {6139}
6140  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '=='}
   {6140}
6141  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '<'}
   {6141}
6142  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'break'}
   {6142}
6143  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '='}
   {6143}
6144  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '}'}
   {6144}
6145  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '+='}
   {6145}
6146  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '+'}
   {6146}
6147  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '*='}
   {6147}
6148  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '{'}
   {6148}
6149  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'continue'}
   {6149}
6150  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '>='}
   {6150}
6151  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': ')'}
   {6151}
6152  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'float'}
   {6152}
6153  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'double'}
   {6153}
6154  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'char'}
   {6154}
6155  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'number'}
   {6155}
6156  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'return'}
   {3331, 6156, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6157  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'for'}
   {3331, 6157, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6158  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '!='}
   {3331, 6158, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6159  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': ','}
   {3331, 6159, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6160  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '#'}
   {3331, 6160, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6161  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'int'}
   {3331, 6161, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6162  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'if'}
   {3331, 6162, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6163  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '('}
   {3331, 6163, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6164  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'else'}
   {3331, 6164, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6165  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '*'}
   {3331, 6165, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6166  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '-='}
   {3331, 6166, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6167  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'identifier'}
   {3331, 6167, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6168  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '<='}
   {3331, 6168, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6169  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '>'}
   {3331, 6169, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6170  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'void'}
   {3331, 6170, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6171  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '/='}
   {3331, 6171, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6172  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '/'}
   {3331, 6172, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6173  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'while'}
   {3331, 6173, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6174  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '-'}
   {3331, 6174, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6175  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': ';'}
   {3331, 6175, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6176  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '=='}
   {3331, 6176, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6177  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '<'}
   {3331, 6177, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6178  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'break'}
   {3331, 6178, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6179  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '='}
   {3331, 6179, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6180  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '}'}
   {3331, 6180, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6181  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '+='}
   {3331, 6181, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6182  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '+'}
   {3331, 6182, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6183  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '*='}
   {3331, 6183, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6184  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '{'}
   {3331, 6184, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6185  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'continue'}
   {3331, 6185, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6186  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': '>='}
   {3331, 6186, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6187  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': ')'}
   {3331, 6187, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6188  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'float'}
   {3331, 6188, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6189  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'double'}
   {3331, 6189, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6190  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'char'}
   {3331, 6190, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6191  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'number'}
   {3331, 6191, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6192  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'return'}
   {6192}
6193  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'for'}
   {6193}
6194  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '!='}
   {6194}
6195  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': ','}
   {6195}
6196  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '#'}
   {6196}
6197  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'int'}
   {6197}
6198  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'if'}
   {6198}
6199  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '('}
   {6199}
6200  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'else'}
   {6200}
6201  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '*'}
   {6201}
6202  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '-='}
   {6202}
6203  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'identifier'}
   {6203}
6204  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '<='}
   {6204}
6205  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '>'}
   {6205}
6206  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'void'}
   {6206}
6207  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '/='}
   {6207}
6208  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '/'}
   {6208}
6209  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'while'}
   {6209}
6210  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '-'}
   {6210}
6211  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': ';'}
   {6211}
6212  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '=='}
   {6212}
6213  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '<'}
   {6213}
6214  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'break'}
   {6214}
6215  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '='}
   {6215}
6216  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '}'}
   {6216}
6217  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '+='}
   {6217}
6218  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '+'}
   {6218}
6219  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '*='}
   {6219}
6220  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '{'}
   {6220}
6221  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'continue'}
   {6221}
6222  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': '>='}
   {6222}
6223  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': ')'}
   {6223}
6224  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'float'}
   {6224}
6225  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'double'}
   {6225}
6226  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'char'}
   {6226}
6227  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 70, 'isTer': False, 'accept': 'number'}
   {6227}
6228  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'return'}
   {6228}
6229  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'for'}
   {6229}
6230  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '!='}
   {6230}
6231  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': ','}
   {6231}
6232  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '#'}
   {6232}
6233  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'int'}
   {6233}
6234  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'if'}
   {6234}
6235  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '('}
   {6235}
6236  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'else'}
   {6236}
6237  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '*'}
   {6237}
6238  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '-='}
   {6238}
6239  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'identifier'}
   {6239}
6240  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '<='}
   {6240}
6241  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '>'}
   {6241}
6242  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'void'}
   {6242}
6243  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '/='}
   {6243}
6244  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '/'}
   {6244}
6245  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'while'}
   {6245}
6246  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '-'}
   {6246}
6247  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': ';'}
   {6247}
6248  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '=='}
   {6248}
6249  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '<'}
   {6249}
6250  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'break'}
   {6250}
6251  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '='}
   {6251}
6252  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '}'}
   {6252}
6253  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '+='}
   {6253}
6254  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '+'}
   {6254}
6255  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '*='}
   {6255}
6256  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '{'}
   {6256}
6257  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'continue'}
   {6257}
6258  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': '>='}
   {6258}
6259  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': ')'}
   {6259}
6260  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'float'}
   {6260}
6261  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'double'}
   {6261}
6262  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'char'}
   {6262}
6263  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 70, 'isTer': True, 'accept': 'number'}
   {6263}
6264  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'return'}
   {6264}
6265  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'for'}
   {6265}
6266  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '!='}
   {6266}
6267  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': ','}
   {6267}
6268  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '#'}
   {6268}
6269  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'int'}
   {6269}
6270  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'if'}
   {6270}
6271  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '('}
   {6271}
6272  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'else'}
   {6272}
6273  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '*'}
   {6273}
6274  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '-='}
   {6274}
6275  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'identifier'}
   {6275}
6276  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '<='}
   {6276}
6277  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '>'}
   {6277}
6278  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'void'}
   {6278}
6279  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '/='}
   {6279}
6280  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '/'}
   {6280}
6281  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'while'}
   {6281}
6282  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '-'}
   {6282}
6283  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': ';'}
   {6283}
6284  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '=='}
   {6284}
6285  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '<'}
   {6285}
6286  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'break'}
   {6286}
6287  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '='}
   {6287}
6288  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '}'}
   {6288}
6289  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '+='}
   {6289}
6290  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '+'}
   {6290}
6291  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '*='}
   {6291}
6292  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '{'}
   {6292}
6293  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'continue'}
   {6293}
6294  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '>='}
   {6294}
6295  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': ')'}
   {6295}
6296  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'float'}
   {6296}
6297  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'double'}
   {6297}
6298  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'char'}
   {6298}
6299  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'number'}
   {6299}
6300  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'return'}
   {6300}
6301  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'for'}
   {6301}
6302  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '!='}
   {6302}
6303  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': ','}
   {6303}
6304  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '#'}
   {6304}
6305  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'int'}
   {6305}
6306  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'if'}
   {6306}
6307  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '('}
   {6307}
6308  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'else'}
   {6308}
6309  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '*'}
   {6309}
6310  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '-='}
   {6310}
6311  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'identifier'}
   {6311}
6312  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '<='}
   {6312}
6313  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '>'}
   {6313}
6314  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'void'}
   {6314}
6315  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '/='}
   {6315}
6316  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '/'}
   {6316}
6317  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'while'}
   {6317}
6318  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '-'}
   {6318}
6319  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': ';'}
   {6319}
6320  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '=='}
   {6320}
6321  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '<'}
   {6321}
6322  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'break'}
   {6322}
6323  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '='}
   {6323}
6324  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '}'}
   {6324}
6325  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '+='}
   {6325}
6326  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '+'}
   {6326}
6327  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '*='}
   {6327}
6328  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '{'}
   {6328}
6329  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'continue'}
   {6329}
6330  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': '>='}
   {6330}
6331  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': ')'}
   {6331}
6332  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'float'}
   {6332}
6333  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'double'}
   {6333}
6334  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'char'}
   {6334}
6335  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 71, 'isTer': False, 'accept': 'number'}
   {6335}
6336  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'return'}
   {6336}
6337  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'for'}
   {6337}
6338  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '!='}
   {6338}
6339  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': ','}
   {6339}
6340  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '#'}
   {6340}
6341  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'int'}
   {6341}
6342  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'if'}
   {6342}
6343  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '('}
   {6343}
6344  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'else'}
   {6344}
6345  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '*'}
   {6345}
6346  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '-='}
   {6346}
6347  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'identifier'}
   {6347}
6348  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '<='}
   {6348}
6349  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '>'}
   {6349}
6350  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'void'}
   {6350}
6351  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '/='}
   {6351}
6352  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '/'}
   {6352}
6353  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'while'}
   {6353}
6354  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '-'}
   {6354}
6355  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': ';'}
   {6355}
6356  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '=='}
   {6356}
6357  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '<'}
   {6357}
6358  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'break'}
   {6358}
6359  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '='}
   {6359}
6360  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '}'}
   {6360}
6361  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '+='}
   {6361}
6362  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '+'}
   {6362}
6363  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '*='}
   {6363}
6364  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '{'}
   {6364}
6365  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'continue'}
   {6365}
6366  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': '>='}
   {6366}
6367  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': ')'}
   {6367}
6368  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'float'}
   {6368}
6369  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'double'}
   {6369}
6370  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'char'}
   {6370}
6371  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 71, 'isTer': True, 'accept': 'number'}
   {6371}
6372  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {6372}
6373  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {6373}
6374  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '!='}
   {6374}
6375  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': ','}
   {6375}
6376  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '#'}
   {6376}
6377  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {6377}
6378  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {6378}
6379  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '('}
   {6379}
6380  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {6380}
6381  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '*'}
   {6381}
6382  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '-='}
   {6382}
6383  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {6383}
6384  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '<='}
   {6384}
6385  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '>'}
   {6385}
6386  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {6386}
6387  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '/='}
   {6387}
6388  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '/'}
   {6388}
6389  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {6389}
6390  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '-'}
   {6390}
6391  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': ';'}
   {6391}
6392  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '=='}
   {6392}
6393  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '<'}
   {6393}
6394  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {6394}
6395  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '='}
   {6395}
6396  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '}'}
   {6396}
6397  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '+='}
   {6397}
6398  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '+'}
   {6398}
6399  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '*='}
   {6399}
6400  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '{'}
   {6400}
6401  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {6401}
6402  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '>='}
   {6402}
6403  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': ')'}
   {6403}
6404  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {6404}
6405  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {6405}
6406  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {6406}
6407  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {6407}
6408  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {6408}
6409  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {6409}
6410  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '!='}
   {6410}
6411  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': ','}
   {6411}
6412  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '#'}
   {6412}
6413  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {6413}
6414  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {6414}
6415  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '('}
   {6415}
6416  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {6416}
6417  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '*'}
   {6417}
6418  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '-='}
   {6418}
6419  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {6419}
6420  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '<='}
   {6420}
6421  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '>'}
   {6421}
6422  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {6422}
6423  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '/='}
   {6423}
6424  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '/'}
   {6424}
6425  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {6425}
6426  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '-'}
   {6426}
6427  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': ';'}
   {6427}
6428  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '=='}
   {6428}
6429  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '<'}
   {6429}
6430  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {6430}
6431  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '='}
   {6431}
6432  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '}'}
   {6432}
6433  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '+='}
   {6433}
6434  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '+'}
   {6434}
6435  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '*='}
   {6435}
6436  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '{'}
   {6436}
6437  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {6437}
6438  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': '>='}
   {6438}
6439  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': ')'}
   {6439}
6440  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {6440}
6441  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {6441}
6442  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {6442}
6443  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {6443}
6444  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {3343, 6444, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6445  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {3343, 6445, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6446  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '!='}
   {3343, 6446, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6447  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': ','}
   {3343, 6447, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6448  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '#'}
   {3343, 6448, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6449  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {3343, 6449, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6450  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {3343, 6450, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6451  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '('}
   {3343, 6451, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6452  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {3343, 6452, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6453  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '*'}
   {3343, 6453, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6454  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '-='}
   {3343, 6454, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6455  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {3343, 1334, 6455, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6456  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '<='}
   {3343, 1334, 6456, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6457  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '>'}
   {3343, 1334, 6457, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6458  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {3343, 1334, 6458, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6459  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '/='}
   {3343, 1334, 6459, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6460  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '/'}
   {3343, 1334, 6460, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6461  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {3343, 1334, 6461, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6462  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '-'}
   {3343, 1334, 1341, 6462, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6463  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': ';'}
   {3343, 1334, 1341, 6463, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6464  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '=='}
   {3343, 1334, 1341, 6464, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6465  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '<'}
   {3343, 1334, 1341, 1344, 6465, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6466  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {3343, 1334, 1341, 1344, 1345, 6466, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6467  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '='}
   {3343, 1334, 1341, 1344, 1345, 6467, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6468  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '}'}
   {3343, 1334, 1341, 1344, 1345, 6468, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6469  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '+='}
   {3343, 1334, 1341, 1344, 1345, 1348, 6469, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6470  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '+'}
   {3343, 1334, 1341, 1344, 1345, 1348, 6470, 1350, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6471  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '*='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 6471, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6472  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '{'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 6472, 1352, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6473  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 6473, 1353, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6474  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': '>='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6474, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6475  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': ')'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6475, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6476  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6476, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6477  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6477, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6478  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6478, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6479  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 6479, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6480  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {6480}
6481  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {6481}
6482  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '!='}
   {6482}
6483  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': ','}
   {6483}
6484  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '#'}
   {6484}
6485  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {6485}
6486  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {6486}
6487  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '('}
   {6487}
6488  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {6488}
6489  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '*'}
   {6489}
6490  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '-='}
   {6490}
6491  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {6491}
6492  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '<='}
   {6492}
6493  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '>'}
   {6493}
6494  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {6494}
6495  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '/='}
   {6495}
6496  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '/'}
   {6496}
6497  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {6497}
6498  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '-'}
   {6498}
6499  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': ';'}
   {6499}
6500  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '=='}
   {6500}
6501  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '<'}
   {6501}
6502  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {6502}
6503  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '='}
   {6503}
6504  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '}'}
   {6504}
6505  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '+='}
   {6505}
6506  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '+'}
   {6506}
6507  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '*='}
   {6507}
6508  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '{'}
   {6508}
6509  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {6509}
6510  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': '>='}
   {6510}
6511  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': ')'}
   {6511}
6512  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {6512}
6513  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {6513}
6514  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {6514}
6515  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {6515}
6516  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6516, 443, 5372}
6517  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6517, 443, 5372}
6518  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '!='}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6518, 443, 5372}
6519  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': ','}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6519, 443, 5372}
6520  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '#'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6520, 443, 5372}
6521  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6521, 443, 5372}
6522  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 6522, 443, 5372}
6523  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '('}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5660, 5084, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 6523, 5372}
6524  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5372, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 6524}
6525  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '*'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372, 6525}
6526  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '-='}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372, 6526}
6527  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372, 6527}
6528  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '<='}
   {6528, 6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6529  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '>'}
   {6272, 6529, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6530  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {6272, 6530, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6531  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '/='}
   {6272, 6531, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6532  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '/'}
   {6272, 515, 6532, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6533  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {6272, 515, 5444, 6533, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6534  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '-'}
   {6272, 515, 5444, 6020, 6534, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6535  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': ';'}
   {6272, 515, 5444, 6020, 6535, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6536  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '=='}
   {6272, 515, 5444, 6020, 6536, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6537  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '<'}
   {6272, 515, 5444, 6020, 6537, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6538  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {6272, 515, 5444, 6020, 6538, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6539  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '='}
   {6272, 515, 5444, 6020, 587, 6539, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5660, 5084, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6540  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '}'}
   {6272, 515, 5444, 6020, 587, 6540, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6541  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '+='}
   {6272, 515, 5444, 6020, 587, 5516, 6541, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6542  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '+'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 6542, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6543  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '*='}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 6543, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6544  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '{'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 6544, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6545  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 6545, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6546  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': '>='}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 6546, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6547  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': ')'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 6547, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6548  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 6548, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6549  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 6549, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6550  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 6550, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6551  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 6551, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6552  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {6552}
6553  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {6553}
6554  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '!='}
   {6554}
6555  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': ','}
   {6555}
6556  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '#'}
   {6556}
6557  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {6557}
6558  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {6558}
6559  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '('}
   {6559}
6560  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {6560}
6561  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '*'}
   {6561}
6562  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '-='}
   {6562}
6563  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {6563}
6564  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '<='}
   {6564}
6565  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '>'}
   {6565}
6566  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {6566}
6567  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '/='}
   {6567}
6568  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '/'}
   {6568}
6569  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {6569}
6570  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '-'}
   {6570}
6571  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': ';'}
   {6571}
6572  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '=='}
   {6572}
6573  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '<'}
   {6573}
6574  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {6574}
6575  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '='}
   {6575}
6576  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '}'}
   {6576}
6577  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '+='}
   {6577}
6578  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '+'}
   {6578}
6579  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '*='}
   {6579}
6580  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '{'}
   {6580}
6581  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {6581}
6582  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': '>='}
   {6582}
6583  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': ')'}
   {6583}
6584  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {6584}
6585  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {6585}
6586  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {6586}
6587  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {6587}
6588  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {515, 5508, 6660, 587, 5580, 3151, 720, 2703, 5904, 659, 5076, 5652, 5436, 5724, 6876, 2719, 3043, 5796, 6372, 6012, 6120, 371, 5364, 6264, 443, 6588}
6589  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {515, 5509, 6661, 587, 5581, 3151, 2703, 721, 5905, 659, 5077, 5653, 5437, 5725, 6877, 2719, 3043, 5797, 6373, 6121, 6013, 371, 5365, 6265, 443, 6589}
6590  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '!='}
   {515, 5510, 6662, 587, 5582, 3151, 2703, 722, 659, 5906, 5078, 5654, 5726, 2719, 5438, 6878, 3043, 5798, 6374, 6122, 6014, 371, 5366, 6266, 443, 6590}
6591  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': ','}
   {515, 5511, 6663, 587, 3151, 2703, 5583, 723, 659, 5907, 5655, 5079, 6015, 5727, 2719, 6879, 3043, 5439, 5799, 6375, 6267, 6123, 371, 5367, 443, 6591}
6592  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '#'}
   {6592, 5440, 6016, 515, 5512, 6664, 587, 3151, 2703, 5584, 659, 724, 5908, 5080, 5656, 2719, 5728, 6880, 3043, 5800, 6376, 6124, 371, 5368, 443, 6268}
6593  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {6593, 5441, 515, 6017, 5513, 6665, 587, 3151, 2703, 5585, 659, 725, 5909, 5081, 5657, 2719, 5729, 6881, 3043, 5801, 6377, 6125, 371, 5369, 443, 6269}
6594  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {6594, 515, 5442, 6018, 5514, 587, 6666, 3151, 2703, 5586, 659, 726, 5910, 5658, 5082, 2719, 5730, 3043, 6882, 5802, 6378, 6126, 371, 5370, 443, 6270}
6595  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '('}
   {6595, 515, 5443, 6019, 587, 5515, 6667, 5371, 3151, 2703, 659, 5587, 727, 5911, 5083, 5659, 2719, 5731, 3043, 6883, 5803, 6379, 6127, 371, 443, 6271}
6596  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {6272, 515, 6596, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6597  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '*'}
   {6273, 515, 6597, 5445, 6021, 587, 5517, 6669, 3151, 2703, 659, 5589, 729, 5913, 5661, 5085, 2719, 3043, 5733, 6885, 5805, 6381, 6129, 371, 443, 5373}
6598  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '-='}
   {6274, 515, 6598, 5446, 6022, 587, 5518, 3151, 2703, 6670, 659, 5590, 730, 5914, 5662, 5086, 2719, 3043, 5734, 6886, 5806, 6382, 6130, 371, 443, 5374}
6599  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {515, 6275, 6599, 5447, 6023, 587, 3151, 2703, 5519, 6671, 659, 5591, 731, 5915, 5663, 5087, 2719, 3043, 5735, 6887, 5807, 6383, 371, 6131, 443, 5375}
6600  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '<='}
   {5376, 515, 6276, 6600, 5448, 6024, 587, 3151, 2703, 5520, 6672, 659, 5592, 732, 5916, 2719, 5664, 5088, 3043, 5736, 6888, 5808, 6384, 371, 6132, 443}
6601  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '>'}
   {5377, 515, 6277, 6601, 5449, 587, 6025, 3151, 2703, 5521, 6673, 659, 5593, 733, 5917, 2719, 5089, 5665, 3043, 5737, 6889, 5809, 6385, 371, 6133, 443}
6602  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {5378, 515, 6278, 6602, 587, 5450, 6026, 3151, 2703, 5522, 659, 6674, 5594, 734, 2719, 5918, 5666, 5090, 3043, 5738, 6890, 5810, 371, 6386, 6134, 443}
6603  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '/='}
   {515, 5379, 6279, 587, 6603, 5451, 6027, 3151, 2703, 659, 5523, 6675, 5595, 735, 2719, 5919, 5667, 5091, 3043, 5739, 6891, 371, 5811, 6387, 6135, 443}
6604  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '/'}
   {515, 5380, 6280, 587, 6604, 5452, 6028, 3151, 2703, 659, 5524, 6676, 5596, 2719, 736, 5920, 3043, 5092, 5668, 5740, 6892, 371, 5812, 6388, 6136, 443}
6605  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {515, 5381, 6281, 587, 6605, 5453, 3151, 2703, 6029, 659, 5525, 6677, 5597, 2719, 737, 5921, 3043, 5093, 5669, 5741, 6893, 371, 5813, 6389, 6137, 443}
6606  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '-'}
   {515, 5382, 6282, 587, 6606, 3151, 2703, 5454, 6030, 659, 5526, 6678, 5598, 2719, 738, 3043, 5922, 5670, 5094, 5742, 6894, 371, 5814, 6390, 6138, 443}
6607  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': ';'}
   {515, 5383, 587, 6283, 6607, 3151, 2703, 5455, 659, 6031, 5527, 6679, 6391, 2719, 5599, 739, 3043, 5923, 5671, 5095, 6139, 5743, 6895, 371, 5815, 443}
6608  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '=='}
   {515, 5384, 587, 6284, 3151, 6608, 2703, 5456, 659, 6032, 5528, 6680, 2719, 6392, 5600, 3043, 740, 5924, 5672, 5096, 5744, 6896, 371, 5816, 443, 6140}
6609  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '<'}
   {515, 5385, 587, 6285, 3151, 2703, 6609, 5457, 659, 6033, 5529, 6681, 2719, 5601, 3043, 741, 5925, 6393, 5097, 5673, 5745, 6897, 371, 5817, 443, 6141}
6610  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {515, 5386, 587, 6286, 3151, 2703, 6610, 659, 5458, 6034, 5530, 6682, 2719, 5602, 3043, 742, 5926, 5098, 5674, 6394, 5746, 371, 6898, 5818, 443, 6142}
6611  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '='}
   {515, 587, 5387, 3151, 2703, 6287, 6611, 659, 5459, 6035, 5531, 6683, 5819, 2719, 3043, 5603, 743, 5927, 5099, 5675, 6395, 5747, 371, 6899, 443, 6143}
6612  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '}'}
   {6144, 515, 587, 5388, 3151, 2703, 6288, 659, 6612, 5460, 6036, 5532, 6684, 2719, 3043, 5604, 744, 5928, 5100, 5676, 371, 5748, 6396, 6900, 443, 5820}
6613  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '+='}
   {6145, 515, 587, 5389, 3151, 2703, 6289, 659, 6613, 5461, 6037, 5533, 6685, 2719, 3043, 5605, 745, 5929, 5677, 5101, 371, 5749, 6901, 6397, 443, 5821}
6614  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '+'}
   {6146, 515, 587, 5390, 3151, 2703, 6290, 659, 6614, 5462, 6038, 5534, 2719, 6686, 3043, 5606, 746, 5930, 5102, 5678, 371, 5750, 6902, 443, 6398, 5822}
6615  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '*='}
   {515, 6147, 6399, 587, 5391, 3151, 2703, 659, 6291, 6615, 5463, 6039, 2719, 5535, 6687, 3043, 5607, 747, 5931, 6903, 5679, 5103, 371, 5751, 443, 5823}
6616  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '{'}
   {5824, 6400, 515, 6148, 587, 3151, 5392, 2703, 659, 6292, 6616, 5464, 6040, 2719, 5536, 6688, 3043, 5608, 748, 5932, 5680, 5104, 6904, 371, 5752, 443}
6617  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {5825, 6401, 515, 6149, 587, 3151, 2703, 5393, 659, 6293, 6617, 5465, 6041, 2719, 5537, 6689, 3043, 5609, 749, 5933, 5105, 5681, 371, 6905, 5753, 443}
6618  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': '>='}
   {5826, 515, 6402, 6150, 587, 3151, 2703, 5394, 659, 6294, 6618, 5466, 6042, 2719, 5538, 3043, 6690, 6906, 5610, 750, 5934, 5682, 5106, 371, 5754, 443}
6619  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': ')'}
   {515, 5827, 6403, 6151, 587, 3151, 2703, 659, 5395, 6295, 6619, 5467, 6043, 2719, 3043, 5539, 6691, 5611, 751, 5935, 5683, 5107, 371, 443, 5755, 6907}
6620  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {515, 5828, 6404, 6908, 6152, 587, 3151, 2703, 659, 5396, 6296, 6620, 5468, 6044, 2719, 3043, 5540, 6692, 5612, 752, 5936, 371, 5108, 5684, 443, 5756}
6621  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {515, 5829, 6405, 6153, 6909, 587, 3151, 2703, 659, 5397, 6297, 6621, 5469, 2719, 6045, 3043, 5541, 6693, 5613, 753, 5937, 371, 5109, 5685, 443, 5757}
6622  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {515, 5830, 6406, 6154, 587, 6910, 3151, 2703, 659, 5398, 6298, 6622, 2719, 5470, 6046, 3043, 5542, 6694, 5614, 754, 371, 5938, 5686, 5110, 443, 5758}
6623  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {515, 5831, 6407, 587, 6155, 3151, 2703, 659, 6911, 5399, 6299, 6623, 2719, 5471, 6047, 3043, 5543, 6695, 5615, 755, 5111, 371, 5939, 5687, 443, 5759}
6624  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'return'}
   {6624}
6625  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'for'}
   {6625}
6626  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '!='}
   {6626}
6627  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': ','}
   {6627}
6628  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '#'}
   {6628}
6629  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'int'}
   {6629}
6630  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'if'}
   {6630}
6631  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '('}
   {6631}
6632  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'else'}
   {6632}
6633  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '*'}
   {6633}
6634  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '-='}
   {6634}
6635  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'identifier'}
   {6635}
6636  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '<='}
   {6636}
6637  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '>'}
   {6637}
6638  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'void'}
   {6638}
6639  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '/='}
   {6639}
6640  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '/'}
   {6640}
6641  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'while'}
   {6641}
6642  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '-'}
   {6642}
6643  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': ';'}
   {6643}
6644  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '=='}
   {6644}
6645  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '<'}
   {6645}
6646  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'break'}
   {6646}
6647  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '='}
   {6647}
6648  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '}'}
   {6648}
6649  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '+='}
   {6649}
6650  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '+'}
   {6650}
6651  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '*='}
   {6651}
6652  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '{'}
   {6652}
6653  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'continue'}
   {6653}
6654  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': '>='}
   {6654}
6655  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': ')'}
   {6655}
6656  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'float'}
   {6656}
6657  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'double'}
   {6657}
6658  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'char'}
   {6658}
6659  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 72, 'isTer': True, 'accept': 'number'}
   {6659}
6660  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {6660}
6661  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {6661}
6662  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '!='}
   {6662}
6663  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': ','}
   {6663}
6664  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '#'}
   {6664}
6665  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {6665}
6666  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {6666}
6667  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '('}
   {6667}
6668  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {6668}
6669  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '*'}
   {6669}
6670  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '-='}
   {6670}
6671  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {6671}
6672  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '<='}
   {6672}
6673  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '>'}
   {6673}
6674  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {6674}
6675  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '/='}
   {6675}
6676  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '/'}
   {6676}
6677  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {6677}
6678  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '-'}
   {6678}
6679  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': ';'}
   {6679}
6680  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '=='}
   {6680}
6681  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '<'}
   {6681}
6682  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {6682}
6683  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '='}
   {6683}
6684  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '}'}
   {6684}
6685  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '+='}
   {6685}
6686  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '+'}
   {6686}
6687  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '*='}
   {6687}
6688  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '{'}
   {6688}
6689  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {6689}
6690  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '>='}
   {6690}
6691  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': ')'}
   {6691}
6692  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {6692}
6693  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {6693}
6694  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {6694}
6695  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {6695}
6696  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {6696}
6697  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {6697}
6698  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '!='}
   {6698}
6699  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': ','}
   {6699}
6700  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '#'}
   {6700}
6701  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {6701}
6702  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {6702}
6703  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '('}
   {6703}
6704  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {6704}
6705  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '*'}
   {6705}
6706  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '-='}
   {6706}
6707  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {6707}
6708  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '<='}
   {6708}
6709  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '>'}
   {6709}
6710  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {6710}
6711  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '/='}
   {6711}
6712  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '/'}
   {6712}
6713  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {6713}
6714  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '-'}
   {6714}
6715  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': ';'}
   {6715}
6716  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '=='}
   {6716}
6717  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '<'}
   {6717}
6718  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {6718}
6719  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '='}
   {6719}
6720  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '}'}
   {6720}
6721  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '+='}
   {6721}
6722  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '+'}
   {6722}
6723  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '*='}
   {6723}
6724  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '{'}
   {6724}
6725  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {6725}
6726  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '>='}
   {6726}
6727  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': ')'}
   {6727}
6728  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {6728}
6729  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {6729}
6730  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {6730}
6731  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {6731}
6732  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6732, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6733  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6733, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6734  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '!='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 6734, 1358, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6735  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': ','}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 6735, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6736  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '#'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 6736, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6737  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 6737, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6738  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 6738, 1362, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6739  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '('}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 6739, 1363, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6740  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6740, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6741  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '*'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6741, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6742  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '-='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6742, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6743  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6743, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6744  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '<='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6744, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6745  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '>'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6745, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6746  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6746, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6747  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '/='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6747, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6748  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '/'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6748, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6749  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6749, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6750  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '-'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6750, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6751  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': ';'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6751, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6752  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '=='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6752, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6753  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '<'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6753, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6754  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6754, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6755  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6755, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6756  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '}'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6756, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6757  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '+='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6757, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6758  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '+'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6758, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6759  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '*='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6759, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6760  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '{'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6760, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6761  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6761, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6762  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': '>='}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6762, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6763  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': ')'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6763, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6764  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6764, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6765  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6765, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6766  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6766, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6767  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {3343, 1334, 1341, 1344, 1345, 1348, 1350, 1352, 1353, 1358, 1362, 1363, 6767, 1406, 3199, 1413, 1416, 1417, 1420, 1422, 1424, 1425, 1430, 1434, 1435, 3775, 1478, 3271, 1485, 1488, 1489, 1492, 1494, 1496, 1497, 1502, 1506, 1507}
6768  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {6768}
6769  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {6769}
6770  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '!='}
   {6770}
6771  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': ','}
   {6771}
6772  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '#'}
   {6772}
6773  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {6773}
6774  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {6774}
6775  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '('}
   {6775}
6776  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {6776}
6777  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '*'}
   {6777}
6778  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '-='}
   {6778}
6779  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {6779}
6780  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '<='}
   {6780}
6781  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '>'}
   {6781}
6782  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {6782}
6783  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '/='}
   {6783}
6784  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '/'}
   {6784}
6785  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {6785}
6786  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '-'}
   {6786}
6787  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': ';'}
   {6787}
6788  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '=='}
   {6788}
6789  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '<'}
   {6789}
6790  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {6790}
6791  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '='}
   {6791}
6792  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '}'}
   {6792}
6793  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '+='}
   {6793}
6794  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '+'}
   {6794}
6795  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '*='}
   {6795}
6796  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '{'}
   {6796}
6797  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {6797}
6798  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': '>='}
   {6798}
6799  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': ')'}
   {6799}
6800  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {6800}
6801  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {6801}
6802  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {6802}
6803  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {6803}
6804  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {515, 5508, 6660, 587, 5580, 3151, 720, 2703, 5904, 659, 5076, 6804, 5652, 5724, 6876, 2719, 3043, 5796, 6372, 6012, 6120, 371, 5364, 6264, 443, 5436}
6805  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {515, 5509, 6661, 587, 5581, 3151, 2703, 721, 5905, 659, 5077, 5653, 6805, 5725, 6877, 2719, 3043, 5797, 6373, 6121, 6013, 371, 5365, 6265, 443, 5437}
6806  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '!='}
   {515, 5510, 6662, 587, 5582, 3151, 2703, 722, 659, 5906, 5078, 6806, 5654, 5726, 2719, 6878, 3043, 5798, 6374, 6122, 6014, 371, 5366, 6266, 443, 5438}
6807  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': ','}
   {515, 5511, 6663, 587, 3151, 2703, 5583, 723, 659, 5907, 5655, 5079, 6807, 6015, 5727, 2719, 6879, 3043, 5799, 6375, 6267, 6123, 371, 5367, 443, 5439}
6808  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '#'}
   {5440, 6016, 515, 5512, 6664, 587, 3151, 2703, 5584, 659, 724, 5908, 5080, 6808, 5656, 2719, 5728, 6880, 3043, 5800, 6376, 6124, 371, 5368, 443, 6268}
6809  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {5441, 6017, 515, 5513, 6665, 587, 3151, 2703, 5585, 659, 725, 5909, 6809, 5081, 5657, 2719, 5729, 6881, 3043, 5801, 6377, 6125, 371, 5369, 443, 6269}
6810  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {5442, 515, 6018, 5514, 587, 6666, 3151, 2703, 5586, 659, 726, 5910, 5658, 6810, 5082, 2719, 5730, 3043, 6882, 5802, 6378, 6126, 371, 5370, 443, 6270}
6811  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '('}
   {515, 5443, 6019, 587, 5515, 6667, 5371, 3151, 2703, 659, 5587, 727, 5911, 5083, 5659, 6811, 2719, 5731, 3043, 6883, 5803, 6379, 6127, 371, 443, 6271}
6812  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 6812, 5084, 5660, 2719, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
6813  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '*'}
   {6273, 515, 5445, 6021, 587, 5517, 6669, 3151, 2703, 659, 5589, 729, 5913, 5661, 6813, 5085, 2719, 3043, 5733, 6885, 5805, 6381, 6129, 371, 443, 5373}
6814  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '-='}
   {6274, 515, 5446, 6022, 587, 5518, 3151, 2703, 6670, 659, 5590, 730, 5914, 5662, 6814, 5086, 2719, 3043, 5734, 6886, 5806, 6382, 6130, 371, 443, 5374}
6815  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {515, 6275, 5447, 6023, 587, 3151, 2703, 5519, 6671, 659, 5591, 731, 5915, 6815, 5663, 5087, 2719, 3043, 5735, 6887, 5807, 6383, 371, 6131, 443, 5375}
6816  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '<='}
   {5376, 515, 6276, 5448, 6024, 587, 3151, 2703, 5520, 6672, 659, 5592, 732, 5916, 2719, 6816, 5664, 5088, 3043, 5736, 6888, 5808, 6384, 371, 6132, 443}
6817  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '>'}
   {5377, 515, 6277, 5449, 6025, 587, 3151, 2703, 5521, 6673, 659, 5593, 733, 5917, 2719, 6817, 5089, 5665, 3043, 5737, 6889, 5809, 6385, 371, 6133, 443}
6818  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {5378, 515, 6278, 5450, 587, 6026, 3151, 2703, 5522, 659, 6674, 5594, 734, 2719, 5918, 6818, 5666, 5090, 3043, 5738, 6890, 5810, 371, 6386, 6134, 443}
6819  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '/='}
   {515, 5379, 6279, 587, 5451, 6027, 3151, 2703, 659, 5523, 6675, 5595, 735, 2719, 5919, 5667, 6819, 5091, 3043, 5739, 6891, 371, 5811, 6387, 6135, 443}
6820  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '/'}
   {515, 5380, 6280, 587, 5452, 6028, 3151, 2703, 659, 5524, 6676, 5596, 2719, 736, 5920, 3043, 5092, 6820, 5668, 5740, 6892, 371, 5812, 6388, 6136, 443}
6821  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {515, 5381, 6281, 587, 5453, 6029, 3151, 2703, 659, 5525, 6677, 5597, 2719, 737, 5921, 3043, 5093, 5669, 6821, 5741, 6893, 371, 5813, 6389, 6137, 443}
6822  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '-'}
   {515, 5382, 6282, 587, 5454, 3151, 2703, 6030, 659, 5526, 6678, 5598, 2719, 738, 3043, 5922, 5670, 5094, 6822, 5742, 6894, 371, 5814, 6390, 6138, 443}
6823  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': ';'}
   {515, 5383, 587, 6283, 3151, 2703, 5455, 6031, 659, 5527, 6679, 6391, 2719, 5599, 739, 3043, 5923, 5671, 5095, 6823, 6139, 5743, 6895, 371, 5815, 443}
6824  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '=='}
   {515, 5384, 587, 6284, 3151, 2703, 5456, 6032, 659, 5528, 6680, 2719, 6392, 5600, 3043, 740, 5924, 6824, 5672, 5096, 5744, 6896, 371, 5816, 443, 6140}
6825  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '<'}
   {515, 5385, 587, 6285, 3151, 2703, 5457, 6033, 659, 5529, 6681, 2719, 5601, 3043, 741, 5925, 6393, 6825, 5097, 5673, 5745, 6897, 371, 5817, 443, 6141}
6826  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {515, 5386, 587, 6286, 3151, 2703, 5458, 659, 6034, 5530, 6682, 2719, 5602, 3043, 742, 5926, 5098, 5674, 6826, 6394, 5746, 371, 6898, 5818, 443, 6142}
6827  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '='}
   {515, 587, 5387, 3151, 2703, 6287, 659, 5459, 6035, 5531, 6683, 5819, 2719, 3043, 5603, 743, 5927, 5099, 5675, 6827, 6395, 5747, 371, 6899, 443, 6143}
6828  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '}'}
   {6144, 515, 587, 5388, 3151, 2703, 6288, 659, 5460, 6036, 5532, 6684, 2719, 3043, 5604, 744, 5928, 6828, 5100, 5676, 371, 5748, 6396, 6900, 443, 5820}
6829  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '+='}
   {6145, 515, 587, 5389, 3151, 2703, 6289, 659, 5461, 6037, 5533, 6685, 2719, 3043, 5605, 745, 5929, 5677, 6829, 5101, 371, 5749, 6901, 6397, 443, 5821}
6830  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '+'}
   {6146, 515, 587, 5390, 3151, 2703, 6290, 659, 5462, 6038, 5534, 2719, 6686, 3043, 5606, 746, 5930, 5102, 6830, 5678, 371, 5750, 6902, 443, 6398, 5822}
6831  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '*='}
   {515, 6147, 6399, 587, 5391, 3151, 2703, 659, 6291, 5463, 6039, 2719, 5535, 6687, 3043, 5607, 747, 5931, 6903, 6831, 5679, 5103, 371, 5751, 443, 5823}
6832  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '{'}
   {5824, 6400, 515, 6148, 587, 3151, 5392, 2703, 659, 6292, 5464, 6040, 2719, 5536, 6688, 3043, 5608, 748, 5932, 6832, 5680, 5104, 371, 6904, 5752, 443}
6833  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {5825, 6401, 515, 6149, 587, 3151, 2703, 5393, 659, 6293, 5465, 6041, 2719, 5537, 6689, 3043, 5609, 749, 5933, 6833, 5105, 5681, 371, 6905, 5753, 443}
6834  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': '>='}
   {5826, 515, 6402, 6150, 587, 3151, 2703, 5394, 659, 6294, 5466, 6042, 2719, 5538, 3043, 6690, 6906, 5610, 750, 5934, 6834, 5682, 5106, 371, 5754, 443}
6835  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': ')'}
   {515, 5827, 6403, 6151, 587, 3151, 2703, 659, 5395, 6295, 5467, 6043, 2719, 3043, 5539, 6691, 5611, 751, 5935, 5683, 6835, 5107, 371, 443, 5755, 6907}
6836  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {515, 5828, 6404, 6908, 6152, 587, 3151, 2703, 659, 5396, 6296, 5468, 6044, 2719, 3043, 5540, 6692, 5612, 752, 5936, 371, 5108, 6836, 5684, 443, 5756}
6837  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {515, 5829, 6405, 6153, 6909, 587, 3151, 2703, 659, 5397, 6297, 5469, 6045, 2719, 3043, 5541, 6693, 5613, 753, 5937, 371, 5109, 5685, 6837, 443, 5757}
6838  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {515, 5830, 6406, 6154, 587, 6910, 3151, 2703, 659, 5398, 6298, 5470, 2719, 6046, 3043, 5542, 6694, 5614, 754, 371, 5938, 5686, 5110, 6838, 443, 5758}
6839  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {515, 5831, 6407, 587, 6155, 3151, 2703, 659, 6911, 5399, 6299, 2719, 5471, 6047, 3043, 5543, 6695, 6839, 5615, 755, 5111, 371, 5939, 5687, 443, 5759}
6840  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'return'}
   {6840}
6841  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'for'}
   {6841}
6842  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '!='}
   {6842}
6843  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': ','}
   {6843}
6844  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '#'}
   {6844}
6845  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'int'}
   {6845}
6846  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'if'}
   {6846}
6847  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '('}
   {6847}
6848  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'else'}
   {6848}
6849  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '*'}
   {6849}
6850  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '-='}
   {6850}
6851  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'identifier'}
   {6851}
6852  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '<='}
   {6852}
6853  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '>'}
   {6853}
6854  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'void'}
   {6854}
6855  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '/='}
   {6855}
6856  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '/'}
   {6856}
6857  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'while'}
   {6857}
6858  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '-'}
   {6858}
6859  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': ';'}
   {6859}
6860  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '=='}
   {6860}
6861  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '<'}
   {6861}
6862  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'break'}
   {6862}
6863  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '='}
   {6863}
6864  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '}'}
   {6864}
6865  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '+='}
   {6865}
6866  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '+'}
   {6866}
6867  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '*='}
   {6867}
6868  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '{'}
   {6868}
6869  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'continue'}
   {6869}
6870  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': '>='}
   {6870}
6871  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': ')'}
   {6871}
6872  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'float'}
   {6872}
6873  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'double'}
   {6873}
6874  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'char'}
   {6874}
6875  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 73, 'isTer': True, 'accept': 'number'}
   {6875}
6876  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {6876}
6877  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {6877}
6878  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '!='}
   {6878}
6879  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': ','}
   {6879}
6880  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '#'}
   {6880}
6881  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {6881}
6882  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {6882}
6883  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '('}
   {6883}
6884  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {6884}
6885  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '*'}
   {6885}
6886  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '-='}
   {6886}
6887  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {6887}
6888  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '<='}
   {6888}
6889  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '>'}
   {6889}
6890  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {6890}
6891  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '/='}
   {6891}
6892  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '/'}
   {6892}
6893  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {6893}
6894  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '-'}
   {6894}
6895  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': ';'}
   {6895}
6896  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '=='}
   {6896}
6897  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '<'}
   {6897}
6898  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {6898}
6899  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '='}
   {6899}
6900  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '}'}
   {6900}
6901  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '+='}
   {6901}
6902  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '+'}
   {6902}
6903  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '*='}
   {6903}
6904  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '{'}
   {6904}
6905  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {6905}
6906  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '>='}
   {6906}
6907  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': ')'}
   {6907}
6908  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {6908}
6909  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {6909}
6910  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {6910}
6911  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {6911}
6912  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {6912}
6913  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {6913}
6914  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '!='}
   {6914}
6915  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': ','}
   {6915}
6916  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '#'}
   {6916}
6917  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {6917}
6918  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {6918}
6919  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '('}
   {6919}
6920  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {6920}
6921  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '*'}
   {6921}
6922  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '-='}
   {6922}
6923  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {6923}
6924  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '<='}
   {6924}
6925  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '>'}
   {6925}
6926  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {6926}
6927  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '/='}
   {6927}
6928  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '/'}
   {6928}
6929  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {6929}
6930  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '-'}
   {6930}
6931  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': ';'}
   {6931}
6932  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '=='}
   {6932}
6933  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '<'}
   {6933}
6934  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {6934}
6935  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '='}
   {6935}
6936  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '}'}
   {6936}
6937  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '+='}
   {6937}
6938  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '+'}
   {6938}
6939  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '*='}
   {6939}
6940  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '{'}
   {6940}
6941  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {6941}
6942  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '>='}
   {6942}
6943  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': ')'}
   {6943}
6944  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {6944}
6945  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {6945}
6946  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {6946}
6947  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {6947}
6948  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {515, 6948, 587, 659, 371, 755, 727, 443, 731}
6949  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {515, 6949, 587, 659, 371, 755, 727, 443, 731}
6950  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '!='}
   {515, 6950, 587, 659, 371, 755, 727, 443, 731}
6951  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': ','}
   {515, 6951, 587, 659, 371, 755, 727, 443, 731}
6952  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '#'}
   {515, 6952, 587, 659, 371, 755, 727, 443, 731}
6953  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {515, 6953, 587, 659, 371, 755, 727, 443, 731}
6954  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {515, 6954, 587, 659, 371, 755, 727, 443, 731}
6955  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '('}
   {515, 587, 6955, 659, 371, 755, 727, 443, 731}
6956  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {515, 587, 6956, 659, 371, 755, 727, 443, 731}
6957  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '*'}
   {515, 587, 6957, 659, 371, 755, 727, 443, 731}
6958  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '-='}
   {515, 587, 6958, 659, 371, 755, 727, 443, 731}
6959  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {515, 587, 6959, 659, 371, 755, 727, 443, 731}
6960  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '<='}
   {515, 587, 6960, 659, 371, 755, 727, 443, 731}
6961  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '>'}
   {515, 587, 6961, 659, 371, 755, 727, 443, 731}
6962  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {515, 587, 6962, 659, 371, 755, 727, 443, 731}
6963  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '/='}
   {515, 587, 6963, 659, 371, 755, 727, 443, 731}
6964  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '/'}
   {515, 587, 659, 6964, 371, 755, 727, 443, 731}
6965  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {515, 587, 659, 371, 6965, 755, 727, 443, 731}
6966  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '-'}
   {515, 587, 659, 371, 755, 6966, 727, 443, 731}
6967  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': ';'}
   {515, 587, 6967, 659, 371, 755, 727, 443, 731}
6968  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '=='}
   {515, 587, 659, 371, 755, 727, 6968, 443, 731}
6969  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '<'}
   {515, 587, 659, 371, 755, 727, 6969, 443, 731}
6970  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {515, 587, 659, 371, 755, 727, 6970, 443, 731}
6971  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '='}
   {515, 587, 659, 371, 443, 755, 727, 6971, 731}
6972  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '}'}
   {515, 587, 659, 371, 755, 727, 443, 6972, 731}
6973  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '+='}
   {515, 587, 659, 371, 755, 727, 443, 6973, 731}
6974  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '+'}
   {515, 587, 659, 371, 731, 755, 727, 443, 6974}
6975  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '*='}
   {515, 587, 659, 371, 755, 727, 443, 731, 6975}
6976  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '{'}
   {6976, 515, 587, 659, 371, 755, 727, 443, 731}
6977  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {6977, 515, 587, 659, 371, 755, 727, 443, 731}
6978  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': '>='}
   {6978, 515, 587, 659, 371, 755, 727, 443, 731}
6979  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': ')'}
   {515, 6979, 587, 659, 371, 755, 727, 443, 731}
6980  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {515, 6980, 587, 659, 371, 755, 727, 443, 731}
6981  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {515, 6981, 587, 659, 371, 755, 727, 443, 731}
6982  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {515, 6982, 587, 659, 371, 755, 727, 443, 731}
6983  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {515, 6983, 587, 659, 371, 755, 727, 443, 731}
6984  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 6984, 1352, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6985  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 6985, 1353, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6986  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '!='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 6986, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6987  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': ','}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 6987, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6988  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '#'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 6988, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6989  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 6989, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6990  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 6990, 1358, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6991  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '('}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 6991, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6992  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 6992, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6993  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '*'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 6993, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6994  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '-='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 6994, 1362, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6995  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 6995, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6996  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '<='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 6996, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6997  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '>'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 6997, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6998  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 6998, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
6999  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '/='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 6999, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7000  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '/'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7000, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7001  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7001, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7002  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '-'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7002, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7003  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': ';'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7003, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7004  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '=='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7004, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7005  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '<'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7005, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7006  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7006, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7007  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7007, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7008  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '}'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7008, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7009  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '+='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7009, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7010  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '+'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7010, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7011  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '*='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7011, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7012  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '{'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7012, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7013  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7013, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7014  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': '>='}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7014, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7015  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': ')'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7015, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7016  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7016, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7017  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7017, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7018  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7018, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7019  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {3331, 1334, 1341, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1358, 1362, 7019, 3187, 1406, 1413, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1430, 1434, 3763, 3259, 1478, 1485, 1488, 1489, 1492, 1494, 1495, 1496, 1497, 1502, 1506}
7020  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {7020}
7021  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {7021}
7022  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '!='}
   {7022}
7023  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': ','}
   {7023}
7024  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '#'}
   {7024}
7025  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {7025}
7026  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {7026}
7027  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '('}
   {7027}
7028  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {7028}
7029  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '*'}
   {7029}
7030  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '-='}
   {7030}
7031  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {7031}
7032  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '<='}
   {7032}
7033  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '>'}
   {7033}
7034  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {7034}
7035  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '/='}
   {7035}
7036  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '/'}
   {7036}
7037  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {7037}
7038  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '-'}
   {7038}
7039  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': ';'}
   {7039}
7040  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '=='}
   {7040}
7041  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '<'}
   {7041}
7042  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {7042}
7043  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '='}
   {7043}
7044  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '}'}
   {7044}
7045  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '+='}
   {7045}
7046  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '+'}
   {7046}
7047  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '*='}
   {7047}
7048  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '{'}
   {7048}
7049  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {7049}
7050  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': '>='}
   {7050}
7051  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': ')'}
   {7051}
7052  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {7052}
7053  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {7053}
7054  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {7054}
7055  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {7055}
7056  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {7056, 2731}
7057  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {7057, 2731}
7058  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '!='}
   {7058, 2731}
7059  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': ','}
   {7059, 2731}
7060  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '#'}
   {2731, 7060}
7061  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {2731, 7061}
7062  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {2731, 7062}
7063  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '('}
   {2731, 7063}
7064  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {7064, 2731}
7065  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '*'}
   {7065, 2731}
7066  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '-='}
   {7066, 2731}
7067  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {7067, 2731}
7068  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '<='}
   {2731, 7068}
7069  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '>'}
   {2731, 7069}
7070  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {2731, 7070}
7071  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '/='}
   {2731, 7071}
7072  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '/'}
   {7072, 2731}
7073  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {7073, 2731}
7074  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '-'}
   {7074, 2731}
7075  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': ';'}
   {7075, 2731}
7076  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '=='}
   {2731, 7076}
7077  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '<'}
   {2731, 7077}
7078  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {2731, 7078}
7079  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '='}
   {2731, 7079}
7080  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '}'}
   {7080, 2731}
7081  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '+='}
   {7081, 2731}
7082  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '+'}
   {7082, 2731}
7083  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '*='}
   {7083, 2731}
7084  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '{'}
   {2731, 7084}
7085  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {2731, 7085}
7086  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': '>='}
   {2731, 7086}
7087  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': ')'}
   {2731, 7087}
7088  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {7088, 2731}
7089  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {7089, 2731}
7090  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {7090, 2731}
7091  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {7091, 2731}
7092  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {7092}
7093  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {7093}
7094  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '!='}
   {7094}
7095  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': ','}
   {7095}
7096  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '#'}
   {7096}
7097  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {7097}
7098  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {7098}
7099  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '('}
   {7099}
7100  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {7100}
7101  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '*'}
   {7101}
7102  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '-='}
   {7102}
7103  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {7103}
7104  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '<='}
   {7104}
7105  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '>'}
   {7105}
7106  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {7106}
7107  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '/='}
   {7107}
7108  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '/'}
   {7108}
7109  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {7109}
7110  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '-'}
   {7110}
7111  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': ';'}
   {7111}
7112  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '=='}
   {7112}
7113  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '<'}
   {7113}
7114  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {7114}
7115  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '='}
   {7115}
7116  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '}'}
   {7116}
7117  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '+='}
   {7117}
7118  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '+'}
   {7118}
7119  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '*='}
   {7119}
7120  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '{'}
   {7120}
7121  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {7121}
7122  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': '>='}
   {7122}
7123  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': ')'}
   {7123}
7124  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {7124}
7125  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {7125}
7126  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {7126}
7127  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {7127}
7128  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {515, 5508, 6660, 587, 5580, 3151, 720, 2703, 5904, 659, 5076, 5652, 7128, 5724, 6876, 2719, 3043, 5796, 6372, 6012, 6120, 371, 5364, 6264, 443, 5436}
7129  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {515, 5509, 6661, 587, 5581, 3151, 2703, 721, 5905, 659, 5077, 5653, 7129, 5725, 6877, 2719, 3043, 5797, 6373, 6121, 6013, 371, 5365, 6265, 443, 5437}
7130  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '!='}
   {515, 5510, 6662, 587, 5582, 3151, 2703, 722, 659, 5906, 5078, 5654, 7130, 5726, 2719, 6878, 3043, 5798, 6374, 6122, 6014, 371, 5366, 6266, 443, 5438}
7131  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': ','}
   {515, 5511, 6663, 587, 3151, 2703, 5583, 723, 659, 5907, 5655, 5079, 6015, 7131, 5727, 2719, 6879, 3043, 5799, 6375, 6267, 6123, 371, 5367, 443, 5439}
7132  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '#'}
   {5440, 6016, 515, 5512, 6664, 587, 3151, 2703, 5584, 659, 724, 5908, 5080, 5656, 7132, 2719, 5728, 6880, 3043, 5800, 6376, 6124, 371, 5368, 443, 6268}
7133  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {5441, 6017, 515, 5513, 6665, 587, 3151, 2703, 5585, 659, 725, 5909, 5657, 5081, 7133, 2719, 5729, 6881, 3043, 5801, 6377, 6125, 371, 5369, 443, 6269}
7134  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {5442, 515, 6018, 5514, 587, 6666, 3151, 2703, 5586, 659, 726, 5910, 5658, 5082, 7134, 2719, 5730, 3043, 6882, 5802, 6378, 6126, 371, 5370, 443, 6270}
7135  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '('}
   {515, 5443, 6019, 587, 5515, 6667, 5371, 3151, 2703, 659, 5587, 727, 5911, 5083, 5659, 7135, 2719, 5731, 3043, 6883, 5803, 6379, 6127, 371, 443, 6271}
7136  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {6272, 515, 5444, 6020, 587, 5516, 6668, 3151, 2703, 659, 5588, 728, 5912, 5084, 5660, 2719, 7136, 3043, 5732, 6884, 5804, 6380, 6128, 371, 443, 5372}
7137  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '*'}
   {6273, 515, 5445, 6021, 587, 5517, 6669, 3151, 2703, 659, 5589, 729, 5913, 5661, 5085, 2719, 7137, 3043, 5733, 6885, 5805, 6381, 6129, 371, 443, 5373}
7138  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '-='}
   {6274, 515, 5446, 6022, 587, 5518, 3151, 2703, 6670, 659, 5590, 730, 5914, 5662, 5086, 2719, 7138, 3043, 5734, 6886, 5806, 6382, 6130, 371, 443, 5374}
7139  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {515, 6275, 5447, 6023, 587, 3151, 2703, 5519, 6671, 659, 5591, 731, 5915, 5663, 5087, 2719, 7139, 3043, 5735, 6887, 5807, 6383, 371, 6131, 443, 5375}
7140  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '<='}
   {5376, 515, 6276, 5448, 6024, 587, 3151, 2703, 5520, 6672, 659, 5592, 732, 5916, 2719, 5664, 5088, 3043, 7140, 5736, 6888, 5808, 6384, 371, 6132, 443}
7141  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '>'}
   {5377, 515, 6277, 5449, 6025, 587, 3151, 2703, 5521, 6673, 659, 5593, 733, 5917, 2719, 5665, 5089, 3043, 7141, 5737, 6889, 5809, 6385, 371, 6133, 443}
7142  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {5378, 515, 6278, 5450, 587, 6026, 3151, 2703, 5522, 659, 6674, 5594, 734, 2719, 5918, 5666, 5090, 3043, 7142, 5738, 6890, 5810, 371, 6386, 6134, 443}
7143  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '/='}
   {515, 5379, 6279, 587, 5451, 6027, 3151, 2703, 659, 5523, 6675, 5595, 735, 2719, 5919, 5091, 5667, 3043, 7143, 5739, 6891, 371, 5811, 6387, 6135, 443}
7144  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '/'}
   {515, 5380, 6280, 587, 5452, 6028, 3151, 2703, 659, 5524, 6676, 5596, 2719, 736, 5920, 3043, 5092, 5668, 7144, 5740, 6892, 371, 5812, 6388, 6136, 443}
7145  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {515, 5381, 6281, 587, 5453, 6029, 3151, 2703, 659, 5525, 6677, 5597, 2719, 737, 5921, 3043, 5093, 5669, 7145, 5741, 6893, 371, 5813, 6389, 6137, 443}
7146  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '-'}
   {515, 5382, 6282, 587, 5454, 3151, 2703, 6030, 659, 5526, 6678, 5598, 2719, 738, 3043, 5922, 5094, 5670, 7146, 5742, 6894, 371, 5814, 6390, 6138, 443}
7147  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': ';'}
   {515, 5383, 587, 6283, 3151, 2703, 5455, 6031, 659, 5527, 6679, 6391, 2719, 5599, 739, 3043, 5923, 5671, 5095, 6139, 7147, 5743, 6895, 371, 5815, 443}
7148  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '=='}
   {515, 5384, 587, 6284, 3151, 2703, 5456, 6032, 659, 5528, 6680, 2719, 6392, 5600, 3043, 740, 5924, 5672, 5096, 7148, 5744, 6896, 371, 5816, 443, 6140}
7149  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '<'}
   {515, 5385, 587, 6285, 3151, 2703, 5457, 6033, 659, 5529, 6681, 2719, 5601, 3043, 741, 5925, 6393, 5097, 5673, 7149, 5745, 6897, 371, 5817, 443, 6141}
7150  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {515, 5386, 587, 6286, 3151, 2703, 5458, 659, 6034, 5530, 6682, 2719, 5602, 3043, 742, 5926, 5098, 5674, 6394, 7150, 5746, 371, 6898, 5818, 443, 6142}
7151  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '='}
   {515, 587, 5387, 3151, 2703, 6287, 659, 5459, 6035, 5531, 6683, 5819, 2719, 3043, 5603, 743, 5927, 5675, 5099, 7151, 6395, 5747, 371, 6899, 443, 6143}
7152  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '}'}
   {6144, 515, 587, 5388, 3151, 2703, 6288, 659, 5460, 6036, 5532, 6684, 2719, 3043, 5604, 744, 5928, 5100, 5676, 7152, 371, 5748, 6396, 6900, 443, 5820}
7153  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '+='}
   {6145, 515, 587, 5389, 3151, 2703, 6289, 659, 5461, 6037, 5533, 6685, 2719, 3043, 5605, 745, 5929, 5677, 5101, 7153, 371, 5749, 6901, 6397, 443, 5821}
7154  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '+'}
   {6146, 515, 587, 5390, 3151, 2703, 6290, 659, 5462, 6038, 5534, 2719, 6686, 3043, 5606, 746, 5930, 5678, 5102, 7154, 371, 5750, 6902, 443, 6398, 5822}
7155  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '*='}
   {515, 6147, 6399, 587, 5391, 3151, 2703, 659, 6291, 5463, 6039, 2719, 5535, 6687, 3043, 5607, 747, 5931, 6903, 5679, 5103, 7155, 371, 5751, 443, 5823}
7156  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '{'}
   {5824, 6400, 515, 6148, 587, 3151, 5392, 2703, 659, 6292, 5464, 6040, 2719, 5536, 6688, 3043, 5608, 748, 5932, 5680, 5104, 6904, 371, 7156, 5752, 443}
7157  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {5825, 6401, 515, 6149, 587, 3151, 2703, 5393, 659, 6293, 5465, 6041, 2719, 5537, 6689, 3043, 5609, 749, 5933, 5681, 5105, 371, 7157, 6905, 5753, 443}
7158  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': '>='}
   {5826, 515, 6402, 6150, 587, 3151, 2703, 5394, 659, 6294, 5466, 6042, 2719, 5538, 3043, 6690, 6906, 5610, 750, 5934, 5682, 5106, 371, 7158, 5754, 443}
7159  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': ')'}
   {515, 5827, 6403, 6151, 587, 3151, 2703, 659, 5395, 6295, 5467, 6043, 2719, 3043, 5539, 6691, 5611, 751, 5935, 5107, 5683, 371, 443, 7159, 5755, 6907}
7160  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {515, 5828, 6404, 6908, 6152, 587, 3151, 2703, 659, 5396, 6296, 5468, 6044, 2719, 3043, 5540, 6692, 5612, 752, 5936, 371, 5108, 5684, 7160, 443, 5756}
7161  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {515, 5829, 6405, 6153, 6909, 587, 3151, 2703, 659, 5397, 6297, 5469, 6045, 2719, 3043, 5541, 6693, 5613, 753, 5937, 371, 5109, 5685, 7161, 443, 5757}
7162  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {515, 5830, 6406, 6154, 587, 6910, 3151, 2703, 659, 5398, 6298, 5470, 2719, 6046, 3043, 5542, 6694, 5614, 754, 371, 5938, 5110, 5686, 7162, 443, 5758}
7163  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {515, 5831, 6407, 587, 6155, 3151, 2703, 659, 6911, 5399, 6299, 2719, 5471, 6047, 3043, 5543, 6695, 5615, 755, 5111, 371, 443, 5687, 5939, 7163, 5759}
7164  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'return'}
   {7164}
7165  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'for'}
   {7165}
7166  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '!='}
   {7166}
7167  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': ','}
   {7167}
7168  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '#'}
   {7168}
7169  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'int'}
   {7169}
7170  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'if'}
   {7170}
7171  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '('}
   {7171}
7172  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'else'}
   {7172}
7173  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '*'}
   {7173}
7174  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '-='}
   {7174}
7175  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'identifier'}
   {7175}
7176  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '<='}
   {7176}
7177  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '>'}
   {7177}
7178  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'void'}
   {7178}
7179  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '/='}
   {7179}
7180  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '/'}
   {7180}
7181  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'while'}
   {7181}
7182  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '-'}
   {7182}
7183  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': ';'}
   {7183}
7184  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '=='}
   {7184}
7185  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '<'}
   {7185}
7186  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'break'}
   {7186}
7187  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '='}
   {7187}
7188  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '}'}
   {7188}
7189  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '+='}
   {7189}
7190  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '+'}
   {7190}
7191  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '*='}
   {7191}
7192  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '{'}
   {7192}
7193  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'continue'}
   {7193}
7194  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': '>='}
   {7194}
7195  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': ')'}
   {7195}
7196  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'float'}
   {7196}
7197  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'double'}
   {7197}
7198  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'char'}
   {7198}
7199  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 74, 'isTer': True, 'accept': 'number'}
   {7199}
